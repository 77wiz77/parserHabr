nameList,titleList,tagList,textList
['\n      alexbraun\n    '],[' ...  для бизнеса c React и Angular'],['Блог компании Европлан Разработка веб-сайтов *C# *Angular *ReactJS *'],"['Наша компания разрабатывает десятки продуктов. Ряд продуктов работает на Angular', ' ряд на React. Пользователи систем в зависимости от этапа бизнес-процесса и роли взаимодействует с определенным продуктом. Часто', ' в рамках бизнеса мы должны показывать одни и те же данные в разных продуктах. Эти данные отображаются в виде UI компонентов.В этой статье мы узнаем как можно организовать библиотеки компонентов для решения задач бизнеса. Научимся переиспользовать и запускать React библиотеку внутри Angular. Таким способом мы сможем решать задачи бизнеса гибко и эффективно.']"
['\n      eshulyndina\n    '],['Яндекс.Практикум запустил курс «React-разработчик»'],['Блог компании Яндекс.Практикум JavaScript *ReactJS *Карьера в IT-индустрии TypeScript *'],"['Сервис онлайн-образования Яндекс.Практикум запустил курс «React-разработчик» — двухмесячный интенсив для погружения в экосистему React', ' работы с популярными технологиями и изучения их альтернатив. Курс подойдёт тем', ' кто уже умеет верстать и знает основы JavaScript.\n\r\nВыпускники получат сертификат — официальный документ о дополнительном образовании. \n\n\n']"
['\n      denis-19\n    '],['Энтузиаст создает интерфейс Windows 11 на React в браузере'],['Разработка веб-сайтов *GitHub ReactJS *Разработка под Windows *Софт '],"['\n\r\nРазработчик под ником Blue Edge опубликовал на GitHub проект Windows 11 in React — это визуализация интерфейса Windows 11 в браузере с помощью React. Автор создал сайт win11.blueedge.me', ' где уже доступны основные элементы рабочего стола новой ОС для ознакомления и начального понимания', ' как она работает. ']"
['\n      Elliot_001\n    '],['Введение в React'],['JavaScript *Программирование *Профессиональная литература ReactJS *'],"['Оглавление\n1. Getting started with React\r\n....1.1 Методы добавления React\r\n....1.2 Выбор метода добавления\r\n........1.2.1 Добавление React с помощью тэга <script />\r\n........1.2.2 Добавление React с помощью create-react-app\n2. Basically React\r\n....2.1 React object\r\n....2.2 React element\r\n........2.2.1 CreateElement\r\n........2.2.2 CloneElement\r\n........2.2.3 IsValidElement\r\n........2.2.4 Children\r\n....2.3 React компоненты\r\n........2.3.1 React.Component\r\n........2.3.2 React.Fragment\r\n.........2.3.3 State\r\n.........2.3.4 Events\r\n.........2.3.5 Lifecycle\r\n.........2.3.6 Refs\r\n....2.4 ReactDOM\r\n........2.4.1 Render\r\n........2.4.2 Hydrate\r\n........2.4.3 UnmountComponentAtNode\r\n........2.4.4 CreatePortal\n3. Other topics\r\n....3.1 Lists and Keys\r\n....3.2 Error Handling\r\n........3.2.1 getDerivedStateFromError\r\n........3.2.2 componentDidCatch\nЗаключение\n\nReact — JavaScript-библиотека с открытым исходным кодом для разработки пользовательских интерфейсов.\n\n1. Getting started with React\n1.1 Методы добавления React\r\nСуществует 2 основных метода для добавления React на сайт:\n\n\nС помощью тэга <script />\nС помощью create-react-app\n\n1.2 Выбор метода добавления\r\nВыбор метода зависит от потребностей. Если вы просто хотите добавить немного интерактивности на существующую страницу или хотите просто попробовать React тогда используйте первый метод подключения. Если вы собираетесь построить полноценное React приложение', ' то используйте create-react-app.\n\n1.2.1 Добавление React с помощью тэга <script />\nШаг 1 Добавьте 3 тега в контейнер head на вашей странице:\n<script src=""https://unpkg.com/react@16/umd/react.development.js""></script>\n<script src=""https://unpkg.com/react-dom@16/umd/react-dom.development.js""></script>\n<script src=""https://unpkg.com/babel-standalone@6.15.0/babel.min.js""></script>\r\nЗдесь подключаются библиотеки React и React-dom', ' а также компилятор babel.\nBabel не является обязательным для использования React', ' но полезным для написания кода UI', ' с помощью JSX.\nШаг 2 Добавьте пустой  контейнер на вашу страницу чтобы отметить место', ' где вы хотите что-либо отобразить с помощью React.']"
['\n      markosipenko\n    '],['React.js — Руководство для Rails разработчиков'],['Ruby *Ruby on Rails *ReactJS *'],"['На начальном уровне такие переводы — мой вклад в развитие rails сообщества.\nДальше в тексте все', ' что выделено курсивом', ' мои замечания (таких будет не много)\n\n\n\nВведение в React.js\n\nReact.js — это новый популярный парень из команды JavaScript фреймворков', ' он выделяется своей простотой. Когда другие фреймворки реализуют полный MVC (Model View Controller) подход', "" мы можем сказать React'у реализовать только View (Отображение) (факт — некоторые люди переписывают часть отображения (V) этих фреймворков c помощью React).\n\r\nПриложения с реактом основаны на 2х основных принципах Компоненты и Состояния. Компоненты могут состоять из более мелких компонентов встроенных или пользовательских. Состояния"", ' что ребята из Facebook называют односторонний реактивный поток данных', ' подразумевая что наш интерфейс(UI) будет реагировать на каждое изменение состояния.\n\r\nОдна хорошая особенность React.js это то что он не требует каких-либо дополнительных зависимостей', ' что обеспечивает ему подключаемость с любой js библиотекой. Пользуясь этим', ' мы будем включать его в наш Rails стек для создания внешнего интерфейса или можно сказать для создания «Rails на стероидах».\n\nМакет для отслеживания расходов приложения\n\r\nДля этого гайда мы создадим маленькое приложение с нуля что бы отслеживать наши действия. Каждая запись(дальше', ' тоже самое что и Record) будет состоять из даты', ' названия и суммы. Запись будет рассматриваться как Кредит(Credit) если его сумма больше нуля', ' в противном случае она будет рассматриваться каr дебет. Вот макет проекта:\n\n\n\r\nСуммарно приложение будет вести себя так:\n\nКогда пользователь создает новую запись через горизонтальную форму', ' она будет вставлена в таблицу записей \nПользователь может редактировать любую существующую запись \nКликнув на кнопку Delete он удалит ассоциацию из таблицы \nДобавление', ' редактирование или удаление существующей записи будет обновлять сумму в боксах в верху страницы \n\n\n Инициализация React.js в Rails проект \n']"
['\n      ph_piter\n    '],['Книга «React: современные шаблоны для разработки приложений 2-е издание»'],['Блог компании Издательский дом «Питер» Профессиональная литература ReactJS *'],"[' Привет', ' Хаброжители! Хотите создавать эффективные приложения с помощью React? Тогда эта книга написана для вас. Познакомьтесь c лучшими практиками и шаблонами создания современного кода.\n\r\nВам не потребуются глубокие знания React или функционала JavaScript — достаточно знакомства с принципами работы JavaScript', ' CSS и HTML.\n\r\nАлекс Бэнкс и Ева Порселло научат вас создавать пользовательские интерфейсы', ' которые будут динамически отображать изменения без необходимости перезагрузки страницы даже на крупномасштабных сайтах', ' работающих с огромными массивами данных.']"
['\n      rajdee\n    '],['Обзор релиз-кандидата React v0.14'],['Разработка веб-сайтов *JavaScript *ReactJS *'],"['Мы рады представить вам наш первый релиз-кандидат версии React 0.14! Мы опубликовали в июле анонс предстоящих изменениях', ' но сейчас мы еще больше стабилизировали релиз и нам бы хотелось', ' чтобы вы попробовали его до того', ' как мы выпустим финальную версию.\n\r\nСообщите нам', ' если у вас возникли любые проблемы', ' создав задачу в нашем GitHub репозитории\n\n']"
['\n      Plarium\n    '],['Создаем приложение на JavaScript с помощью React Native'],['Блог компании Plarium JavaScript *Разработка мобильных приложений *API *ReactJS *'],"['В этом уроке мы будем изучать React Native – фреймворк от компании Facebook для создания нативных приложений под iOS и Android. У него много общего с другим очень популярным фреймворком от Facebook – React Javascript', ' который предназначен для построения декларативных пользовательских интерфейсов.\n\n\n']"
['\n      yury-dymov\n    '],"['React.js: собираем с нуля изоморфное / универсальное приложение. Часть 2: добавляем bootstrap', ' страницы и роутинг']",['Node.JS *ReactJS *'],"['\nРазработка изоморфного приложения глазами моей жены\nЭто продолжение статьи про разработку изоморфного приложения с нуля на React.js. В этой части мы добавим несколько страниц', ' bootstrap', ' роутинг', ' концепцию Flux и ее популярную реализацию Redux.']"
['\n      NIX_Solutions\n    '],['Создание кроссплатформенных приложений с помощью React Native'],['Блог компании NIX Программирование *Разработка мобильных приложений *ReactJS *'],"['Предлагаем вашему вниманию перевод статьи', ' которая будет интересна начинающим разработчикам. \n\r\nReact Native — это JS-фреймворк для создания нативно отображаемых iOS- и Android-приложений. В его основе лежит разработанная в Facebook JS-библиотека React', ' предназначенная для создания пользовательских интерфейсов. Но вместо браузеров она ориентирована на мобильные платформы. Иными словами', ' если вы веб-разработчик', ' то можете использовать React Native для написания чистых', ' быстрых мобильных приложений', ' не покидая комфорта привычного фреймворка и единой кодовой базы JavaScript.\n\r\nКонечно', ' мы и раньше слышали обещания об универсальной разработке приложений', ' с помощью фреймворков наподобие Cordova или Titanium. А что насчёт React Native? В этой статье мы рассмотрим данный фреймворк и особенности его работы и поговорим о том', ' насколько удобно использовать React Native для написания iOS- и Android-приложений. \n']"
['\n      oleksm\n    '],['Ionic 2 vs React Native: сравнение фреймворков для создания корпоративных мобильных приложений'],['JavaScript *Разработка мобильных приложений *'],"['Мобильный доступ к данным ускоряет выполнения бизнес-процессов компании. Мобильное согласование служебных записок или утверждение отпусков уже привычная составляющая работы в корпорациях. Мобильные устройства есть у каждого сотрудника', ' таким образом компания может использовать эти устройства без инвестиций в них. Большой зоопарк мобильных устройств необходимо учитывать во время разработки корпоративного мобильного приложения: оно должно работать и иметь одинаковый вид на всех устройствах.\n\r\nВ этой публикации мы рассматриваем создание таких корпоративных мобильных приложений с использованием различных JavaScript фреймворков.\n']"
['\n      dagen\n    '],['Вышел React v16.0'],['JavaScript *ReactJS *'],"['Это перевод поста Эндрю Кларка о выходе столь ожидаемой версии React. Оригинальный пост в блоге React.\nМы с удовольствием сообщаем о выходе React v16.0! Среди изменений некоторые давно ожидаемые нововведения', ' например фрагменты', ' обработка ошибок (error boundaries)', ' порталы', ' поддержка произвольных DOM-атрибутов', ' улучшения в серверном рендере', ' и уменьшенный размер файла.']"
['\n      ru_vds\n    '],['Новшества серверного рендеринга в React 16'],['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['Вышел React 16! Рассказывая об этом событии', ' можно упомянуть множество замечательных новостей (вроде архитектуры ядра Fibers)', ' но лично меня больше всего восхищают улучшения серверного рендеринга. Предлагаю подробно всё это разобрать и сравнить с тем', ' что было раньше. Надеюсь', ' серверный рендеринг в React 16 понравится вам так же', ' как он понравился мне.\n\n']"
['\n      ru_vds\n    '],['React.js: понятное руководство для начинающих'],['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['Автор статьи', ' перевод которой мы публикуем', ' считает', ' что', ' к несчастью', ' в большинстве из существующих руководств по React не уделяется должного внимания ценным практическим приёмам разработки. Такие руководства не всегда дают тому', ' кто по ним занимается', ' понимание того', ' что такое «правильный подход» к работе с React.\n\n\n\r\nВ этом руководстве', ' которое рассчитано на начинающих разработчиков', ' имеющих знания в области HTML', ' JavaScript и CSS', ' будут рассмотрены основы React и самые распространённые ошибки', ' с которыми может столкнуться программист', ' пользующийся данной библиотекой.']"
['\n      VanishMax\n    '],['Перед вами — React Modern Web App'],['Разработка веб-сайтов *Open source *JavaScript *ReactJS *Поисковая оптимизация '],"['Перед тем как начать собирать с нуля Modern Web App нужно разобраться', ' что такое — Современное Веб-Приложение?\nModern Web App (MWA) — приложение', ' придерживающееся всех современных веб-стандартов. Среди них Progressive Web App — возможность скачивать мобильную браузерную версию на телефон и использовать как полноценное приложение. Так же это возможность листать сайт в оффлайне как с мобильного устройства', ' так и с компьютера; современный материальный дизайн; идеальная поисковая оптимизация; и естественно — высокая скорость загрузки.\n\nВот что будет в нашем MWA (советую использовать эту навигацию по статье):\n\nUniversal Web App\nMaterial-ui\nCode Splitting\nПример использования Redux\nМобильная версия\nProgressive Web App\nBabel 7', ' Webpack и многое другое\n\nЛюди на Хабре деловые', ' поэтому сразу ловите ссылку на GitHub репозиторий', ' архив с каждой из стадий разработки и демо. Статья рассчитана на разработчиков', ' знакомых с node.js и react. Вся необходимая теория представлена в необходимом объеме. Расширяйте кругозор', ' переходя по ссылкам.\nПриступим!']"
['\n      ru_vds\n    '],['Анализ и оптимизация React-приложений'],['Блог компании RUVDS.com JavaScript *Анализ и проектирование систем *Клиентская оптимизация *ReactJS *'],"['Люди', ' вроде меня', ' которые борются за высокую производительность сайтов', ' часто тратят на это много времени. Поэтому сейчас я собираюсь раз и навсегда решить проблему низкого быстродействий веб-ресурсов', ' интерфейс которых написан на React. А именно', ' я предлагаю всем', ' кто это читает', ' сегодня же прекратить пользоваться React.\n\n\n\r\nАвтор материала', ' перевод которого мы сегодня публикуем', ' конечно же', ' шутит. Здесь речь пойдёт о том', ' как оптимизировать производительность React-приложений. Кстати', ' прежде чем начать', ' подумаем о том', ' зачем вообще нужна оптимизация сайтов. Пожалуй', ' можно сказать', ' что нужна она для того', ' чтобы сайтом могло бы пользоваться больше людей', ' чем до оптимизации.\n']"
['\n      ru_vds\n    '],['Записки фрилансера: разработка первого React Native-приложения'],['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['Автор материала', ' перевод которого мы публикуем', ' недавно выпустил своё первое мобильное приложение', ' написанное на React Native. Так случилось', ' что это приложение стало и его первым проектом', ' который он создал как программист-фрилансер. Здесь он расскажет о том', ' с чем ему пришлось столкнуться в ходе работы — от инициализации проекта до его публикации в App Store и Google Play.\n\n']"
['\n      glebmachine\n    '],['React Native для самых маленьких. Опыт мобильной разработки'],['Блог компании Конференции Олега Бунина (Онтико) Разработка веб-сайтов *JavaScript *Разработка мобильных приложений *ReactJS *'],"['Однажды', ' в одной продуктовой команде захотели разработать мобильное приложение', ' чтобы проверить гипотезу востребованности продукта и его удобства для пользователей. И то', ' что в команде не было мобильных разработчиков', ' не помешало. Два фронтенд-разработчика взяли React Native и за три месяца написали приложение. Тестирование гипотезы прошло успешно', ' приложение продолжает развивается и вызывает интерес других команд в компании.\n\n\nИзображение из описания инструмента: www.semrush.com/news/position-tracking-on-the-go.\n\r\nЭто краткое описание истории команды Артёма Лашевского', ' который на три месяца из фронтенд-разработчика стал мобильным. Подробнее', ' как это произошло', ' читайте в расшифровке доклада Артёма на FrontendConf 2019: что такое React Native', ' почему именно он', ' пошаговая инструкция создания приложения и выбор нужных библиотек и компонентов. ']"
['\n      raoffonom\n    '],['Аутентификация — CUSTOM SETUP / AWS Amplify + React Native'],['JavaScript *Разработка мобильных приложений *Amazon Web Services *ReactJS *'],"['\nОдна из самых запрашиваемых тем', ' среди подписчиков моего канала Димка Реактнативный — это аутентификация и авторизация в приложении React Native. Поэтому я решил посветить этому вопросу отдельный лонгрид и перед тем как мы начнем кодить', ' необходимо разобраться с определением Аутентификация/Авторизация.']"
['\n      ru_vds\n    '],['Импорт react с древнейших времен до наших дней'],['Блог компании RUVDS.com Разработка веб-сайтов *ReactJS *'],"['\n\r\nПрежде чем мы начнём разговор о способах импорта в веб-проекты библиотеки React', "" покажу современные способы выполнения этой операции и использования хука useState:\n\n// Глобальный подход\nwindow.React.useState()\n// Использование импорта в стиле CommonJS\nconst React = require('react')\nReact.useState()\n// ES-модули"", ' импорт значения', "" экспортируемого по умолчанию\nimport React from 'react'\nReact.useState()\n// ES-модули"", "" именованный импорт\nimport {useState} from 'react'\nuseState()\n// ES-модули"", "" импорт пространства имён\nimport * as React from 'react'\nReact.useState()\n\r\nНиже я расскажу об истоках каждого из этих механизмов"", ' и о том', ' почему я предпочитаю использовать последний из них.']"
['\n      phillennium\n    '],"['Интервью с Дэном Абрамовым: React 17', ' Suspense', ' Redux', ' холивары']",['Блог компании JUG Ru Group JavaScript *Программирование *ReactJS *Интервью '],"['\nГлавный миф о Дэне Абрамове — что он «создал React». Но хотя это и не так', ' сейчас он имеет самое прямое отношение к фреймворку', ' так что поговорить с ним про React очень интересно. Обычно Дэна не увидеть на российских конференциях', ' но нам помог онлайн-формат', ' и на HolyJS его подробно расспросили Наталия Теплухина (член core team Vue.js) и Наталия Короткова (занимается веб-проектами с 2010 года).\nТут получился не поверхностный разговор о погоде', ' а обсуждение технической конкретики для тех', ' кто вдается в детали. Но под конец были и более общие вопросы: когда появится новая документация React', ' переписанная с нуля? Что не так с Redux? Как Дэн воспринимает холивары о фреймворках? Что он может рассказать о релокации?\nТак что', ' если не осилите все технические детали в первой половине интервью', ' переходите ко второй', ' там попроще. Под катом — и видеозапись разговора', ' и текстовая расшифровка.']"
['\n      aio350\n    '],['React: основные подходы к управлению состоянием'],['Разработка веб-сайтов *JavaScript *Программирование *ReactJS *'],"['\n\r\nДоброго времени суток', ' друзья!\n\r\nПредлагаю вашему вниманию простое приложение — список задач. Что в нем особенного', ' спросите вы. Дело в том', ' что я попытался реализовать одну и ту же «тудушку» с использованием четырех разных подходов к управлению состоянием в React-приложениях: useState', ' useContext + useReducer', ' Redux Toolkit и Recoil.\n\r\nНачнем с того', ' что такое состояние приложения', ' и почему так важен выбор правильного инструмента для работы с ним.\n\r\nСостояние — это собирательное понятие для любой информации', ' имеющей отношение к приложению. Это могут быть как данные', ' используемые в приложении', ' такие как тот же список задач или список пользователей', ' так и состояние как таковое', ' например', ' состояние загрузки или состояние формы.\n\r\nУсловно', ' состояние можно разделить на локальное и глобальное. Под локальным состоянием', ' обычно', ' понимается состояние отдельно взятого компонента', ' например', ' состояние формы', ' как правило', ' является локальным состоянием соответствующего компонента. В свою очередь', ' глобальное состояние правильнее именовать распределенным или совместно используемым', ' подразумевая под этим то', ' что такое состояние используется более чем одним компонентом. Условность рассматриваемой градации выражается в том', ' что локальное состояние вполне может использоваться несколькими компонентами (например', ' состояние', ' определенное с помощью useState()', ' может в виде пропов передаваться дочерним компонентам)', ' а глобальное состояние не обязательно используется всеми компонентами приложения (например', ' в Redux', ' где имеется одно хранилище для состояния всего приложения', ' обычно', ' создается отдельный срез (slice) состояния для каждой части UI', ' точнее', ' для логики управления этой частью).']"
['\n      MaxRokatansky\n    '],['React-компоненты шаблонов проектирования'],['Блог компании OTUS JavaScript *Программирование *ReactJS *'],"['Эта документация поможет найти компромиссы между различными шаблонами (patterns) React', ' а также определить', ' когда использование каждого из них будет наиболее целесообразным. Нижеприведенные шаблоны позволят получить более практичный и многократно используемый код', ' придерживаясь принципов проектирования', ' таких как разделение ответственности', ' DRY (Don’t repeat yourself — не повторяй себя) и повторное использование кода. Некоторые из этих шаблонов помогут решить проблемы', ' которые возникают в больших React приложениях', ' таких как пробрасывание (prop drilling) или управление состоянием. Каждый основной шаблон включает пример', ' размещенный на CodeSandBox.Приведенные ниже примеры не являются сложными', ' чтобы не смущать читателя деталями имплементации', ' которые не относятся к концепциям каждого шаблона компонентов.']"
['\n      ssurrokk\n    '],['React Server-Side Rendering (SSR) — руководство новичка'],['Разработка веб-сайтов *ReactJS *'],"['В этом уроке мы поговорим о серверном рендеринге (SSR)', ' его преимуществах и подводных камнях. Затем мы создадим мини React проект и express сервер (Node.js)', ' чтобы продемонстрировать', ' как можно достичь SSR.']"
['\n      jojo97\n    '],['5 практических примеров для изучения фреймворка React'],['Разработка веб-сайтов *JavaScript *ReactJS *'],"['Перевод статьи «5 Practical Examples For Learning The React Framework»', ' Martin Angelov\n\r\nВы вероятно слышали о популярном JavaScript фреймворке от Facebook – React. Он используется на многих популярных веб-сайтах', ' в том числе в Facebook и Instagram. В этой статье вы увидите 5 практических примеров', ' построенных при помощи React', ' которые помогут вам начать работать с этим фреймворком.\n']"
['\n      greebn9k\n    '],['Изоморфные приложения. Взгляд в будущее с React'],['Разработка веб-сайтов *JavaScript *ReactJS *'],"['Оригинал: React To The Future With Isomorphic Apps\n\nИзоморфные приложения. Взгляд в будущее с React\r\nВ разработке программного обеспечения все часто возвращается на круги своя. Так', ' например', ' на заре развития Интернета серверы подгружали контент сразу же на сторону клиента. В последнее же время', ' с разработкой современных веб-фреймворков', ' таких как AngularJS и Ember', ' мы видим тенденцию к обработке запросов на стороне клиента и использованию сервера только для API. Однако', ' это далеко не единственная тенденция. Сейчас происходит медленное возвращение или', ' скорее', ' слияние этих двух архитектур.\n']"
['\n      JiLiZART\n    '],['Изоморфное Приложение с React и Redux'],['JavaScript *ReactJS *'],"['Итак', ' я знаю что ты любишь Todo списки', ' то есть', ' что тебе очень нравится писать Todo списки', ' поэтому мне хочется', ' чтобы ты создал один из них', ' используя новый', ' восхитительный и питательный («nutritious» прим. пер.) Flux фреймворк', ' Redux! Я желаю тебе только лучшего.\n\r\nВ этой статье ты научишься как сконструировать свое собственное Redux приложение', ' не ограничиваясь', ' но так же включая.\n\n\nЦельнозерновой рендеринг на сервере\nРасширенный роутинг', ' богатый Omega-3\nМаслянистая асинхронная загрузка данных\nГладкое функциональное послевкусие\n\n\r\nЕсли это похоже на то', ' чего ты хочешь в этой жизни', ' вперед под кат', ' если нет', ' то не заморачивайся.\n']"
['\n      yury-dymov\n    '],['React.js: собираем с нуля изоморфное / универсальное приложение. Часть 1: собираем стек'],['JavaScript *Node.JS *ReactJS *'],"['\nЛицо моей жены', ' когда она вычитывала эту статью\nЯ решил написать цикл статей', ' который и сам был бы счастлив найти где-то полгода назад. Он будет интересен в первую очередь тем', ' кто хотел бы начать разрабатывать классные приложения на React.js', ' но не знает', ' как подступиться к зоопарку разных технологий и инструментов', ' которые необходимо знать для полноценной front-end разработки в наши дни.\nЯ хочу с нуля реализовать', ' пожалуй', ' наиболее востребованный сценарий: у нас есть серверная часть', ' которая предоставляет REST API. Часть его методов требует', ' чтобы пользователь веб-приложения был авторизован. ']"
['\n      movax10h\n    '],['Готовим плацдарм для react-приложения'],['JavaScript *ReactJS *'],"['\n\r\nЯ хочу рассказать о процессе создание платформы для react приложения', ' которая использует mobx в качестве Model-и. Пройти путь от пустой директории проекта до рабочего примера. Рассмотреть основные моменты', ' на которые я обращал внимание в процессе разработки. Постараюсь насытить текст уточняющими ссылками', ' дополнительные заметки будут выделены курсивом с пометкой «Note:».\n\r\nРассказ будет состоять из двух частей:\n\n\nГотовим плацдарм для react приложения\nMobx + react', ' взгляд со стороны\n\r\nБуду писать «как я вижу»', ' поэтому предложения и замечания по улучшению приветствуются. Надеюсь', ' читатель знает', ' что такое npm', ' node.js и react.js', ' имеет базовые знания о props и state. На момент написания статьи', ' у меня стоит windows и нестабильная node.js 7.3.0 версии. \n']"
['\n      Plarium\n    '],"['N причин', ' чтобы использовать Create React App']",['Блог компании Plarium JavaScript *Программирование *Разработка игр *ReactJS *'],"['\n\r\nCreate React App — отличный инструмент для быстрого старта React-приложений. Вы не тратите время на настройку Webpack', ' Babel и других привычных инструментов. Они заранее настроены и спрятаны', ' так что разработчики могут сфокусироваться на коде и бизнес-логике приложения.\n']"
['\n      KarafiziArthur\n    '],"['React медленный', ' React быстрый: оптимизация React-приложения на практике']",['ReactJS *'],"['Всем привет! Хочу поделиться своим переводом статьи React is Slow', ' React is Fast: Optimizing React Apps in Practice автора François Zaninotto. Надеюсь', ' это кому-то будет полезным.\nКраткое содержание:\n\nИзмерение производительности React\nПочему ты обновился?\nОптимизация через разбиение на компоненты\nshouldComponentUpdate\nRecompose\nRedux\nReselect\nОстерегайтесь объектных литералов в JSX\nЗаключение\n\nReact может быть медленным. Я хочу сказать', ' что любое React приложение среднего размера может оказаться медленным. Но прежде', ' чем искать ему замену', ' вы должны знать', ' что и любое среднее приложение на Angular или Ember может также оказаться медленным.\nХорошая новость в том', ' что если вы действительно заботитесь о производительности', ' то сделать React приложение очень быстрым довольно легко. Об этом — далее в статье.']"
['\n      AloneCoder\n    '],"['Создание React VR-приложения', ' работающего в реальном времени']",['Блог компании Mail.ru Group Разработка веб-сайтов *JavaScript *ReactJS *Разработка под AR и VR *'],"['\nБиблиотека React VR позволяет писать для веба приложения виртуальной реальности с использованием JavaScript и React поверх WebVR API. Эта спецификация поддерживается последними (в некоторых случаях — экспериментальными) версиями браузеров Chrome', ' Firefox и Edge. И для этого вам не нужны очки VR. \nWebVR Experiments — это сайт-витрина', ' демонстрирующий возможности WebVR. Моё внимание привлёк проект The Musical Forest', ' созданный замечательным человеком из Google Creative Lab', ' который использовал A-Frame', ' веб-фреймворк для WebVR', ' разработанный командой Mozilla VR.']"
['\n      SuperOleg39ru\n    '],"[""Окружение для разработки веб-приложений на TypeScript и React: от 'hello world' до современного SPA. Часть 1""]",['Разработка веб-сайтов *JavaScript *ReactJS *TypeScript *'],"['Цель данной статьи — вместе с читателем написать окружение для разработки современных веб-приложений', ' последовательно добавляя и настраивая необходимые инструменты и библиотеки. По аналогии с многочисленными starter-kit / boilerplate репозиториями', ' но наш', ' собственный.\n\r\nТак же', ' автор пишет эту статью для структурирования собственных мыслей', ' знаний и практического опыта', ' и получает хорошую мотивацию на изучение новых аспектов разработки.\n\r\nАвтор полностью открыт для доработки и исправления текущей статьи', ' и надеется на превращение итогового материала в актуальный и удобный справочник', ' интересный и для профессионалов', ' и для желающих опробовать новые для них технологии.\n\n']"
['\n      ru_vds\n    '],['В чём разница между React и Vue?'],['Блог компании RUVDS.com Разработка веб-сайтов *ReactJS *VueJS *'],"['Однажды мы уже публиковали материал', ' посвящённый сравнению React и Vue. Это был практический пример', ' на котором можно было увидеть сходства и различия этих фреймворков в довольно-таки мелких деталях. Сегодня мы хотим поделиться с вами переводом статьи', ' автор которой', ' Джон Ханна', ' рассматривает React и Vue в более крупном масштабе. Он говорит о том', ' что в сегодняшнем мире веб-разработки можно видеть', ' во-первых', ' господство React', ' а во-вторых — взрывной рост популярности Vue. Если существующие тренды продолжатся', ' весьма вероятно', ' что к концу 2018-го года Vue обойдёт Angular и займёт второе место в рейтинге самых используемых веб-инструментов.\n\n']"
['\n      maxfarseer\n    '],['Разрабатываем игру на SVG + React. Часть 1'],['CSS *JavaScript *HTML *ReactJS *'],"['TL;DR: в этих сериях вы узнаете', ' как заставить React и Redux управлять SVG элементами для создания игры. Полученные в этой серии знания позволят вам создавать анимацию не только для игр. Вы можете найти окончательный вариант исходного кода', ' разработанного в этой части', ' на GitHub. \n']"
['\n      mi5ha6in\n    '],['Бешеные псы: Angular 2 vs React'],['Блог компании Конференции Олега Бунина (Онтико) JavaScript *Angular *ReactJS *'],"['Встречайте', ' противостояние двух фреймворков: Angular и\xa0React в\xa0формате поединка на\xa0примере конкретного простого приложения. За\xa0Angular выступает Евгений Гусев (@bunopus)', ' за\xa0React — Илья Таратухин (@ilfa). Чтобы сделать честные выводы', ' они сначала поменялись технологиями и\xa0попробовали развернуть базовый проект. Старт на\xa0React породил множество проблем', ' а\xa0вот с\xa0Angular дело обстояло гораздо проще', ' потому что это идеальное приложение для человека', ' который не\xa0особенно работал с\xa0фронтендом. Но', ' конечно', ' это было только начало', ' дальше пошел настоящий спор', ' все этапы которого под катом\n\n\n']"
['\n      ru_vds\n    '],"['Сравнение JS-фреймворков: React', ' Vue и Hyperapp']",['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *VueJS *'],"['Автор материала', ' перевод которого мы сегодня публикуем', ' полагает', ' что Hyperapp — это заслуживающая внимания альтернатива таким веб-фреймворкам', ' как React или Vue. Он говорит', ' что причиной такого утверждения стало то', ' что он выяснил', ' что Hyperapp легче в освоении', ' чем эти два фреймворка. Его идея подверглась критике', ' так как кажется', ' что основана она исключительно на его мнении', ' а такой подход попросту не даёт другим фреймворкам возможности показать их сильные стороны. Эта статья направлена на объективный анализ Hyperapp', ' React и Vue', ' проведённый на основе простых примеров', ' демонстрирующих их возможности', ' и на основе результатов их испытаний.\n\n']"
['\n      ru_vds\n    '],['Сравнение React и Vue на практическом примере'],['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *VueJS *'],"['Автор материала', ' перевод которого мы публикуем сегодня', ' говорит', ' что на работе ему приходится использовать Vue и он хорошо изучил этот фреймворк. Однако', ' ему всегда было любопытно узнать', ' как обстоят дела в других мирах', ' а именно', ' во вселенной React.\n\r\nОн почитал документацию', ' посмотрел несколько учебных видео', ' и', ' хотя всё это показалось ему весьма полезным', ' ему хотелось по-настоящему понять', ' в чём заключается разница между React и Vue. Для него поиск различий между фреймворками заключался не в выяснении того', ' поддерживают ли они виртуальную объектную модель документа', ' или того', ' как именно они рендерят страницы. Ему хотелось', ' чтобы кто-нибудь объяснил бы ему особенности кода', ' показал бы', ' что в нём происходит. Он надеялся найти статью', ' которая посвящена раскрытию именно таких различий', ' прочтя которую тот', ' кто знал раньше лишь Vue или React (или совершенно новый в веб-разработке человек)', ' мог бы лучше понять различия между этими фреймворками.\n\n\n\r\nОднако такой статьи ему найти не удалось. Этот факт привёл его к пониманию того', ' что ему самому надо взять и такую статью написать', ' попутно разобравшись в сходствах и отличиях React и Vue. Собственно говоря', ' перед вами описание его эксперимента по сравнению этих двух фреймворков.']"
['\n      ru_vds\n    '],"['11 библиотек (наборов компонентов) для React Native', ' о которых стоит знать в 2018-м']",['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['В начале года мы опубликовали несколько материалов о популярных наборах компонентов для React', ' Angular и Vue. Сегодня мы представляем вашему вниманию перевод статьи из той же серии', ' посвящённой React Native. Учитывая непрекращающийся рост популярности React', ' и то', ' что мобильные приложения и PWA становятся всё востребованнее', ' неудивителен тот факт', ' что React Native привлекает всё большее внимание сообщества разработчиков.\n\n\n\r\nФреймворк React Native очень похож на React в том плане', ' что его применение подталкивает программиста к созданию пользовательских интерфейсов с использованием изолированных компонентов. Наборы таких компонентов', ' предназначенные для разработки интерфейсов', ' дают разработчикам готовые модули', ' использование которых помогает экономить время', ' ускоряя работу. Здесь мы обсудим одиннадцать наборов компонентов', ' которые отличаются хорошей поддержкой их создателей. Они', ' надеемся', ' пригодятся всем', ' кому приходится разрабатывать интерфейсы на React Native']"
['\n      ru_vds\n    '],['Использование функции connect() из пакета react-redux'],['Блог компании RUVDS.com Разработка веб-сайтов *ReactJS *'],"['В статье', ' перевод которой мы публикуем сегодня', ' речь пойдёт о том', ' как создавать в React-приложениях компоненты-контейнеры', ' которые связаны с состоянием Redux. Этот материал основан на описании механизма управления состоянием в React с применением пакета react-redux. Предполагается', ' что у вас уже есть базовое понимание архитектуры и API библиотек', ' о которых мы будем говорить. Если это не так — обратитесь к документации по React и Redux.\n\n']"
['\n      Barrayar\n    '],['Как стать React разработчиком в 2018 году'],['Блог компании Mail.ru Group JavaScript *Программирование *ReactJS *'],"['\n\r\nНесмотря на то что пост написан в этом году', ' изучить всю предложенную программу за оставшиеся месяцы вы', ' вероятно', ' не успеете. Поэтому карту разработчика можно смело брать с собой в год следующий.\n\r\nАдам Голаб', ' эксперт по React и JS', ' составил пошаговый учебный план', ' который поможет вам стать разработчиком с нуля либо укажет направление для дальнейшего повышения навыков в профессии.\n\r\nПлан Адама представляет собой список основных пунктов', ' которые вам нужно изучить самостоятельно. Мы добавили описание', ' а в некоторых сложных моментах указали ссылки на дополнительные справочные материалы', ' с помощью которых вы получите ответ на вопрос: «Что я должен узнать как React-разработчик?».']"
['\n      ru_vds\n    '],['Использование RxJS в React-разработке для управления состоянием приложений'],['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['Автор материала', ' перевод которого мы сегодня публикуем', ' говорит', ' что здесь он хочет продемонстрировать процесс разработки простого React-приложения', ' использующего RxJS. По его словам', ' он не является экспертом в RxJS', ' так как сам занимается изучением этой библиотеки и не отказывается от помощи знающих людей. Его цель — привлечь внимание аудитории к альтернативным способам создания React-приложений', ' вдохновить читателя на самостоятельные исследования. Этот материал нельзя назвать введением в RxJS. Тут будет показан один из многих способов использования этой библиотеки в React-разработке.\n\n']"
['\n      ru_vds\n    '],['Руководство по разработке Web-приложений на React Native'],['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['Вы проснулись. Сияет солнце', ' щебечут птички. В мире никто ни с кем не воюет', ' никто не голодает', ' а один и тот же код можно использовать и в веб-проектах', ' и в нативных приложениях. Как бы было хорошо! К сожалению', ' на горизонте можно разглядеть лишь универсальный код', ' но путь к нему', ' даже сегодня', ' всё ещё полон неожиданностей.\n\n\n\r\nМатериал', ' перевод которого мы сегодня публикуем', ' представляет собой небольшое', ' но достаточно подробное руководство по разработке универсальных приложений с использованием React Native.']"
['\n      m_vash\n    '],['Введение в React\xa0Hooks'],['ReactJS *'],"['\n\r\nЕсли вы читаете Twitter', ' вы', ' вероятнее всего', ' знаете что Hooks \u200a-\u200a это новая фича React', ' но вы можете спросить', ' как мы на практике можем их использовать? В этой статье мы покажем вам несколько примеров использования Hooks.\r\nОдна из ключевых идей для понимания заключается в том', ' что Hooks позволяют использовать state и другие возможности React без написания классов.']"
['\n      ru_vds\n    '],"['Учебный курс по React', ' часть 1: обзор курса', ' причины популярности React', ' ReactDOM и JSX']",['Блог компании RUVDS.com Разработка веб-сайтов *ReactJS *'],"['Представляем вашему вниманию первые 5 занятий учебного курса по React для начинающих. Оригинал курса на английском', ' состоящий из 48 уроков', ' опубликован на платформе Scrimba.com. Возможности этой платформы позволяют', ' слушая ведущего', ' иногда ставить воспроизведение на паузу и самостоятельно', ' в том же окне', ' в котором ведётся демонстрация', ' экспериментировать с кодом. Курс показался нам интересным', ' мы решили перевести его на русский и преобразовать в формат традиционных публикаций.\n\n\n\r\nПолагаем', ' этот курс будет полезен всем', ' кто', ' что называется', ' «не умеет в React»', ' но хочет научиться. В то же время', ' на то', ' чтобы превратить этот курс в обычные публикации', ' нужны немалые силы и время', ' поэтому мы', ' прежде чем принимать окончательное решение о запуске этого проекта', ' предлагаем всем желающим оценить курс и поучаствовать в опросе о целесообразности его перевода.']"
['\n      tony_vi\n    '],['React & БЭМ – официальная коллаборация. Часть историческая'],['Блог компании Яндекс Веб-дизайн *Разработка веб-сайтов *JavaScript *ReactJS *'],"['Перед вами история интегрирования БЭМ-методологии в React-вселенную. Материал', ' который вы прочитаете', ' построен на опыте разработчиков Яндекса', ' развивающих самый масштабный и нагруженный сервис в России\xa0— Яндекс.Поиск. Мы никогда раньше не рассказывали настолько подробно и глубоко о том', ' почему делали так', ' а не иначе', ' что нами двигало и чего мы действительно хотели. Внешнему человеку доставались сухие релизы и обзоры на конференциях. Лишь в кулуарах можно было услышать нечто подобное. Я как соавтор негодовал из-за скудности информации снаружи каждый раз', ' когда рассказывал о новых версиях библиотек. Но в этот раз мы поделимся всеми подробностями.\n\nВсе слышали о методологии БЭМ. CSS-селекторы с подчёркиваниями.\xa0Компонентный подход', ' о котором говорят', ' имея в виду способ написания CSS-селекторов. Но про CSS в статье не будет ни слова. Только JS', ' только хардкор!']"
['\n      sashalisik\n    '],['React vs Angular: how a library can compete with a framework'],['JavaScript *Angular *ReactJS *'],['Google and Facebook are the digital behemoths who always compete. Their solutions for developers Angular and React seem rivals too. Indeema helps compare both. The article was originally posted here']
['\n      Plarium\n    '],['Повышаем производительность в компонентах-функциях React с помощью React.memo ()'],['Блог компании Plarium JavaScript *Программирование *Разработка мобильных приложений *ReactJS *'],"['Представляем вам перевод статьи Chidume Nnamdi', ' которая была опубликована на blog.bitsrc.io. Если вы хотите узнать', ' как избежать лишнего рендера и чем полезны новые инструменты в React', ' добро пожаловать под кат.\n\n']"
['\n      frozen_coder\n    '],['Стартуем библиотеку компонентов на React и TypeScript'],['JavaScript *ReactJS *'],"['\nБольшую часть свой работы', ' я пишу бэкенды', ' но вот на днях появилась задача начать библиотеку компонентов на React. Несколько лет назад', ' когда версия React была такой же маленькой', ' как и мой опыт фронтенд-разработки', ' я уже делал подход к снаряду и получилось неумело и коряво. Принимая во внимание зрелость текущей экосистемы React и мой подросший опыт', ' я воодушевился уж в этот-то раз сделать всё хорошо и удобно. В результате у меня появилась заготовка для будущей библиотеки', ' а чтобы ничего не забыть и собрать всё в одном месте', ' была написана эта статья-шпаргалка', ' которая также должна помочь тем', ' кто не знает', ' с чего начать. Посмотрим', ' что же у меня получилось.']"
['\n      ru_vds\n    '],['Что лучше выбрать в 2020 году — React или Vue?'],['Блог компании RUVDS.com Разработка веб-сайтов *ReactJS *VueJS *'],"['JavaScript-фреймворки стали неотъемлемой частью каждого современного веб-проекта. Существует множество подобных фреймворков', ' в результате разработчикам постоянно приходится задаваться вопросом о том', ' что выбрать. Искать ответ на этот вопрос придётся и в 2020 году.\n\n\r\nЕсли вы это читаете — можно предположить', ' что вы заняты поиском фреймворка', ' который станет основой вашего следующего приложения. Вполне возможно', ' что вы ориентируетесь на ведущие технологии и размышляете о том', ' что вам лучше подойдёт — библиотека React или фреймворк Vue. Это — непростая дилемма', ' но решать её', ' всё равно', ' нужно. Вот некоторые распространённые вопросы', ' которыми задаются те', ' кто выбирает между React и Vue:\n\n\nЧто лучше подойдёт для моего следующего проекта?\nКакой из фреймворков обладает более высокой производительностью?\nЧто популярнее среди разработчиков?\nЧто лучше подходит для небольших веб-приложений?\nКакой из фреймворков надёжнее?\n']"
['\n      RussianDragon\n    '],['Новый пакет валидаций для React на Mobx @quantumart/mobx-form-validation-kit'],['JavaScript *GitHub ReactJS *TypeScript *'],"['Добрый день.\r\n Сегодня я хочу рассказать о новом пакете для асинхронных валидаций в проектах использующих в своей основе React', ' Mobx и написанных на Typescript.\r\nСовременная Frontend разработка предполагает большое количество логики при заполнении страниц с документами', ' анкет и документов на кредит', ' платежных поручений', ' страниц регистраций на сайте. Основная логическая нагрузка приходиться на валидационные проверки. Разработчики Angular продумали этот момент и предлагают разработчикам для этих целей использовать встроенных механизм FormControl-ов', ' что', ' хоть имеет ряд своих недостатков', ' но всё же лучшем чем полное отсутствие подобного решения на React. Ситуация усложняется еще тем', ' что современный тренд React разработки предполагает использовать mobx для организации бизнес-логики.\r\n Столкнувшись с этими проблемами мы решили всех их с помощью написания пакета: @quantumart/mobx-form-validation-kit\n\r\nПлюсы пакета:\n\nПолностью на TypeScript\nСовместимость с Mobx (версии 4', ' который поддерживает', ' всеми любимый', ' IE10)\nРассчитан на работу в React (можно использовать в проектах и без react)\nРассчитан на асинхронные валидации\nЛегко встроить в существующий проект.\n\r\n Инструкция по работы с пакетом под катом.']"
['\n      dfuse\n    '],"['React', ' JSX', ' импорт ES модулей (в том числе динамический) в браузере без\xa0Webpack']",['Разработка веб-сайтов *JavaScript *ReactJS *'],"['Эта статья — попытка свести воедино имеющиеся на текущий момент средства и выяснить', ' возможно ли создавать production ready приложения на React без предварительной компиляции сборщиками типа Webpack', ' или по крайней мере свести такую компиляцию к минимуму.\nВсе описанное носит очень экспериментальный характер и я осознанно местами срезаю углы. Я ни в коем случае не рекомендую делать что-то такое на реальном продакшене.\nВозможность использовать ECMAScript modules (<script type=""module""/> с импортами вида import Foo from \'./foo\'; и import(\'./Foo\')) прямо в браузере давно не новость', ' это хорошо поддерживаемы функционал: https://caniuse.com/#feat=es6-module.\nНо в реальности мы импортируем не только свои модули', ' но и библиотеки. Есть отличная статья на эту тему: https://salomvary.com/es6-modules-in-browsers.html. И другая не менее хорошая статья достойная упоминания https://github.com/stken2050/esm-bundlerless.\nСреди прочих важных вещей из этих статей', "" эти пункты наиболее важны для создания React приложения:\n\nПоддержка package specifier imports (или import maps): когда мы пишем import React from 'react' на самом деле мы должны импортировать что-то подобное https://cdn.com/react/react.production.js\nПоддержка UMD: React до сих пор распространяется как UMD и на данный момент авторы все еще не пришли к согласию как распространять библиотеку в виде модуля\nJSX\nИмпорт CSS\n\nДавайте пройдем по всем пунктам по очереди.""]"
['\n      ru_vds\n    '],['5 практических рекомендаций по использованию React-хуков в продакшне'],['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['Автор статьи', ' перевод которой мы сегодня публикуем', ' говорит', ' что в компании commercetools приняли на вооружение хуки React в начале 2019 года — в момент их появления в React 16.8.0. С тех пор программисты компании постоянно перерабатывают свой код', ' переводя его на хуки. Хуки React позволяют', ' не используя классы', ' работать с состоянием компонентов и пользоваться другими возможностями React. Используя хуки', ' можно', ' работая с функциональными компонентами', ' «подключаться» к событиям жизненного цикла компонентов и реагировать на изменения их состояния.\n\n']"
['\n      SlimHouse\n    '],['Redux store vs React state'],['JavaScript *Node.JS *ReactJS *'],"['Как спроектировать хранение данных в React-приложении? Где хранить данные приложения: в глобальном хранилище (Redux store) или в локальном хранилище (component state)?\r\nТакие вопросы возникают у разработчиков', ' начинающих использовать библиотеку Redux', ' и даже у тех', ' кто ей активно пользуется.\n\r\nМы в BENOVATE за 5 лет разработки на React опробовали на практике различные подходы к построению архитектуры таких приложений. В статье рассмотрим возможные критерии для выбора места хранения данных в приложении.']"
['\n      Irina_Zakharova\n    '],['Todolist на React Hooks + TypeScript: от сборки до тестирования'],['JavaScript *ReactJS *TypeScript *'],"['Начиная с версии 16.9', ' в библиотеке React JS доступен новый функционал — хуки. Они дают возможность использовать состояние и другие функции React', ' освобождая от необходимости писать класс. Использование функциональных компонентов совместно с хуками позволяет разработать полноценное клиентское приложение.\n\r\nПредлагаю рассмотреть создание версии Todolist приложения на React Hooks с использованием TypeScript.']"
['\n      ru_vds\n    '],['Отказ от create-react-app и создание собственного шаблона для React-приложений'],['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['Автор статьи', ' перевод которой мы сегодня публикуем', ' предлагает React-разработчикам отойти от использования create-react-app (CRA) и создать собственный шаблон для React-приложений. Здесь речь пойдёт о преимуществах и недостатках CRA', ' а так же будет предложено решение', ' которое способно заменить create-react-app.\n\n']"
['\n      ru_vds\n    '],"['Введение в React', ' которого нам не хватало']",['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['React — это самая популярная в мире JavaScript-библиотека. Но эта библиотека не потому хороша', ' что популярна', ' а потому популярна', ' что хороша. Большинство существующих вводных руководств по React начинается с примеров того', ' как пользоваться этой библиотекой. Но эти руководства ничего не говорят о том', ' почему стоит выбрать именно React.\n\r\nУ такого подхода есть свои сильные стороны. Если кто-то стремится к тому', ' чтобы', ' осваивая React', ' тут же приступить к практике', ' ему достаточно заглянуть в официальную документацию и взяться за дело.\n\n\n\r\nЭтот материал (вот', ' если интересно', ' его видеоверсия) написан для тех', ' кто хочет найти ответ на следующие вопросы: «Почему React? Почему React работает именно так? С какой целью API React устроены так', ' как устроены?».']"
['\n      artemu78\n    '],['Новый механизм JSX трансформации в React 17 Release Candidate'],['JavaScript *ReactJS *'],"['В React 17 Release Candidate появляется новый способ трансформации JSX. С ним', ' в бандле', ' не понадобится сам Реакт', ' хотя для использования хуков он всё ещё нужен. Это и есть основной бенефит нового механизма. Под катом краткий перевод статьи в блоге ReactJS.']"
['\n      aio350\n    '],['Разрабатываем чат на React с использованием Socket.IO'],['Разработка веб-сайтов *JavaScript *Программирование *ReactJS *'],"['\n\r\nДоброго времени суток', ' друзья!\n\r\nХочу поделиться с вами опытом разработки простого чата на React с помощью библиотеки «Socket.IO».\n\r\nПредполагается', ' что вы знакомы с названной библиотекой. Если не знакомы', ' то вот соответствующее руководство с примерами создания «тудушки» и чата на ванильном JavaScript.\n\r\nТакже предполагается', ' что вы хотя бы поверхностно знакомы с Node.js.\n\r\nВ данной статье я сосредоточусь на практической составляющей совместного использования Socket.IO', ' React и Node.js.\n\r\nНаш чат будет иметь следующие основные возможности:\n\n\nВыбор комнаты\nОтправка сообщений\nУдаление сообщений отправителем\nХранение сообщений в локальной базе данных в формате JSON\nХранение имени и идентификатора пользователя в локальном хранилище браузера (local storage)\nОтображение количества активных пользователей\nОтображение списка пользователей с онлайн-индикатором\n\r\nТакже мы реализуем возможность отправки эмодзи.\n\r\nЕсли вам это интересно', ' то прошу следовать за мной.\n\r\nДля тех', ' кого интересует только код: вот ссылка на репозиторий.\n\r\nПесочница:\n\n']"
['\n      olepav\n    '],['React: наглядное пособие для начинающих. Создаем свой компонент без знаний JavaScript'],['Блог компании Quarkly JavaScript *Программирование *ReactJS *Учебный процесс в IT '],"['\nReact — это библиотека JavaScript для создания пользовательского интерфейса.\nЭто официальное определение React. Но что если вы не знаете', ' что такое JavaScript? Что если вы не разработчик? Смогли бы вы тогда понять', ' что такое React?\nОднозначно ДА. Именно поэтому я и написал эту статью на тему: Что такое React на самом деле? Что такое React.js (или ReactJS)? Для чего используется React? Почему React так популярен? Какие проблемы можно решить с его помощью?\nЭта статья — введение в React для начинающих. И это первое', ' с чего стоит начать', ' прежде чем детально изучить React. Я объясню основные идеи React на пальцах (и с помощью картинок). Нет опыта работы с JavaScript? Не беда! Если у вас есть базовые знания HTML (например', ' HTML-тегов)', ' эта статья должна вам понравиться.\nЭто как посмотреть на React с высоты птичьего полета', ' но я дам вам бинокль. Так что вы не только увидите общую картину того', ' что делает React таким особенным', ' но и увеличите изображение', ' чтобы получить практический опыт написания реального React-компонента. И да', ' никаких знаний JS не требуется!']"
['\n      kmoseenk\n    '],['React Router Hooks: Изучение принципов их работы'],['Блог компании OTUS ReactJS *'],"['React Router — это не то же самое', ' что маршрутизатор', ' направляющий сетевые данные — к счастью! Однако между сетевым маршрутизатором и React Router есть много общего. React Router помогает нам направлять пользователей к нужному компоненту. Например', ' мы можем использовать маршрутизацию на стороне клиента для создания одностраничного приложения (SPA)', ' которое позволяет перемещаться между различными страницами без обновления браузера.Другими словами', ' React Router поддерживает синхронизацию пользовательского интерфейса с URL. Он имеет простой API с такими мощными функциями', ' как ленивая загрузка кода', ' динамическое сопоставление маршрутов и обработка перехода между локациями.Но есть еще много интересного. В этой статье мы рассмотрим хуки React Router. Они позволяют разработчикам писать гораздо более чистый код', ' так как не нужно писать всю его шаблонную часть', ' как в компонентах класса. Из коробки мы можем получить доступ к нескольким хукам', ' таким как useHistory', ' useLocation', ' useParams и useRouteMatch. Например', ' хук useHistory дает нам доступ к объекту history для обработки изменений маршрута.']"
['\n      divance\n    '],['React Native in-app purchases: конфигурация и получение списка продуктов'],['Блог компании Adapty Разработка мобильных приложений *Монетизация мобильных приложений *'],"['В React Native не существует базового инструмента для внедрения внутренних покупок. Поэтому неминуемо приходится пользоваться сторонними библиотеками. Самые популярные библиотеки для добавления покупок в приложения на React Native — это react-native-iap и expo-in-app-purchases. Правда', ' сегодня я расскажу про библиотеку «react-native-adapty»', ' потому что по сравнению с другими библиотеками', ' у неё есть преимущества:• в отличие от других библиотек', ' есть серверная валидация покупок;• библиотека поддерживает все текущие фичи магазинов от промо-офферов до оплаты наперёд', ' а поддержка новых функций появляется в ней быстро;• код получается чище и понятнее;• можно выпускать изменения в продуктах без прохождения полного релиз-цикла.']"
['\n      jojo97\n    '],"['Построение надежных веб-приложений на React: Часть 3', ' тестирование с Jasmine']",['Разработка веб-сайтов *Тестирование IT-систем *JavaScript *'],"['Перевод статьи «Building robust web apps with React: Part 3', ' testing with Jasmine»', ' Matt Hinchliffe\n\r\nОт переводчика: это перевод третьей части цикла статей «Building robust web apps with React»\r\nПереводы: \n\nПостроение надежных веб-приложений на React: Часть 1', ' браузерные прототипы\nПостроение надежных веб-приложений на React: Часть 2', ' оптимизация с Browserify\nПостроение надежных веб-приложений на React: Часть 3', ' тестирование с Jasmine\nПостроение надежных веб-приложений на React: Часть 4', ' серверная генерация\n\n\r\nВо второй части я покрыл процесс оптимизации моего браузерного приложения Tube Tracker', ' но каждое вносимое мной изменение до сих пор требует обновление браузера', ' чтобы проверить', ' что все работает. Приложение всерьез требует набора тестов', ' чтобы ускорить процесс разработки и избежать регрессии кода. Как оказалось', ' это проще сказать', ' чем сделать', ' когда начинаешь работать с новой технологией', ' как React.\n']"
['\n      NIX_Solutions\n    '],['Создание Android-приложения с помощью React Native'],['Блог компании NIX Разработка мобильных приложений *ReactJS *'],"['\n\r\nКак следует из названия', ' в этой статье мы рассмотрим процесс создания средствами React Native приложения под Android. Оно будет простеньким', ' всего лишь с текстовым полем. Туда нужно будет ввести имя одного из покемонов', ' а приложение покажет подробную информацию о полученных данных и зачитает её с помощью функции преобразования текста в речь. \n\r\nМы не будем касаться установки Android SDK', ' React Native и создания проекта', ' или каких-то иных инструментов разработчиков. Будем исходить из того', ' что это ваш первый опыт создания приложения с помощью React Native', ' поэтому подробно рассмотрим каждый кусок кода.\n']"
['\n      1cbitrix\n    '],['React в браузерах и на мобильных платформах'],['Блог компании 1С-Битрикс 1С-Битрикс ReactJS *'],"['\n\nЭтот пост написан по материалам выступления Григория Петрова из компании VoxImplant на партнёрской конференции «1С-Битрикс».\n\r\nВообще говоря', ' наша компания Voximplant занимается созданием решений для облачной голосовой телефонии. Но на страницах этого поста я хотел бы поговорить не об этом', ' а о некоторых перспективных технологиях. Так получилось', ' что уже больше 15 лет я делаю софт', ' как самостоятельно', ' так и в роли руководителя команд разработчиков и консультанта. \n\r\nЗа последние несколько лет индустрия создания программного обеспечения развивается просто безумными темпами. И особенно хорошо это видно на примере близких нам веб-технологий', ' к которым относятся все продукты «1С-Битрикс». И одним из направлений развития является перенос на мобильные платформы', ' с внедрением адаптивной вёрстки и многого другого хорошего и интересного. Технологии сменяют друг друга примерно раз в три месяца. Здесь же я расскажу об использовании технологии React', ' которая сейчас представлена в двух ипостасях: React.js и React Native. \n']"
['\n      MrCheater\n    '],"['React', ' Web Components', ' Angular и jQuery — друзья навеки. Универсальные JavaScript-компоненты']",['Блог компании Developer Soft JavaScript *Программирование *HTML *ReactJS *'],"['\r\nЭта статья о том', ' как написать универсальный JavaScript-компонент', ' который можно будет использовать\n\nкак React-компонент;\nкак Preact-компонент;\nкак Angular-компонент;\nкак Web Component;\nкак jQuery функцию для рендеринга в DOMElement;\nкак нативную функцию для рендеринга в DOMElement.\n\nЗачем и кому это нужно\nМир JavaScript-разработки очень фрагментирован. Есть десятки популярных фреймворков', ' большая часть из которых абсолютно несовместима друг с другом. В таких условиях разработчики JavaScript-компонентов и библиотек', ' выбирая один конкретный фреймворк', ' автоматически отказываются от очень большой аудитории', ' которая данный фреймворк не использует. Это серьезная проблема', ' и в статье предложено ее решение.']"
['\n      ph_piter\n    '],"[""О бравом React'е замолвите слово""]",['Блог компании Издательский дом «Питер» JavaScript *Профессиональная литература '],"['Здравствуйте', ' уважаемые читатели!\n\r\nСпешим вас порадовать — мы уже вовсю переводим книгу небезызвестного Стояна Стефанова о библиотеке React\n\n\r\nМы сочли', ' что этот молодой росток на массивном стволе JavaScript нелишне будет бережно прорекламировать', ' поэтому предлагаем почитать обзорную и слегка восторженную статью', ' которая', ' на наш взгляд', ' устарела всего на пару абзацев (их мы опустили) \n']"
['\n      vtikunov\n    '],['PropTypes — проверка типов в React'],['Разработка веб-сайтов *JavaScript *ReactJS *'],"['\nПродолжение серии переводов раздела ""Продвинутые руководства"" (Advanced Guides) официальной документации библиотеки React.js.\nPropTypes — проверка типов в React\nПо мере того', ' как ваше приложение будет расти — вы можете наткнуться на большое количество ошибок', ' связанных с проверкой типов. Для некоторых приложений', ' вы можете использовать расширения JavaScript такие как Flow или TypeScript осуществляя проверку типов всего вашего приложения. Но если вы не используете таковые — React предоставляет некоторые встроенные возможности проверки типов.\n']"
['\n      vtikunov\n    '],['Оптимизация производительности в React'],['Разработка веб-сайтов *JavaScript *ReactJS *'],"['\nПродолжение серии переводов раздела ""Продвинутые руководства"" (Advanced Guides) официальной документации библиотеки React.js.\nОптимизация производительности в React\nВнутренне', ' React использует несколько продвинутых техник', ' сводящих к минимуму количество дорогостоящих операций DOM', ' необходимых для обновления пользовательского интерфейса. Для большинства приложений', ' использующих React', ' быстродействие получаемого интерфейса достаточно без дополнительных действий для оптимизации производительности. Тем не менее', ' есть несколько способов', ' с помощью которых вы можете ускорить ваше приложение React.\n']"
['\n      dfuse\n    '],['Create React App (aka React Scripts) и серверный рендеринг с Redux и Router'],['Разработка веб-сайтов *Клиентская оптимизация *Node.JS *ReactJS *'],"['Из комментариев к статье стало понятно', ' что очень многие люди склоняются в сторону экосистемы Create React App (он же React Scripts). Это вполне разумно', ' т.к. это самый популярный и простой в использовании продукт (благодаря отсутствию конфигурации и поддержке ведущих людей React-сообщества)', ' в котором', ' к тому же', ' есть почти все необходимое — сборка', ' режим разработки', ' тесты', ' статистика покрытия. Не хватает только серверного рендеринга.\nВ качестве одного из способов в официальной документации предлагается либо вбивать начальные данные в шаблон либо воспользоваться статическими слепками. Первый подход не позволит поисковикам нормально индексировать статичный HTML', ' а второй — не поддерживает проброс никаких начальных данных', "" кроме HTML (фраза из документации: this doesn't pass down any state except what's contained in the markup). Поэтому если используется Redux"", ' то придется для рендеринга использовать что-то другое.\nЯ адаптировал пример из статьи для использования с Create React App', ' теперь он называется Create React Server и умеет запускать серверный рендеринг командой:\ncreate-react-server --createRoutes src/routes.js --createStore src/store.js']"
['\n      prokofyev\n    '],['Создание веб-приложений с помощью Scala.js и React — часть 1'],['Разработка веб-сайтов *Scala *ReactJS *'],"['Перевод статьи Pedro Palma Ramos ""Building Web applications with Scala.js and React — Part 1"" \nМне', ' как Scala-программисту', ' разрабатывающему веб-приложения', ' обычно неприятен переход от аккуратного', ' функционального и типобезопасного Scala бэкенда к фронтенду', ' написанному на JavaScript. К счастью', ' существует мощная и зрелая альтернатива нашему (не всегда) любимому стандартному языку для Web.\nScala.js — это реализация Scala за авторством Sébastien Doeraene', ' которая компилирует код Scala в JavaScript', ' а не в байт-код JVM. Она поддерживает полную двустороннюю функциональную совместимость между Scala и JavaScript-кодом и', ' следовательно', ' позволяет разрабатывать фронтенд веб-приложения на Scala с использованием библиотек и фреймворков JavaScript. Она также способствует уменьшению дублирования кода по сравнению с обычным веб-приложением на Scala', ' поскольку позволяет повторно использовать на фронтэнде модели и бизнес-логику', ' разработанные для серверной части.\nReact', ' с другой стороны', ' представляет собой веб-фреймворк для создания пользовательских интерфейсов в JavaScript', ' разработанный и поддерживаемый Facebook и другими компаниями. Он способствует чистому разделению между обновлением состояния приложения в ответ на пользовательские события и визуализацией представлений на основе указанного состояния. Поэтому фреймворк React особенно подходит для функциональной парадигмы', ' которая используется при программировании на Scala.']"
['\n      ARG89\n    '],['React Native: очередная «серебряная пуля» для кросплатформенной разработки?'],['Блог компании JUG Ru Group JavaScript *Программирование *Разработка мобильных приложений *ReactJS *'],"['Есть революции', ' которые происходят незаметно. Когда разработчики Facebook выпустили фреймворк React Native', ' никто не захватывал мосты и телеграфы. Новому подходу к кроссплатформенной разработке мобильных приложений удалось взять в плен самое ценное – мозги нативных программистов. Рассказать о центральной идее React Native', ' его преимуществах', ' перспективах и недостатках мы попросили Владимира Иванова.\n\n\n\r\nВладимир более шести лет занимается разработкой под Android', ' обладает опытом создания приложений под iOS и Windows Phone. Последний год он увлекся React Native и начал двигать культуру кроссплатформенного кода в EPAM Systems.\n']"
['\n      marshinov\n    '],['Введение в React и Redux для бекенд-разработчиков'],['Разработка веб-сайтов *JavaScript *ReactJS *'],"['\n\r\nЕсли вы как я долгое время считали', ' что JavaScript – это такой «игрушечный» язык на котором пишут анимашки для менюшек и падающие снежинки на форумах под новый год', ' а потом очнулись в 2016 году с мыслями WTF: react', ' flux redux', ' webpack', ' babel', '… не отчаивайтесь. Вы не одиноки. Материалов по современному фронтенду в сети много', ' даже слишком много. Под катом еще одно альтернативное мнение о том', ' каково это учить JavaScript в 2016 году.\n']"
['\n      KarafiziArthur\n    '],"['Развёрнутый комментарий Дэна Абрамова к статье «Вещи', ' о которых никто вам не расскажет про React»']",['ReactJS *'],"['Всем привет! Недавно Дэн Абрамов', ' создатель Redux', ' оставил довольно массивный комментарий к статье на Medium Things nobody will tell you about React.js', ' который очень быстро разошёлся популярностью и довольно скоро набрал раза в 3 больше рекомендаций', ' чем сама статья :)\r\nСобственно', ' текущая статья является моим переводом его комментария', ' так как последняя содержит ценные замечания по поводу актуального и будущего состояния React / React Router.\r\nНадеюсь', ' кому-то это будет полезным.\n\nПривет', ' спасибо за обратную связь! :)\nЯ ценю', ' что вы поделились своим неприятным опытом работы с React.\nВаш пост содержит широко распространенные в React сообществе заблуждения', ' поэтому мне захотелось воспользоваться моментом и разъяснить их для любого', ' у кого имеются те же проблемы.\nЭто вовсе не означает', ' что React для всех работает одинаково хорошо', ' или что затронутые вами проблемы неактуальны. Но есть несколько моментов', ' которые', ' на мой взгляд', ' важно обозначить для правильного понимания этих проблем.']"
['\n      doochik\n    '],['Как я написал мобильное приложение на react-native'],['Я пиарюсь '],"['Меня зовут Алексей Андросов', ' я уже много лет работаю в Яндексе фронтенд-разработчиком. Два года назад мне и моим партнерам пришла в голову идея создать мобильную социальную сеть Verb. Идея Verb в том', ' что пользователи могут делиться небольшими статусами — “вербами” — о том', ' чем они занимаются в данную минуту', ' простыми вещами', ' о которых хочется рассказать друзьям', ' но некуда об этом написать. И мы уже даже получили инвестиции', ' но сейчас не об этом. Сегодня я хочу рассказать о том', ' как и почему я написал мобильное приложение на react-native.']"
['\n      ru_vds\n    '],"['Основы React: всё', ' что нужно знать для начала работы']",['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['Хотите узнать о том', ' что такое React', ' но вам всё никак не выпадает шанс изучить его? Или', ' может быть', ' вы уже пробовали освоить React', ' но не смогли толком понять? А может', ' вы разобрались с основами', ' но хотите привести в порядок знания? Эта статья написана специально для тех', ' кто положительно ответил хотя бы на один из этих вопросов. Сегодня мы создадим простой музыкальный проигрыватель', ' раскрывая основные концепции React по мере продвижения к цели.\n\n\r\nРазобравшись с этим материалом', ' вы освоите следующее:\n\n\nКомпоненты React.\n\nРендеринг ReactDOM.\n\nКлассы компонентов и функциональных компоненты.\n\nJSX.\n\nСостояние (state).\n\nОбработка событий.\n\nАсинхронный метод setState.\n\nСвойства (props).\n\nСсылки (refs).\n\n\r\nЭто — практически всё', ' что нужно знать для того', ' чтобы создавать и поддерживать React-приложения.']"
['\n      dr_zorge\n    '],"['React', ' Drag&Drop и performance']",['Блог компании Macte JavaScript *Интерфейсы *ReactJS *'],"['\n\r\nВ данной статье мы расскажем про свой опыт реализации интерфейса редактирования расписания занятий. Расскажем о проблемах', ' с которыми мы столкнулись и о возможных путях решения.']"
['\n      ru_vds\n    '],"['11 библиотек (наборов компонентов) для React', ' о которых стоит знать в 2018-м']",['Блог компании RUVDS.com Разработка веб-сайтов *ReactJS *'],"['⬝ 11 библиотек (наборов компонентов) для Angular', ' о которых стоит знать в 2018-м\r\n⬝ 11 библиотек (наборов компонентов) для Vue', ' о которых стоит знать в 2018-м\r\n⬝ 11 библиотек (наборов компонентов) для React', ' о которых стоит знать в 2018-м\n\r\nСовременные фреймворки для разработки веб-приложений сформировали вокруг себя сообщества', ' члены которых', ' помимо прочих дел', ' занимаются разработкой библиотек для этих фреймворков. Подобные библиотеки находят применение во множестве проектов. Как правило', ' можно даже говорить о том', ' что', ' например', ' на чистом React', ' Angular или Vue', ' без применения дополнительных средств', ' веб-приложения сегодня не разрабатывают.\n\n\n\r\nПредставляем вашему вниманию перевод первого материала из серии статей', ' в каждой из которых рассмотрены 11 наиболее интересных библиотек для разных веб-фреймворков', ' на которые стоит обратить внимание в 2018-м. Сегодня поговорим о библиотеках для React.']"
['\n      HUJG\n    '],['Учимся быть фуллстек разработчиками. Пишем приложение на React/Redux/Webpack/ASP.NET Core 2.0/EF Core'],['.NET *C# *'],"['Ни для кого не секрет', ' что .net сейчас используется в большинстве случаев как инструмент бэкенд разработки', ' а в клиентской разработке последние лет 5 правит js сообщество с своей экосистемой и инструментами для разработки. Это все безобразие с каждым годом усиливает пропасть между фронтэндом и бэкендом', ' и планка вхождения в область становится все выше и выше', ' разработчики начинают делиться на два лагеря и уходит такое понятие как фуллстек. \n\r\nДа', ' под Node.js можно написать сервер', ' но для бэковой разработки', ' все же', ' .net бесспорный лидер. На js', ' на мой взгляд', ' очень сложно написать гибкий и легко поддерживаемый бэкенд', ' хотя возможно многие со мной и не согласятся.\n\r\nДавайте ударим автопробегом по бездорожью попытаемся вопреки всему этому написать SPA приложение с бэком на .net core и клиентом на js', ' из инструментов разработки будем использовать горячо любимую Visual Studio. \n\r\nПосле этого туториала', ' я надеюсь', ' веб и бэк разработчикам будет проще найти почву под ногами в вражьей области и понять в какую сторону двигаться для более углубленного изучения. Поехали!']"
['\n      m_vash\n    '],['Redux против React Context API'],['Разработка веб-сайтов *JavaScript *ReactJS *'],"['\n\r\nВ React 16.3 был добавлен новый Context API. Новый в том смысле', ' что старый Context API был за кадром', ' большинство людей либо не знали о его существовании', ' либо не использовали', ' потому что документация советовала избегать его использования.\n\r\nОднако теперь Context API является полноценной частью React', ' открытой для использования (не так', ' как раньше', ' официально).']"
['\n      ru_vds\n    '],['Разработка React-приложений с использованием ReasonReact'],['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['Вы применяете React для создания пользовательских интерфейсов? Автор материала', ' перевод которого мы публикуем', ' говорит', ' что он тоже работает с React. Здесь он хочет рассказать о том', ' почему для написания React-приложений стоит использовать ReasonML.\n\n\n\r\nReact — это очень хороший инструмент для разработки интерфейсов. Можно ли сделать его ещё лучше? Для того чтобы улучшить работу с React', ' сначала надо понять его основные проблемы. В частности', ' проблему', ' у истоков которой лежит тот факт', ' что React — это JavaScript-библиотека.']"
['\n      ph_piter\n    '],['Разбираемся с перехватчиками в React'],['Блог компании Издательский дом «Питер» Веб-дизайн *JavaScript *Профессиональная литература ReactJS *'],"['Привет', ' Хабр!\n\r\nМы с чувством невероятной гордости и облегчения сегодня вечером сдали в типографию новую книгу о React \n\n\n\r\nПо этому поводу предлагаем вам немного сокращенный перевод статьи Дэна Абрамова (Dan Abramov)', ' рассказывающего об использовании перехватчиков в 16-й версии React. В книге', ' которую мы сами уже ждем с нетерпением', ' об этом рассказано в 5-й главе.']"
['\n      gnaeus\n    '],['Иерархическое внедрение зависимостей в React и MobX State Tree в качестве доменной модели'],['JavaScript *Проектирование и рефакторинг *Angular *ReactJS *TypeScript *'],"[' Довелось мне как-то после нескольких проектов на React поработать над приложением под Angular 2. Прямо скажем', ' не впечатлило. Но один момент запомнился — управление логикой и состоянием приложения с помощью Dependency Injection. И я задался вопросом', ' удобно ли управлять состоянием в React используя DDD', ' многослойную архитектуру', ' и внедрение зависимостей?\nЕсли интересно', ' как это сделать', ' а главное', ' зачем — добро пожаловать под кат!']"
['\n      ru_vds\n    '],"['Учебный курс по React', ' часть 4: родительские и дочерние компоненты']",['Блог компании RUVDS.com Разработка веб-сайтов *ReactJS *'],"['Публикуем очередную часть перевода учебного курса по React. Нашей сегодняшней темой будут взаимоотношения родительских и дочерних компонентов.\n\n\n\r\n→ Часть 1: обзор курса', ' причины популярности React', ' ReactDOM и JSX\r\n→ Часть 2: функциональные компоненты\r\n→ Часть 3: файлы компонентов', ' структура проектов\r\n→ Часть 4: родительские и дочерние компоненты\r\n→ Часть 5: начало работы над TODO-приложением', ' основы стилизации\r\n→ Часть 6: о некоторых особенностях курса', ' JSX и JavaScript\r\n→ Часть 7: встроенные стили\r\n→ Часть 8: продолжение работы над TODO-приложением', ' знакомство со свойствами компонентов\r\n→ Часть 9: свойства компонентов\r\n→ Часть 10: практикум по работе со свойствами компонентов и стилизации\r\n→ Часть 11: динамическое формирование разметки и метод массивов map\r\n→ Часть 12: практикум', ' третий этап работы над TODO-приложением\r\n→ Часть 13: компоненты', ' основанные на классах\r\n→ Часть 14: практикум по компонентам', ' основанным на классах', ' состояние компонентов\r\n→ Часть 15: практикумы по работе с состоянием компонентов\r\n→ Часть 16: четвёртый этап работы над TODO-приложением', ' обработка событий\r\n→ Часть 17: пятый этап работы над TODO-приложением', ' модификация состояния компонентов\r\n→ Часть 18: шестой этап работы над TODO-приложением\r\n→ Часть 19: методы жизненного цикла компонентов\r\n→ Часть 20: первое занятие по условному рендерингу\r\n→ Часть 21: второе занятие и практикум по условному рендерингу\r\n→ Часть 22: седьмой этап работы над TODO-приложением', ' загрузка данных из внешних источников\r\n→ Часть 23: первое занятие по работе с формами\r\n→ Часть 24: второе занятие по работе с формами\r\n→ Часть 25: практикум по работе с формами\r\n→ Часть 26: архитектура приложений', ' паттерн Container/Component\r\n→ Часть 27: курсовой проект']"
['\n      ru_vds\n    '],['Использование Babel и Webpack для настройки React-проекта с нуля'],['Блог компании RUVDS.com Разработка веб-сайтов *ReactJS *'],"['Существует немало инструментов', ' позволяющих подготовить среду для React-разработки. Например', ' в наших материалах учебного курса по React используется средство create-react-app', ' позволяющее создать шаблонный проект', ' содержащий всё необходимое для разработки React-приложений. Автор статьи', ' перевод которой мы публикуем сегодня', ' хочет рассказать о том', ' как самостоятельно настроить окружение для разработки React-проектов с использованием Babel и Webpack. Эти инструменты используются и в проектах', ' создаваемых средствами create-react-app', ' и мы полагаем', ' что всем', ' кто изучает React-разработку', ' интересно будет познакомиться с ними и с методикой создания React-проектов на более глубоком уровне. А именно', ' речь пойдёт о том', ' как сконфигурировать Webpack таким образом', ' чтобы это средство использовало бы Babel для компиляции JSX-кода в JavaScript-код', ' и как настроить сервер', ' используемый при разработке React-проектов.\n\n']"
['\n      SalebaAndrey\n    '],['Интеграция React Native и C++ для iOS и Android'],['Разработка под iOS *C++ *Разработка мобильных приложений *Разработка под Android *'],"['Недавно мне предложили поработать над одним интересным проектом. Требовалось разработать мобильное приложение для американского стартапа на платформах iOS и Android с помощью React Native. Ключевой технической особенностью и фактором', ' который однозначно решил мое участие в проекте', ' стала задача интегрировать библиотеку', ' написанную на языке С++. Для меня это могло быть новым опытом и новым профессиональным испытанием.\n\nПочему было необходимо интегрировать С++ библиотеку\r\nДанное приложение было необходимо для двухфакторной аутентификации с помощью протоколов FIDO UAF и U2F', ' использующих биометрические данные', ' таких как Face ID и Touch ID', ' и аналогичных технологий для Android платформы. Клиент для аутентификации был уже готов. Это была библиотека', ' написанная на С++ и применяемая некоторыми другими клиентами помимо мобильного приложения. Так что от меня требовалось встроить ее аналогичным образом в мобильное приложение на React Native.\n']"
['\n      mn3m0n1c_3n3m1\n    '],['Автоматизируем переход на React Hooks'],['JavaScript *Node.JS *Компиляторы *ReactJS *'],"['React 16.18 — первый стабильный релиз с поддержкой react hooks. Теперь хуки можно использовать не опасаясь', ' что API изменится кардинальным образом. И хотя команда разработчиков react советует использовать новую технологию лишь для новых компонентов', ' многим', ' в том числе и мне', ' хотелось бы их использовать и для старых компонентов использующих классы. Но поскольку ручной рефакторинг — процесс трудоемкий', ' мы попробуем его автоматизировать. Описанные в статье приемы подходят для автоматизации рефакторинга не только react компонентов', ' но и любого другого кода на JavaScript. ']"
['\n      ru_vds\n    '],"['Учебный курс по React', ' часть 28: современные возможности React', ' идеи проектов', ' заключение']",['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['Сегодня', ' в заключительной части перевода курса по React', ' мы поговорим о современных возможностях React и обсудим идеи React-приложений', ' создавая которые', ' вы можете повторить то', ' чему научились', ' проходя этот курс', ' и узнать много нового.\n\n\n\r\n→ Часть 1: обзор курса', ' причины популярности React', ' ReactDOM и JSX\r\n→ Часть 2: функциональные компоненты\r\n→ Часть 3: файлы компонентов', ' структура проектов\r\n→ Часть 4: родительские и дочерние компоненты\r\n→ Часть 5: начало работы над TODO-приложением', ' основы стилизации\r\n→ Часть 6: о некоторых особенностях курса', ' JSX и JavaScript\r\n→ Часть 7: встроенные стили\r\n→ Часть 8: продолжение работы над TODO-приложением', ' знакомство со свойствами компонентов\r\n→ Часть 9: свойства компонентов\r\n→ Часть 10: практикум по работе со свойствами компонентов и стилизации\r\n→ Часть 11: динамическое формирование разметки и метод массивов map\r\n→ Часть 12: практикум', ' третий этап работы над TODO-приложением\r\n→ Часть 13: компоненты', ' основанные на классах\r\n→ Часть 14: практикум по компонентам', ' основанным на классах', ' состояние компонентов\r\n→ Часть 15: практикумы по работе с состоянием компонентов\r\n→ Часть 16: четвёртый этап работы над TODO-приложением', ' обработка событий\r\n→ Часть 17: пятый этап работы над TODO-приложением', ' модификация состояния компонентов\r\n→ Часть 18: шестой этап работы над TODO-приложением\r\n→ Часть 19: методы жизненного цикла компонентов\r\n→ Часть 20: первое занятие по условному рендерингу\r\n→ Часть 21: второе занятие и практикум по условному рендерингу\r\n→ Часть 22: седьмой этап работы над TODO-приложением', ' загрузка данных из внешних источников\r\n→ Часть 23: первое занятие по работе с формами\r\n→ Часть 24: второе занятие по работе с формами\r\n→ Часть 25: практикум по работе с формами\r\n→ Часть 26: архитектура приложений', ' паттерн Container/Component\r\n→ Часть 27: курсовой проект\r\n→ Часть 28: современные возможности React', ' идеи проектов', ' заключение\r\n→ The end!']"
['\n      evhandel\n    '],['Под капотом у React. Пишем свою реализацию с нуля'],['JavaScript *ReactJS *'],"['\u2028\u2028\u2028В этом цикле статей мы создадим свою реализацию React с нуля. По окончании у вас будет понимание', ' как работает React', ' какие методы жизненного цикла компонента он вызывает и для чего. Статья рассчитана на тех', ' кто уже использовал React и хочет узнать о его устройстве', ' или на очень любопытных.\n\n']"
['\n      freislot\n    '],['React Hook Router современная альтернатива React Router'],['Разработка веб-сайтов *JavaScript *ReactJS *'],"['\n\r\nВольный перевод публикации How React Hooks can replace React Router.\r\nАвтор Peter Ekene Eze.\n\r\nС момента появления React Hooks многое изменилось. Возможности', ' предоставляемые хуками', ' позволили пересмотреть наш подход к определенным концепциям в React', ' в том числе и к маршрутизации.\n\r\nЭтот пост никоим образом не предназначен для того', ' чтобы списывать со счетов React Router или приуменьшать его важность. Мы изучим другие возможности и посмотрим', ' как мы можем улучшить работу с маршрутизацией в приложениях React', ' используя хуки.\n\r\nС этой целью мы сравним React Router и hooksrouter на наглядных примерах. Для начала давайте поближе посмотрим на React Router.']"
['\n      ru_vds\n    '],['Заменяют ли хуки в React Redux?'],['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['С тех пор', ' как в React появились хуки', ' возникает много вопросов о том', ' способны ли они заменить Redux.\n\r\nЯ полагаю', ' что хуки и Redux имеют мало общего между собой. Хуки не дают нам неких новых удивительных возможностей по работе с состоянием. Они', ' вместо этого', ' расширяют API', ' позволяющие делать в React то', ' что в нём уже было возможным. Однако API хуков сделал гораздо удобнее работу со встроенными возможностями React по управлению состоянием. Оказалось', ' что новыми возможностями по работе с состоянием пользоваться легче', ' чем старыми', ' которые имелись в компонентах', ' основанных на классах. Теперь я гораздо чаще', ' чем раньше', ' использую средства по работе с состоянием компонентов. Естественно', ' поступаю я так лишь тогда', ' когда это уместно.\n\n\n\r\nДля того чтобы объяснить моё отношение к хукам React и к Redux', ' мне хотелось бы сначала рассказать о том', ' в каких ситуациях обычно прибегают к использованию Redux.']"
['\n      merrymaker14\n    '],"['Лучшие практики React и советы', ' которые каждый разработчик должен знать. Часть 1']",['ReactJS *'],"['Привет', ' Хабр! Представляю вашему вниманию перевод статьи «React Best Practices & Tips Every React Developer Should Know Pt.1» автора Alex Devero.\n\n\n\r\nReact — одна из самых популярных библиотек для построения интерактивных пользовательских интерфейсов. В этой статье я покажу вам несколько примеров лучших практик по React', ' которые помогут вам стать лучше как разработчик. Ознакомьтесь с этими инструкциями', ' чтобы начать писать код на React лучше.\n\r\nСодержание:\n\n\nСохраняйте ваши компоненты небольшими\nИзбегайте нагромождения компонентов\nСократите использование stateful-компонентов\nИспользуйте функциональные компоненты с хуками и memo вместо компонентов на классах\nНе используйте props в исходном state.\n']"
['\n      ru_vds\n    '],['14 советов по написанию чистого React-кода. Часть 2'],['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],['Сегодня мы публикуем вторую часть материала о написании чистого кода при разработке React-приложений. Вот ещё несколько полезных советов.\n\n\n\r\n→ Читать первую часть']
['\n      gev_petrosian\n    '],['React Native — серебряная пуля для всех проблем? Как мы выбирали кросс-платформенный инструмент для Profi.ru'],['Разработка под iOS *Разработка под Android *ReactJS *'],"['Всем привет', ' меня зовут Геворг. Я Head of Mobile в Profi.ru. Хочу поделиться с вами историей нашего эксперимента с React Native. Расскажу', ' как мы оценивали плюсы и минусы разработки на React Native — в теории и на практике. Статья будет полезна тем', ' кто интересуется кросс-платформенной мобильной разработкой', ' но пока не решил', ' идти в эту сторону или нет.\n\nМаксимальное ускорение\n\r\nВсё началось с того', ' что мы решили ускорить разработку в 10 раз на уровне компании. Поставили невыполнимую цель', ' чтобы выйти за привычный горизонт событий и попробовать новое. Все команды разработки Profi.ru взялись за эксперименты. На тот момент в компании было 13 нативных мобильных разработчиков', ' включая меня и двух тимлидов. Моя команда работала над двумя мобильными приложениями. В первом клиенты ищут специалистов', ' во втором — специалисты клиентов. Для меня этот период был непонятным и эмоционально напряжённым. По моим ощущениям', ' мы и так много делали', ' чтобы всё работало быстро. \n\r\nИспользовали общую архитектуру на всём проекте и следили за чистотой кода. Использовали генераторы', ' которые создают все файлы модулей. Всю бизнес-логику старались выносить на backend. Настроили CI/CD', ' а приложения покрыли E2E-тестами. За счёт всего этого стабильно релизили некоторые приложения раз в неделю. Я понятия не имел', ' как ускорить разработку даже в два раза. Куда уж в 10. Поэтому мы определили', ' что для нас важно.\n']"
['\n      PatriciaNeil\n    '],['React benefits: A blessing for Businesses?'],['JavaScript *Программирование *Разработка мобильных приложений *ReactJS *Софт '],"['Launched in 2013', ' React has been successfully used to develop 1', '004', '124 websites in the past 6 years. The Javascript library React JS is known for giving simple programming experience and improved performance.\n\r\nIt was released by Facebook to resolve the issues of coding and maintenance with their ads. It was developed with an intention to increase and manage Facebook ads traffic. React has successfully delivered the expected outcomes throughout its journey.']"
['\n      ru_vds\n    '],['Пришло ли время забыть о React и перейти на Svelte?'],['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *SvelteJS *'],"['Каждый год выходит исследование State of JavaScript', ' которое обобщает результаты опроса', ' изучающего текущее состояние экосистемы JavaScript. Это исследование затрагивает фронтенд-фреймворки', ' серверную и мобильную разработку', ' тестирование', ' популярные ресурсы для разработчиков и многое другое.\n\r\nВ нём всё', ' конечно', ' крутится вокруг JavaScript. Поэтому если вы используете для веб-разработки JS — я очень рекомендую взглянуть на State of JavaScript в том случае', ' если вы ещё этого не сделали.\n\r\nДля меня одним из самых интересных результатов State of JavaScript стало неожиданное внимание тех', ' кто участвовал в опросе', ' к фронтенд-фреймворку Svelte.\n\r\nВ общем рейтинге ведущих фронтенд-инструментов (основанном на показателях осведомлённости о фреймворке', ' интереса к нему и удовлетворённости им) Svelte появился на второй позиции. Он идёт там сразу после React', ' опережая такие хорошо известные инструменты', ' как Vue.js', ' Preact', ' Angular и Ember.\r\nМеня это слегка шокировало', ' так как Svelte — это сравнительно новый инструмент — как в плане возраста', ' так и в плане парадигмы разработки программного обеспечения.\n\n\nРейтинг фронтенд-фреймворков по результатам исследования State of JavaScript']"
['\n      botyaslonim\n    '],[' ... : как переиспользуемые компоненты React помогут фронтенд-разработчику ... '],['Блог компании Mail.ru Group Разработка веб-сайтов *JavaScript *ReactJS *'],"['\r\nВносить однотипные изменения в три-четыре разных места в JS-коде — искусство', ' требующее концентрации внимания. Если элементов больше', ' поддержка кода превращается в муку. Поэтому для долгосрочных или крупных проектов следует писать код так', ' чтобы его можно было вынести в отдельные компоненты. \n\r\nЯ занимаюсь фронтенд-разработкой уже 10 лет и расскажу о применении компонентов для создания элементов фронтенда — это значительно упрощает жизнь фронтенд-разработчика.\n\nНаписано при поддержке Mail.ru Cloud Solutions.']"
['\n      aleme\n    '],['React и Atlaskit в серверных и датацентровых плагинах Atlassian'],['Atlassian *'],"['Всем привет!\n\r\nВ этой статье я бы хотел поговорить о том', ' как использовать React и Atlaskit в плагинах Atlassian в Server и Data Center окружениях.']"
['\n      KnightForce\n    '],['Почему я ушёл с React Native и перешёл во Flutter: Часть 1'],['Блог компании Surf Программирование *Разработка мобильных приложений *Flutter *'],"['Всем привет. Меня зовут Дмитрий Андриянов. Два года писал на React Native', ' сейчас я разработчик в Surf и уже полтора года пишу на Flutter. Когда я только решил серьёзно взяться за Flutter', ' я бы очень хотел найти статью от разработчика', ' который перешёл с React Native на Flutter и узнать его мнение. Теперь этот разработчик — я.\n\r\nСкорее-всего вы видели такие отзывы о React Native и как компании отказываются от него. Я поделюсь своим личным мнением со стороны одного разработчика', ' а не компании.\n\nЭта статья для тех', ' кто:\n\nНе знаком с кросс-платформой и хочет понять основную разницу между технологиями.\nПишет на React Native и хочет узнать', ' что он выиграет при переходе на Flutter.\nНе писал на React Native', ' а только на Flutter.\n\r\nНиже расскажу почему в своё время я выбрал React Native', ' поделюсь причинами ухода во Flutter и приведу основные различия между React Native и Flutter', ' которые', ' на мой взгляд', ' наиболее важны. Со времени ухода с React Native прошло много времени — что-то изменилось и исправлено. Я постарался это учесть', ' но что-то мог упустить из виду.\n\n']"
['\n      ledamint\n    '],"['Urban Bot или как писать чат-ботов для Telegram', ' Slack', ' Facebook… на React.js']",['JavaScript *Node.JS *ReactJS *TypeScript *'],"['\nВ этой статье я хочу познакомить с новой библиотекой Urban Bot', ' которая адаптирует React для написания чат-ботов. Ниже я расскажу', ' зачем эта библиотека появилась на свет', ' какие дает преимущества и как написать вашего первого чат-бота.\nЧат-бот — это чаще всего отдельный чат в мессенджере', ' в котором вы общаетесь не с человеком', ' а с программой. Он может присылать сообщения в виде текста', ' изображений', ' кнопок и многих других UI элементов и реагировать на сообщения от пользователей. Современные чат-боты — это полноценные UI приложения внутри мессенджеров.В отличии от большинства чат-бот библиотек', "" которые чаще всего просто оборачивают http запросы в функции с готовыми аргументами и предоставляют подписки вида bot.on('message'"", ' callback)', ' иногда позволяя передавать контекст между вызовами', ' Urban Bot предлагает совершенно иной подход к разработке чат-ботов — через декларативное программирование и компонентный подход. Живой пример', ' написанный на Urban Bot', ' вы можете попробовать в Telegram', ' cсылка на чат-бот', ' и посмотреть код на GitHub.\nКак мы заметили выше', ' чат-боты это полноценные UI приложения. А какой язык в 2020 и какая библиотека наиболее подходит для разработки UI приложений? Правильно', ' JavaScript и React. Такая интеграция позволяет легко и непринужденно строить чат-боты любой сложности без единого знания об API мессенджеров. Далее я расскажу', ' как создавать простые компоненты и на их основе строить сложных чат-ботов', ' работать с навигацией', ' создавать диалоги любой вложенности', ' писать одно приложение и запускать в любых мессенджерах', ' и многое другое.']"
['\n      IvanGanev\n    '],['Как эффективно применять React Context'],['Разработка веб-сайтов *JavaScript *ReactJS *'],"['В статье\xa0Как управлять состоянием React приложения без сторонних библиотек', ' я писал о том как сочетание локального состояния и контекста (React Context) поможет вам упростить управление состоянием при разработке приложения. В этой статье я продолжу эту тему - мы поговорим о методах эффективного использования потребителей контекста (Context Consumer)', ' которые помогут вам избежать ошибок и упростят разработку приложений и/или библиотек.Рекомендую перед прочтением этой статьи прочитать Как управлять состоянием React приложения без сторонних библиотек. Особенно обратите внимание на рекомендацию о том что не нужно применять контексты для решения всех проблем связанных с передачей состояния. Однако', ' когда вам все таки понадобиться применять контексты', ' надеюсь эта статья поможет вам делать это наиболее эффективным образом. Так же помните о том что контексты НЕ обязательно должны быть глобальными', ' контекст может (и скорее всего', ' должен) быть частью какой либо ветки в структуре вашего приложения.Давайте', ' для начала', ' создадим файл\xa0src/count-context.js\xa0и пропишем там наш контекст:']"
['\n      KnightForce\n    '],['Почему я ушёл с React Native и перешёл во Flutter: Часть 2'],['Блог компании Surf Программирование *Разработка мобильных приложений *ReactJS *Flutter *'],"['Всем привет. Меня зовут Дмитрий Андриянов. Два года я писал на React Native', ' сейчас работаю в Surf во Flutter отделе и уже более полутора лет пишу на Flutter.\n\r\nВ первой части статьи я рассказал про основные различия между React Native и Flutter.\r\nВ этой части расскажу про различия между React Native и Flutter при создании UI для Android и iOS.\n\n\n']"
['\n      KLugovaya\n    '],['Что выбрать в качестве библиотеки компонентов для React-проекта'],['Разработка веб-сайтов *Open source *JavaScript *ReactJS *TypeScript *'],"['Меня зовут Ксюша Луговая. В СберКорусе я занимаюсь поддержкой библиотеки React-компонентов Korus-UI.\xa0С проблемой выбора библиотеки рано или поздно сталкивается почти каждый разработчик', ' и порой решение может быть нетривиальным. Возникают вопросы: чем\xa0руководствоваться при выборе библиотеки', ' какие популярные решения предлагает рынок', ' какие у них плюсы и минусы? Обзоры и отзывы не всегда помогают найти решение.В мире разработки не существует идеального варианта на все случаи. Поэтому в\xa0статье я\xa0расскажу', ' как мы решаем эту задачу', ' и разберу на примерах анализа нескольких популярных решений', ' как выбрать библиотеку React-компонентов для\xa0своего проекта.\xa0']"
['\n      varunbhagat1\n    '],['React Native: The First Choice of Mobile App Developers and Businesses'],['Разработка под iOS *Разработка мобильных приложений *Разработка под Android *Дизайн мобильных приложений *'],"['\n\nLet’s discuss why mobile app developers select React Native for application development over other cross-platform frameworks.\n\r\nWhile few users continue to work with the Native development approach', ' those who want to succeed in their business have started exploring new opportunities. One such occasion in this technically advanced world is to turn toward cross-platform frameworks.\n\r\nOut of 2.8 million apps available on the Google play store and 2.2 million apps in Apple App Store', ' there is a growing need for cross-platform applications. The significant advantage of a cross-platform mobile application is that it helps businesses save development costs. This is where React Native comes into action.\n\r\nIn the middle of this', ' if you are a businessman and thinking of hiring mobile app developers and there is a continuously running debate in your mind “React Native vs Native” then this post is for you.\n']"
['\n      aio350\n    '],"['Заметка о том', ' как работают хуки в React']",['Разработка веб-сайтов *JavaScript *Программирование *ReactJS *'],"['\n\r\nДоброго времени суток', ' друзья!\n\r\nХочу поделиться с вами некоторыми наблюдениями относительно того', ' как работает React', ' а именно: предположениями о том', ' почему хуки нельзя использовать в if', ' циклах', ' обычных функциях и т.д. И действительно ли их нельзя использовать подобным образом?\n\r\nВопрос звучит следующим образом: почему хуки можно использовать только на верхнем уровне? Вот что по этому поводу говорит официальная документация.\n\r\nНачнем с правил использования хуков.\n']"
['\n      maxpetrikov\n    '],['Как разобраться в исходном коде React'],['Open source *JavaScript *ReactJS *'],"['React самая популярная библиотека для построения пользовательских интерфейсов. Мы знаем про виртуальное дерево', ' движок fiber', ' процедуру reconcilation', ' хуки и другие прекрасные возможности react. Но как это работает на уровне исходного кода? Ответить на этот вопрос смогут очень небольшое количество программистов.В этой статье', ' я стараюсь дать начальное понимание как разобраться в исходниках', ' отлаживать react и как сделать первые шаги в становлении контрибьютором.Надеюсь это введение станет для кого-то отправной точкой и рассеет страхи', ' связанные с тем что разобраться в исходниках популярной библиотеки слишком сложно и ""это не для меня"".']"
['\n      MaxRokatansky\n    '],['6 лучших практик React в 2021 году'],['Блог компании OTUS Программирование *ReactJS *'],"['Написание чистого и удобочитаемого кода необходимо для повышения его качества. Кроме того', ' чистый код легче тестировать. Нет причин не потратить пять лишних минут на рефакторинг кода', ' чтобы сделать его более удобным для чтения.В этой статье рассматриваются шесть лучших практик React 2021 года', ' чтобы улучшить свой код. Речь пойдет о следующих пунктах:']"
['\n      technokratiya\n    '],['React 18: что нужно знать о новой версии'],['JavaScript *ReactJS *'],"['В начале лета в официальном блоге React вышла новость о планах на 18 версию библиотеки. Команда разработчиков рассказала о новых фичах и API', ' которые планируется зарелизить в обновлении. Меня зовут Ильмир Шайхутдинов', ' я frontend разработчик Технократии', ' и в этой статье я хочу пробежаться по изменениям и познакомить вас с ними поближе.\xa0']"
['\n      jojo97\n    '],"['Построение надежных веб-приложений на React: Часть 1', ' браузерные прототипы']",['Разработка веб-сайтов *JavaScript *ReactJS *'],"['Перевод статьи «Building robust web apps with React: Part 1', ' in-browser prototypes»', ' Matt Hinchliffe\n\r\nОт переводчика: это первая статья из цикла «Building robust web apps with React».\r\nПереводы: \n\nПостроение надежных веб-приложений на React: Часть 1', ' браузерные прототипы\nПостроение надежных веб-приложений на React: Часть 2', ' оптимизация с Browserify\nПостроение надежных веб-приложений на React: Часть 3', ' тестирование с Jasmine\nПостроение надежных веб-приложений на React: Часть 4', ' серверная генерация\n\n\r\nКогда я смотрю на то', ' как устроены браузеры и протоколы', ' на которых работает веб', ' мне становится как-то тревожно. Есть столько всего', ' что может и', ' обычно', ' идет не так', ' что становится удивительно', ' как хоть что-то из того', ' что мы пишем', ' вообще работает. Надежность «вопреки всему» происходит от отказоустойчивости и обратной совместимости', ' которые укоренились в ключевые части веб-стека. Браузер всегда сделает все возможное', ' чтобы отобразить', ' что-то полезное', ' будь-то парсинг плохо написанного документа', ' в котором невозможно получить зависимости', ' или', ' который на 10 лет устарел.\n\n\n404PageFound содержит до сих пор работающие сайты', ' созданные еще в 1993 году.\n']"
['\n      MostovenkoAlexander\n    '],['Разработка javascript приложений на базе Rx.js и React.js (RxReact)'],['Разработка веб-сайтов *JavaScript *ReactJS *'],"['\r\nReact.js позволяет очень эффективно и быстро работать с DOM-ом', ' активно развивается и с каждым днем набирает все больше популярности. Недавно открыл для себя концепцию реактивного программирования', ' в частности', ' не менее популярную библиотеку Rx.js. Данная библиотека выводит на новый уровень работу с событиями и асинхронным кодом', ' которого в UI логике javascript приложений предостаточно. Пришла идея объединить мощь данных библиотек в одно целое и посмотреть что из этого выйдет. В этой статье вы узнаете о том как удалось подружить Rx.js и React.js.\n']"
['\n      olegshilov\n    '],['React на ES6+'],['Разработка веб-сайтов *JavaScript *ReactJS *'],"['Это перевод поста Steven Luscher опубликованного в блоге Babel. Steven работает в Facebook над Relay – JavaScript фрэймворком для создания приложений с использованием React и GraphQL.\nЗа этот год', ' в процессе реорганизации Instagram Web', ' мы насладились использованием ряда особенностей ES6+', ' при написании нашх React компонентов. Позвольте мне остановиться на тех моментах', ' когда новые возможности языка могут повлиять на то как вы пишите React приложения', ' и сделают этот процесс легче и веселее', ' чем когда-либо.\n']"
['\n      forcewake\n    '],['Использование React JSX вместе с TypeScript 1.6'],['Разработка веб-сайтов *JavaScript *ReactJS *TypeScript *'],"['Не так давно Microsoft объявила о выпуске TypeScript 1.6 Beta', ' одним из интересных', ' на мой взгляд', ' нововведением является поддержка React/JSX', "" что в совокупности с особенностями TypeScript'а открывает новые возможности.\n\n\n\r\nЯ расскажу о личном опыте — как начал использовать связку TypeScript + React"", ' с каким проблемами столкнулся и как их решал. А так же покажу примеры gulp-тасков для того', ' чтобы это все заработало и продемонстрирую код минимального todo приложения на TypeScript + React (ссылка на Github).\n\r\nЕсли вам это интересно — пожалуйста', ' заходите под кат.']"
['\n      lavrton\n    '],['Про использование React с элементом canvas'],['JavaScript *HTML *Canvas *ReactJS *'],"['Есть такой замечательный фреймворк React', ' который позволяет работать с огромным и мутабельным DOM в красивом иммутабельном функциональном стиле. Это действительно круто.\n\r\nНо я бы хотел рассказать про опыт использования React', ' который позволяет работать с мутабельной абстракцией над ""иммутабельным"" canvas элементом. Звучит странно', ' но работает отлично.\n\nМотивация\r\nЯ использую элемент <canvas> очень часто. Я сделал несколько достаточно сложных веб-приложений', ' в которых canvas — это основной элемент представления данных. Использовать canvas без всяких фреймворков и библиотек может быть действительно сложно в крупных приложениях. Поэтому я начал часто использовать фреймворки. Сейчас я поддерживаю фреймворк Konva (есть обзорная статья https://habrahabr.ru/post/250897/).\n\r\nKonva помогает очень сильно', ' но хочется большего. Так же я начал использовать React в своих приложениях', ' и он мне действительно нравится. И я подумал', ' как же я могу использовать React для рисования графики на canvas?\n\n\n\n']"
['\n      KyKyPy3uK\n    '],['Тестирование в React'],['Блог компании InfoWatch Тестирование IT-систем *ReactJS *'],"['\n\r\nКаждый JS-разработчик рано или поздно начинает писать тесты и сожалеть', ' что не стал делать этого раньше. Поскольку за последние пару лет все постепенно перешли к компонентной разработке на основе React', ' Angular или', ' например', ' Vue', ' это дало очередной толчок для популяризации тестирования', ' так как компоненты обычно малы и тестировать их гораздо проще. В данной статье мы рассмотрим компонентное тестирование в React. ']"
['\n      m1skam\n    '],['React.js State of the art (интервью с Max Stoiber)'],['Блог компании JUG Ru Group JavaScript *ReactJS *'],"['\n\r\nСовременная разработка веб-интерфейсов сосредоточена вокруг нескольких больших сообществ. На протяжении последних пяти лет React завоевывал симпатии программистов из самых разных отраслей. React – это одна-единственная библиотека', ' сделавшая MVC рудиментарным в программировании веб-интерфейсов. Сегодня React используется крупнейшими компаниями для разработки самых разнообразных продуктов — Facebook', ' Airbnb', ' BBC', ' Coursera', ' eBay', ' Expedia', ' IMDB', ' список можно продолжать.\n\r\nОдной из уникальных особенностей мира React является крупнейшее и очень активное сообщество опенсорс-разработчиков вокруг него. Max Stoiber — один из людей', ' благодаря которым React стал тем', ' чем он является на сегодня как проект. На протяжении последних нескольких лет он работал над популярнейшим boilerplate проектом в сообществе и внедрял новейшие и лучшие технологии в массовое использование.\n\r\nМы поговорили с Максом о новых веяниях в сообществе', ' о статической типизации для разработки с React', ' о новом подходе стилизации компонентов и о snapshot-тестировании.\n\r\nК секретам разработки на React можно приобщиться ниже в интервью.\n']"
['\n      vtikunov\n    '],['Мыслим в стиле React'],['Разработка веб-сайтов *JavaScript *ReactJS *'],"['\nПеревод туториала официальной документации библиотеки React.js.\nМыслим в стиле React\nReact', ' на наш взгляд', ' это лучший способ построить большое', ' быстрое веб-приложение с помощью JavaScript. По нашему опыту в Facebook и Instagram', ' приложение на React также очень хорошо масштабируется.\nОдно из многих замечательных свойств React — это принцип ""Как вы проектируете приложение', ' также вы и создаете его"". В этом туториале вы пройдете весь мыслительный процесс проектирования и создания приложения React', ' отображающего таблицу данных для поиска товара.\n']"
['\n      NIX_Solutions\n    '],['Как организовать большое React-приложение и сделать его масштабируемым'],['Блог компании NIX Программирование *ReactJS *'],"['\n\r\nОдной из лучших особенностей React является то', ' что он не накладывает каких-либо ограничений на файловую структуру проекта. Поэтому на StackOverflow и аналогичных ресурсах так много вопросов о том', ' как структурировать React-приложения. Это очень спорная тема. Не существует единственного правильного пути. Предлагаем разобраться в этом вопросе с помощью статьи Джека Франклина', ' в которой он рассказывает о подходе к структурированию больших React-приложений. Здесь вы узнаете', ' какие решения можно принимать при создании React-приложений: о выборе инструментов', ' структурировании файлов и разбивки компонентов на более мелкие части.\n']"
['\n      maxfarseer\n    '],['Разработка игры на React + SVG. Часть 2'],['JavaScript *Разработка игр *'],"['TL;DR: в этих сериях вы узнаете', ' как заставить React и Redux управлять SVG элементами для создания игры. Полученные в этой серии знания позволят вам создавать анимацию не только для игр. Вы можете найти окончательный вариант исходного кода', ' разработанного в этой части', ' на GitHub\n']"
['\n      ru_vds\n    '],['9 советов по улучшению качества кода React-приложений'],['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['Библиотека React значительно облегчает жизнь разработчиков', ' которым приходится создавать сложные пользовательские интерфейсы. Программисту достаточно подготовить простые описания графических представлений для состояний приложения', ' а React', ' при изменении данных', ' будет эффективно обновлять и перерисовывать только те компоненты', ' на которые повлияли эти изменения. Однако', ' для того', ' чтобы создавать качественные проекты на React', ' программисту нужно приложить усилия', ' направленные на освоение этой библиотеки и вспомогательных средств разработки.\n\n\n\r\nАвтор статьи', ' перевод которой мы сегодня публикуем', ' хочет поделиться с аудиторией React-разработчиков девятью полезными советами', ' направленными на повышение качества кода. Эти советы затрагивают довольно широкий диапазон тем — от инструментальных средств до стиля программирования.']"
['\n      maryzam\n    '],['Как подружить React и D3'],['JavaScript *Визуализация данных ReactJS *'],"['D3 одна из наиболее популярных javascript-библиотек для создания динамических и интерактивных визуализаций данных. Сегодня ее используют сотни тысяч сайтов и web-приложений. \nВ интернете огромное количество примеров – от банальных линейных графиков до динамически обновляющихся диаграмм Вороного – созданных с помощью этой библиотеки. Кажется', ' что можно найти готовый код для любой самой причудливой визуализации и лишь немного модифицировать его «под себя». \nОднако', ' интеграция D3 в web-приложение', ' построенное на React', ' на практике оказывается не самой простой задачей.\n']"
['\n      Banderolka\n    '],['Почему мы выбрали Vue.js (а не React)'],['Блог компании Бандеролька '],"['Недавно команда Qwintry начала активную миграцию на Vue.js во всех наших старых и новых проектах:\n\n\n в legacy системе', ' работающей на Drupal (qwintry.com) \n в нашей новой', ' полностью переписанной ветке qwintry.com (бекэнд на Yii2 / Node.js) \n в наших B2B-системах (работающих на Yii2) (logistics.qwintry.com) \n во всех наших мелких внутренних и публичных проектах (в основном использующих PHP и Node.js на бэкенде)\n\r\nПочему наши программисты остановили выбор на Vue.js', ' рассказывает руководитель департамента разработки Qwintry LLC. Антон Сидашин ➔\n']"
['\n      bespechnost\n    '],['Маршрутизация в большом приложении на React'],['Блог компании Rambler&Co Разработка веб-сайтов *JavaScript *Программирование *ReactJS *'],"['\nПривет', ' меня зовут Борис Шабанов', ' я — руководитель Frontend-разработки в департаменте разработки рекламных технологий Rambler Group. Сегодня я расскажу вам о том', ' как на нашем приложении возникли проблемы маршрутизации', ' и про то', ' как мы их решали.']"
['\n      mrsuh\n    '],"['Сравниваем PHP FPM', ' PHP PPM', ' Nginx Unit', ' React PHP и RoadRunner']",['Высокая производительность *PHP *Программирование *Тестирование веб-сервисов *'],['\n\r\nТестирование производилось с помощью Yandex Tank.\r\nВ качестве приложения использовались Symfony 4 и PHP 7.2.\r\nЦелью являлось сравнение характеристик сервисов при разных нагрузках и нахождение оптимального варианта.\r\nДля удобства все собрано в docker-контейнеры и поднимается с помощью docker-compose.\r\nПод катом много таблиц и графиков.']
['\n      ru_vds\n    '],"['Учебный курс по React', ' часть 3: файлы компонентов', ' структура проектов']",['Блог компании RUVDS.com Разработка веб-сайтов *ReactJS *'],"['В этом материале мы поговорим о файлах компонентов и о структуре React-проектов.\n\n\n\r\n→ Часть 1: обзор курса', ' причины популярности React', ' ReactDOM и JSX\r\n→ Часть 2: функциональные компоненты\r\n→ Часть 3: файлы компонентов', ' структура проектов\r\n→ Часть 4: родительские и дочерние компоненты\r\n→ Часть 5: начало работы над TODO-приложением', ' основы стилизации\r\n→ Часть 6: о некоторых особенностях курса', ' JSX и JavaScript\r\n→ Часть 7: встроенные стили\r\n→ Часть 8: продолжение работы над TODO-приложением', ' знакомство со свойствами компонентов\r\n→ Часть 9: свойства компонентов\r\n→ Часть 10: практикум по работе со свойствами компонентов и стилизации\r\n→ Часть 11: динамическое формирование разметки и метод массивов map\r\n→ Часть 12: практикум', ' третий этап работы над TODO-приложением\r\n→ Часть 13: компоненты', ' основанные на классах\r\n→ Часть 14: практикум по компонентам', ' основанным на классах', ' состояние компонентов\r\n→ Часть 15: практикумы по работе с состоянием компонентов\r\n→ Часть 16: четвёртый этап работы над TODO-приложением', ' обработка событий\r\n→ Часть 17: пятый этап работы над TODO-приложением', ' модификация состояния компонентов\r\n→ Часть 18: шестой этап работы над TODO-приложением\r\n→ Часть 19: методы жизненного цикла компонентов\r\n→ Часть 20: первое занятие по условному рендерингу\r\n→ Часть 21: второе занятие и практикум по условному рендерингу\r\n→ Часть 22: седьмой этап работы над TODO-приложением', ' загрузка данных из внешних источников\r\n→ Часть 23: первое занятие по работе с формами\r\n→ Часть 24: второе занятие по работе с формами\r\n→ Часть 25: практикум по работе с формами\r\n→ Часть 26: архитектура приложений', ' паттерн Container/Component\r\n→ Часть 27: курсовой проект']"
['\n      ru_vds\n    '],"['Учебный курс по React', ' часть 8: продолжение работы над TODO-приложением', ' знакомство со свойствами компонентов']",['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *Node.JS *'],"['Сегодняшние занятия учебного курса по React', ' перевод которого мы публикуем', ' посвящены продолжению работы над TODO-приложением и свойствам компонентов.\n\n\n\r\n→ Часть 1: обзор курса', ' причины популярности React', ' ReactDOM и JSX\r\n→ Часть 2: функциональные компоненты\r\n→ Часть 3: файлы компонентов', ' структура проектов\r\n→ Часть 4: родительские и дочерние компоненты\r\n→ Часть 5: начало работы над TODO-приложением', ' основы стилизации\r\n→ Часть 6: о некоторых особенностях курса', ' JSX и JavaScript\r\n→ Часть 7: встроенные стили\r\n→ Часть 8: продолжение работы над TODO-приложением', ' знакомство со свойствами компонентов\r\n→ Часть 9: свойства компонентов\r\n→ Часть 10: практикум по работе со свойствами компонентов и стилизации\r\n→ Часть 11: динамическое формирование разметки и метод массивов map\r\n→ Часть 12: практикум', ' третий этап работы над TODO-приложением\r\n→ Часть 13: компоненты', ' основанные на классах\r\n→ Часть 14: практикум по компонентам', ' основанным на классах', ' состояние компонентов\r\n→ Часть 15: практикумы по работе с состоянием компонентов\r\n→ Часть 16: четвёртый этап работы над TODO-приложением', ' обработка событий\r\n→ Часть 17: пятый этап работы над TODO-приложением', ' модификация состояния компонентов\r\n→ Часть 18: шестой этап работы над TODO-приложением\r\n→ Часть 19: методы жизненного цикла компонентов\r\n→ Часть 20: первое занятие по условному рендерингу\r\n→ Часть 21: второе занятие и практикум по условному рендерингу\r\n→ Часть 22: седьмой этап работы над TODO-приложением', ' загрузка данных из внешних источников\r\n→ Часть 23: первое занятие по работе с формами\r\n→ Часть 24: второе занятие по работе с формами\r\n→ Часть 25: практикум по работе с формами\r\n→ Часть 26: архитектура приложений', ' паттерн Container/Component\r\n→ Часть 27: курсовой проект']"
['\n      ru_vds\n    '],"['Учебный курс по React', ' часть 9: свойства компонентов']",['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['В сегодняшней части перевода учебного курса по React мы поговорим о свойствах компонентов. Это — одна из важнейших концепций', ' нашедших отражение в данной библиотеке.\n\n\n\r\n→ Часть 1: обзор курса', ' причины популярности React', ' ReactDOM и JSX\r\n→ Часть 2: функциональные компоненты\r\n→ Часть 3: файлы компонентов', ' структура проектов\r\n→ Часть 4: родительские и дочерние компоненты\r\n→ Часть 5: начало работы над TODO-приложением', ' основы стилизации\r\n→ Часть 6: о некоторых особенностях курса', ' JSX и JavaScript\r\n→ Часть 7: встроенные стили\r\n→ Часть 8: продолжение работы над TODO-приложением', ' знакомство со свойствами компонентов\r\n→ Часть 9: свойства компонентов\r\n→ Часть 10: практикум по работе со свойствами компонентов и стилизации\r\n→ Часть 11: динамическое формирование разметки и метод массивов map\r\n→ Часть 12: практикум', ' третий этап работы над TODO-приложением\r\n→ Часть 13: компоненты', ' основанные на классах\r\n→ Часть 14: практикум по компонентам', ' основанным на классах', ' состояние компонентов\r\n→ Часть 15: практикумы по работе с состоянием компонентов\r\n→ Часть 16: четвёртый этап работы над TODO-приложением', ' обработка событий\r\n→ Часть 17: пятый этап работы над TODO-приложением', ' модификация состояния компонентов\r\n→ Часть 18: шестой этап работы над TODO-приложением\r\n→ Часть 19: методы жизненного цикла компонентов\r\n→ Часть 20: первое занятие по условному рендерингу\r\n→ Часть 21: второе занятие и практикум по условному рендерингу\r\n→ Часть 22: седьмой этап работы над TODO-приложением', ' загрузка данных из внешних источников\r\n→ Часть 23: первое занятие по работе с формами\r\n→ Часть 24: второе занятие по работе с формами\r\n→ Часть 25: практикум по работе с формами\r\n→ Часть 26: архитектура приложений', ' паттерн Container/Component\r\n→ Часть 27: курсовой проект']"
['\n      ru_vds\n    '],"['Учебный курс по React', ' часть 19: методы жизненного цикла компонентов']",['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['В сегодняшней части перевода учебного курса по React вашему вниманию будет представлен обзор методов жизненного цикла компонентов.\n\n\n\r\n→ Часть 1: обзор курса', ' причины популярности React', ' ReactDOM и JSX\r\n→ Часть 2: функциональные компоненты\r\n→ Часть 3: файлы компонентов', ' структура проектов\r\n→ Часть 4: родительские и дочерние компоненты\r\n→ Часть 5: начало работы над TODO-приложением', ' основы стилизации\r\n→ Часть 6: о некоторых особенностях курса', ' JSX и JavaScript\r\n→ Часть 7: встроенные стили\r\n→ Часть 8: продолжение работы над TODO-приложением', ' знакомство со свойствами компонентов\r\n→ Часть 9: свойства компонентов\r\n→ Часть 10: практикум по работе со свойствами компонентов и стилизации\r\n→ Часть 11: динамическое формирование разметки и метод массивов map\r\n→ Часть 12: практикум', ' третий этап работы над TODO-приложением\r\n→ Часть 13: компоненты', ' основанные на классах\r\n→ Часть 14: практикум по компонентам', ' основанным на классах', ' состояние компонентов\r\n→ Часть 15: практикумы по работе с состоянием компонентов\r\n→ Часть 16: четвёртый этап работы над TODO-приложением', ' обработка событий\r\n→ Часть 17: пятый этап работы над TODO-приложением', ' модификация состояния компонентов\r\n→ Часть 18: шестой этап работы над TODO-приложением\r\n→ Часть 19: методы жизненного цикла компонентов\r\n→ Часть 20: первое занятие по условному рендерингу\r\n→ Часть 21: второе занятие и практикум по условному рендерингу\r\n→ Часть 22: седьмой этап работы над TODO-приложением', ' загрузка данных из внешних источников\r\n→ Часть 23: первое занятие по работе с формами\r\n→ Часть 24: второе занятие по работе с формами\r\n→ Часть 25: практикум по работе с формами\r\n→ Часть 26: архитектура приложений', ' паттерн Container/Component\r\n→ Часть 27: курсовой проект']"
['\n      ru_vds\n    '],"['Учебный курс по React', ' часть 20: первое занятие по условному рендерингу']",['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['Сегодня', ' в переводе следующей части учебного курса по React', ' мы поговорим об условном рендеринге.\n\n\n\r\n→ Часть 1: обзор курса', ' причины популярности React', ' ReactDOM и JSX\r\n→ Часть 2: функциональные компоненты\r\n→ Часть 3: файлы компонентов', ' структура проектов\r\n→ Часть 4: родительские и дочерние компоненты\r\n→ Часть 5: начало работы над TODO-приложением', ' основы стилизации\r\n→ Часть 6: о некоторых особенностях курса', ' JSX и JavaScript\r\n→ Часть 7: встроенные стили\r\n→ Часть 8: продолжение работы над TODO-приложением', ' знакомство со свойствами компонентов\r\n→ Часть 9: свойства компонентов\r\n→ Часть 10: практикум по работе со свойствами компонентов и стилизации\r\n→ Часть 11: динамическое формирование разметки и метод массивов map\r\n→ Часть 12: практикум', ' третий этап работы над TODO-приложением\r\n→ Часть 13: компоненты', ' основанные на классах\r\n→ Часть 14: практикум по компонентам', ' основанным на классах', ' состояние компонентов\r\n→ Часть 15: практикумы по работе с состоянием компонентов\r\n→ Часть 16: четвёртый этап работы над TODO-приложением', ' обработка событий\r\n→ Часть 17: пятый этап работы над TODO-приложением', ' модификация состояния компонентов\r\n→ Часть 18: шестой этап работы над TODO-приложением\r\n→ Часть 19: методы жизненного цикла компонентов\r\n→ Часть 20: первое занятие по условному рендерингу\r\n→ Часть 21: второе занятие и практикум по условному рендерингу\r\n→ Часть 22: седьмой этап работы над TODO-приложением', ' загрузка данных из внешних источников\r\n→ Часть 23: первое занятие по работе с формами\r\n→ Часть 24: второе занятие по работе с формами\r\n→ Часть 25: практикум по работе с формами\r\n→ Часть 26: архитектура приложений', ' паттерн Container/Component\r\n→ Часть 27: курсовой проект']"
['\n      yarostbaklajana\n    '],['Вступление в архитектуру React Fiber'],['JavaScript *ReactJS *'],"['Привет', ' Хабр! Предлагаю вашему вниманию перевод статьи ""React Fiber Architecture"" автора Andrew Clark.\nВступление\nReact Fiber — прогрессивная реализация ключевого алгоритма React. Это кульминационное достижение двухгодичных исследований команды разработчиков React.\nЦель Fiber в увеличении производительности при разработке таких задач как анимация', ' организация элементов на странице и движение элементов. Ее главная особенность это инкрементный рендеринг: способность разделять работу рендера на единицы и распределять их между множественными фреймами.\nДругие ключевые фичи включают возможность приостановки', ' отмены или переиспользования входящих обновлений DOM дерева', ' возможность приоритизации разных типов обновлений', ' а также — согласование примитивов.']"
['\n      ru_vds\n    '],"['Чем функциональные компоненты React отличаются от компонентов', ' основанных на классах?']",['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['Чем функциональные компоненты React отличаются от компонентов', ' основанных на классах? Уже довольно давно традиционный ответ на этот вопрос звучит так: «Применение классов позволяет пользоваться большим количеством возможностей компонентов', ' например — состоянием». Теперь', ' с появлением хуков', ' этот ответ больше не отражает истинное положение дел.\n\r\nВозможно', ' вы слышали о том', ' что один из этих видов компонентов отличается лучшей производительностью', ' чем другой. Но какой именно? Большинство бенчмарков', ' которыми это проверяют', ' имеют недостатки', ' поэтому я делал бы выводы', ' основываясь на их результатах', ' с большой осторожностью. Производительность', ' в основном', ' зависит от того', ' что происходит в коде', ' а не от того', ' выбраны ли для реализации неких возможностей функциональные компоненты или компоненты', ' основанные на классах. Наше исследование показало', ' что разница в производительности между разными видами компонентов незначительна. Однако надо отметить', ' что применяемые при работе с ними стратегии оптимизации немного различаются.\n\n\n\r\nЯ', ' в любом случае', ' не рекомендую переписывать существующие компоненты с применением новых технологий если на то нет веских причин', ' и если вы не против оказаться в числе тех', ' кто раньше всех начал этими технологиями пользоваться. Хуки — это всё ещё новая технология (такая же', ' какой была библиотека React в 2014 году)', ' и в руководства по React ещё не попали некоторые «передовые методики» их применения.']"
['\n      kashey\n    '],['React Code Splitting in\xa02019'],['JavaScript *ReactJS *'],"[""It's 2019! Everybody thinks they know code splitting. So\u200a-\u200alet's double check!\n\nWhat does code splitting stand for?\nIn short – code splitting is just about not loading a whole thing. Then you are reading this page you don't have to load a whole site. When you are selecting a single row from a database – you don't have to take all.\r\nObvious? Code splitting is also quite obvious"", ' just not about your data', ' but your code.']"
['\n      ru_vds\n    '],"['Учебный курс по React', ' часть 27: курсовой проект']",['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['В этой части перевода учебного курса по React вам предлагается создать генератор мемов.\n\n\n\r\n→ Часть 1: обзор курса', ' причины популярности React', ' ReactDOM и JSX\r\n→ Часть 2: функциональные компоненты\r\n→ Часть 3: файлы компонентов', ' структура проектов\r\n→ Часть 4: родительские и дочерние компоненты\r\n→ Часть 5: начало работы над TODO-приложением', ' основы стилизации\r\n→ Часть 6: о некоторых особенностях курса', ' JSX и JavaScript\r\n→ Часть 7: встроенные стили\r\n→ Часть 8: продолжение работы над TODO-приложением', ' знакомство со свойствами компонентов\r\n→ Часть 9: свойства компонентов\r\n→ Часть 10: практикум по работе со свойствами компонентов и стилизации\r\n→ Часть 11: динамическое формирование разметки и метод массивов map\r\n→ Часть 12: практикум', ' третий этап работы над TODO-приложением\r\n→ Часть 13: компоненты', ' основанные на классах\r\n→ Часть 14: практикум по компонентам', ' основанным на классах', ' состояние компонентов\r\n→ Часть 15: практикумы по работе с состоянием компонентов\r\n→ Часть 16: четвёртый этап работы над TODO-приложением', ' обработка событий\r\n→ Часть 17: пятый этап работы над TODO-приложением', ' модификация состояния компонентов\r\n→ Часть 18: шестой этап работы над TODO-приложением\r\n→ Часть 19: методы жизненного цикла компонентов\r\n→ Часть 20: первое занятие по условному рендерингу\r\n→ Часть 21: второе занятие и практикум по условному рендерингу\r\n→ Часть 22: седьмой этап работы над TODO-приложением', ' загрузка данных из внешних источников\r\n→ Часть 23: первое занятие по работе с формами\r\n→ Часть 24: второе занятие по работе с формами\r\n→ Часть 25: практикум по работе с формами\r\n→ Часть 26: архитектура приложений', ' паттерн Container/Component\r\n→ Часть 27: курсовой проект']"
['\n      ru_vds\n    '],['Оказывает ли React плохое влияние на Angular?'],['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *Angular *ReactJS *'],"['Автор материала', ' перевод которого мы сегодня публикуем', ' предлагает поразмышлять о будущем веб-разработки. По мере того', ' как тренды популярности технологий начинают смещаться в сторону библиотеки React', ' легко ощутить важность вопроса о том', ' насколько актуальным', ' через некоторое время', ' окажется фреймворк Angular. Ясно', ' что в итоге первое место достанется лишь одной технологии', ' и это заставляет веб-разработчиков', ' в особенности тех', ' которые только начинают свой путь', ' задаваться вопросом о том', ' что выбрать.\n\n']"
['\n      mirabbos_umarov\n    '],['ANPR using RoR & React Native'],['Ruby on Rails *ReactJS *'],"['Danny Krastev', ' Mirabbos Umarov', ' Ekaterina Menshenina', ' ITMO University', ' Info communication Systems', ' Computer Science. 2019 \n\n\n\nAbstract\r\nDue to the never-ending increase in volume of vehicles surrounding our daily lives', ' Automatic Number Plate Recognition (ANPR)', ' has become an evolving solution for managing and monitoring vehicles worldwide to enforce rules and prevent criminal activities', ' such as parking violation', ' red light violation', ' speeding', ' and vehicle theft. Although there is already a variety of public and private methods and libraries that have been developed and are used to achieve the automatic recognition of car license plate numbers around the world', ' there has not been much focus on making advancements toward a cross platform ANPR solution that supports all vehicle license plates worldwide. This paper introduces the Plate Vision project', ' a web and mobile application built on Ruby on Rails and React Native', ' which aims to serve as an alternative ANPR platform that supports detection of all license plates worldwide by utilizing various open source optical character recognition (OCR) libraries and making efficiency optimizations. \n\nKey words and phrases: ruby', ' rails', ' react native', ' license plate recognition', ' plate region extraction', ' optical character recognition (OCR)', ' ANPR.\n']"
['\n      kiteno\n    '],"['Запрос к API c React Hooks', ' HOC или Render Prop']",['Разработка веб-сайтов *JavaScript *ReactJS *'],"['\nРассмотрим реализацию запроса данных к API c помощью нового друга React Hooks и старых добрых товарищей Render Prop и HOC (Higher Order Component). Выясним', ' действительно ли новый друг лучше старых двух.']"
['\n      ru_vds\n    '],['14 советов по написанию чистого React-кода. Часть 1'],['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['Написание чистого кода — это навык', ' который становится обязательным на определённом этапе карьеры программиста. Особенно этот навык важен тогда', ' когда программист пытается найти свою первую работу. Это', ' по существу', ' то', ' что делает разработчика командным игроком', ' и то', ' что способно либо «завалить» собеседование', ' либо помочь его успешно пройти. Работодатели', ' принимая кадровые решения', ' смотрят на код', ' написанный их потенциальными сотрудниками. Код', ' который пишет программист', ' должен быть понятен не только машинам', ' но и людям.\n\n\n\r\nВ материале', ' первую часть перевода которого мы публикуем сегодня', ' представлены советы по написанию чистого кода React-приложений. Актуальность этих советов тем выше', ' чем больше размер проекта', ' в котором применяются изложенные в них принципы. В маленьких проектах', ' вероятно', ' можно обойтись и без применения этих принципов. Принимая решение о том', ' что нужно в каждой конкретной ситуации', ' стоит руководствоваться здравым смыслом.']"
['\n      BytePace\n    '],['React Native — применение и критика'],['ReactJS *'],"['Чаще всего при выборе этого языка ожидается', ' что разработка одного приложения под две платформы займёт в два раза меньше времени', ' чем разработка двух приложений. Но по итогу оказывается', ' что разработка занимает столько же', ' если не больше', ' из-за сложностей', ' скрытых под внешним блеском и маркетингом. Мы расскажем о некоторых подобных сложностях', ' с которыми нам пришлось столкнуться за последние несколько месяцев работы с React Native.']"
['\n      botyaslonim\n    '],['React + Mobx: в чём смысл?'],['JavaScript *ReactJS *'],"['Сегодня я хочу рассказать вам о том', ' как на нашем проекте состоялся переход на Mobx', ' какие преимущества это даёт. Также будет показан типовой проект и даны пояснения по основным вопросам. Но сначала вводные.\n\n']"
['\n      vital_pavlenko\n    '],['Делаем крутой sticky-эффект для слайдера на React'],['Разработка веб-сайтов *JavaScript *ReactJS *Компьютерная анимация *'],"['Есть много разных библиотек для реализации слайдера со всеми возможными эффектами. Для React одни из лучших это: ReactSlick и Swiper. Но когда для моего проекта потребовался горизонтальный sticky-эффект', ' то ничего подходящего не нашлось. \n\nВ этой статье мы попробуем поэтапно создать такой слайдер', ' возможно он вам тоже понадобится!']"
['\n      ru_vds\n    '],['Сравнение React Native и Flutter с точки зрения их применения в реальных проектах'],['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *Flutter *'],"['Чем React Native отличается от Flutter', ' за исключением того', ' что речь идёт о разных фреймворках', ' в основу которых положены разные технологии? На что ориентироваться тому', ' кто не знаком с этими инструментами для разработки кросс-платформенных приложений', ' но хочет выбрать один из них для своего очередного проекта?\n\n\n\r\nАвтор статьи', ' перевод которой мы публикуем', ' говорит', ' что в последнее время ему попадалось множество сравнений React Native и Flutter. Во всех этих сравнениях речь шла о таких вещах', ' которые', ' на самом деле', ' особого значения не имеют. Например — о языках', ' используемых для разработки проектов', ' или об инструментах командной строки. Здесь будет сделано сравнение React Native и Flutter с точки зрения реального положения дел', ' с точки зрения того', ' что имеет значение для настоящих проектов. Это сравнение призвано снабдить всех желающих сведениями', ' которые помогут им выбрать именно то', ' что им нужно.']"
['\n      ph_piter\n    '],['Новые фронтендовые библиотеки на периферии React'],['Блог компании Издательский дом «Питер» JavaScript *Клиентская оптимизация *ReactJS *'],"['Привет', ' Хабр!\n\r\nСегодня мы хотели предложить вам интересный текст о том', ' как развивается фронтенд в наше время', ' вернее', ' по мысли автора — после React. Вероятно', ' пост мог бы быть и объемнее', ' поэтому', ' если автор напишет продолжение — мы также постараемся не упустить и перевести. \n\r\nДобро пожаловать под кат!']"
['\n      PatriciaNeil\n    '],['React Native: Is it really the future of mobile app development?'],['Разработка мобильных приложений *Дизайн мобильных приложений *'],"['\n\r\nMobile apps have become one of the most important aspects of the human world. People spend most of their time on different mobile apps whether they are related to social media or something informational. So', ' this growing interest of people in mobile apps is anyhow deciding the future of mobile app development. \n\r\nIt is mandatory to mention here that the success of mobile app development is based on an accurate selection of the technology on which you build a particular mobile app. And this is one of the most challenging tasks to choose the right one technology for mobile app development. \n\r\nKeeping these kinds of challenges and confusions into consideration regarding the selection of technology or technical language', ' I am in this piece of article sharing some information on the future of mobile app development with React Native. \n\r\nWell', ' before taking a deep dive into the thorough information related to the future of mobile app development with React Native', ' we will have a look at the position of React native in mobile app development according to some stats. \n\r\nAccording to StackOverflow', ' “React Native is popular now. It is a sophisticated tool with a vast community of developers helping each other to create better mobile apps. Here you can see the React Native search trend on Google.”\n\n\n\r\n_']"
['\n      sc_pro_ion\n    '],['Война с тормозами. Оптимизация количества рендеров компонентов в React Native'],['Разработка мобильных приложений *ReactJS *'],"['Привет', ' Хабр! Меня зовут Камо Сперцян', ' я занимаюсь React Native разработкой в Profi.ru. Если вы решили воспользоваться технологией React Native для быстрой доставки продуктовых фич и сосредоточились на скорости разработки', ' то', ' скорее всего', ' столкнётесь с проблемами производительности. По крайней мере так случилось с нами. Через полгода активной разработки производительность нашего приложения упала ниже критического уровня — всё дико тормозило. Поэтому мы взялись за оптимизацию — убирали все «тормоза» во время запуска', ' переходов между экранами', ' отрисовки экранов', ' реакций на действия пользователя. В результате за три месяца довели пользовательский опыт до нативного уровня. В этой статье хочу рассказать о том', ' как мы оптимизировали приложение на React Native и решали проблему многократных ререндеров компонентов. \n\n\n\r\nЯ собрал рекомендации', ' которые помогут минимизировать количество бессмысленных перерисовок компонентов. Для наглядности в примерах сравниваю «\u200eплохую» и «\u200eхорошую»\u200e реализации. Статья будет полезна тем', ' кто уже столкнулся с низкой производительностью приложения', ' и тем', ' кто не хочет допустить этого в будущем.\n\r\nМы используем React Native в паре с Redux. Часть советов связана с этой библиотекой. Также в примере я использую библиотеку Redux-thunk — для имитации работы с сетью.']"
['\n      SSul\n    '],['Геотрекинг в React Native'],['Блог компании SimbirSoft JavaScript *Разработка под iOS *Разработка под Android *ReactJS *'],"['Мобильное приложение может выступать в роли «рабочего места» сотрудника', ' при этом бывает необходима передача географических координат и прочих данных. При кроссплатформенной разработке приложений на iOS и Android для этой задачи зачастую используют фреймворки', ' такие как Flutter или React Native. В этой статье мы рассказываем об особенностях работы с геолокацией в React Native на примере нашего кейса.\n\n']"
['\n      ru_vds\n    '],['Профилирование производительности React-приложений'],['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['Сегодня поговорим об измерении производительности рендеринга React-компонентов с использованием API React Profiler. Ещё мы будем оценивать взаимодействия с компонентом', ' применяя новый экспериментальный API Interaction Tracing. Кроме того', ' мы воспользуемся API User Timing для проведения собственных измерений.\n\r\nВ качестве площадки для экспериментов воспользуемся приложением React Movies Queue.\n\n\nПриложение React Movies Queue']"
['\n      CodeShaman\n    '],['Debouncing с помощью React Hooks: хук для функций'],['Блог компании ДомКлик Разработка веб-сайтов *JavaScript *ReactJS *'],"['Здравствуйте! Меня зовут Игорь', ' я главный инженер по разработке в команде SmartData. Занимаюсь fullstack-разработкой внутренней аналитической BI-системы. В нашей компании React принят в качестве основного стандарта для построения пользовательских интерфейсов. Как и большая часть сообщества React', ' мы активно используем хуки в нашей повседневной работе.\nПостоянное обучение — неотъемлемая часть работы любого хорошего разработчика. Поэтому сегодня мне хотелось бы внести свой скромный вклад в этот процесс и представить небольшое руководство для тех', ' кто начинает активно изучать React и работу с хуками. И попутно дать вам небольшой и полезный инструмент для работы с новым стандартом React.\nВ переводе статьи Debouncing с помощью React Hooks мы узнали', ' как можно без сторонних библиотек', ' используя только возможности React', ' создать хук в несколько строк кода для работы с отложенными изменениями значений переменных. Теперь я предлагаю рассмотреть еще один полезный хук', ' который поможет нам отложить вызов функции. Если функция будет вызываться много раз подряд', ' то фактический вызов произойдет только по прошествии установленного нами интервала задержки. То есть', ' только для последнего вызова из серии. Решение также очень компактное и легко реализуемое в React. Если вам стало интересно', ' прошу под кат.\n']"
['\n      host_m\n    '],['Повышаем квалификацию с лучшими инструментами для web-разработки на React'],['Блог компании VDSina.ru Разработка веб-сайтов *JavaScript *Программирование *ReactJS *'],"['Вы можете стать более ценным специалистом', ' изучив лучшие инструменты для разработки веб-приложений на React.\n\n\n\r\nБольшинство резюме работодатель отклоняет', ' просто пробежав их по диагонали. Это немного обескураживает', ' правда? Так что очень важно', ' чтобы он сразу увидел нужные ему знания и навыки у вас. Сейчас подходящее время прокачаться', ' особенно если вам нечем похвастаться в своём резюме. Не нужно посещать университет', ' чтобы получить новые навыки: нужно просто идти в нужном направлении и не отклоняться от него.']"
['\n      Seleditor\n    '],['10 инструментов для повышения продуктивности React-девелоперов в 2020 году'],['Блог компании Selectel Программирование *ReactJS *Облачные сервисы Лайфхаки для гиков '],"['\r\nДавайте обсудим несколько отличных инструментов', ' которые повышают продуктивность разработчиков React и улучшают качество работы.\n\r\nОбычно', ' когда я начинаю новый проект', ' то использую собственный шаблон для тех инструментов', ' которые добавил в этот список. Также я работаю и с другими инструментами', ' вроде Material UI. Я их изучил', ' создал с их помощью несколько приложений и реализовал пару небольших проектов', ' после чего решил поделиться результатами.']"
['\n      Carduelis\n    '],['React 17: Ничего нового?'],['JavaScript *ReactJS *'],"['Семнадцатый релиз React необычен отсутствием новых фич и/или функционала. Этот релиз сфокусирован на будущее', ' чтобы миграция на новые версии библиотеки осуществлялась проще: приложения теперь можно обновлять по частям.Многообещающий Concurrent Mode не будет представлен в 17 версии', ' как и другие нововведения', ' над которыми активно работает команда. Грядущий релиз является частью стратегии\xa0постепенных обновлений.']"
['\n      skryukov\n    '],['Как добавить React-компонент в Active Admin'],['Блог компании ДомКлик Ruby *Ruby on Rails *'],"['В статье Неофициальный гайд по Active Admin мы рассмотрели библиотеки', ' из которых состоит Active Admin', ' и некоторые подходы к созданию собственных компонентов. Но иногда форма или информационный виджет могут быть настолько сложными или динамическими', ' что начинаешь задумываться', ' не пора ли обратиться к современному фронтенду', ' а не накручивать такой родной', ' но такой неподдерживаемый jQuery-код.Мы в ДомКлик в таких случаях используем Vue.js и React', ' и под катом я расскажу', ' как именно можно внедрить React-компонент в Active Admin.']"
['\n      Hasselhoff\n    '],['20 основных частей любого крупномасштабного React-приложения'],['Блог компании SkillFactory Разработка веб-сайтов *JavaScript *Программирование *ReactJS *'],"['За эти годы мне посчастливилось работать над некоторыми крупномасштабными проектами', ' написанными на React. Сегодня я соберу важные вещи', ' которые нужно учитывать при создании нового проекта или расширении функциональности любого крупномасштабного приложения. Мы начнём с самых основ', ' а затем пойдём глубже. Так что пристегнитесь!']"
['\n      Doublesharp\n    '],['Удвойте скорость написания кода на React с помощью этих простых трюков'],['Блог компании SkillFactory JavaScript *Программирование *Совершенный код *ReactJS *'],"['Если вы работаете с React или React Native и чувствуете', ' что у вас медленная скорость написания кода', ' вы тратите много времени на поиск ошибок', ' а не на добавление нового функционала', ' работаете с большими исходными файлами и вам сложно находить нужные части кода', ' а также многократно реализуете одну и ту же логику', ' то эта статья для вас. Вы удвоите скорость написания кода', ' если отрефакторите код в повторно используемые строительные блоки. Мы рассмотрим React компонент', ' который можно хорошо разобрать. И мы будем шаг за шагом реорганизовывать его до хорошего уровня. Вы увидите большое количество идей', ' которые повысят вашу скорость написания кода.']"
['\n      primus2010\n    '],['YAHW на React'],['Программирование *Java *ReactJS *'],"['Да', ' это еще один хелло-ворлд на React', ' которых уже много на сети. Зачем  еще один?      Здесь я попытался рассказать о создании простого приложения так', ' как  хотел бы прочитать об этом в то время когда делал первые шаги на React', '  т.е стовсем недавно. Обратить внимание на то', ' что мне нужно было узнать  сначала. Надеюсь начинающим пригодится', ' а продолжающие дадут свои замечания.']"
['\n      aio350\n    '],['React Intl: интернационализация React-приложений'],['Блог компании Маклауд Разработка веб-сайтов *JavaScript *Программирование *'],"['\nБиблиотека React Intl предоставляет механизм для перевода текста на другие языки.\nВ данном ""туториале"" мы используем названную библиотеку для реализации интернационализации в проекте', ' написанном на React. Мы создадим простое приложение', ' позволяющее пользователю выбирать язык приложения.\nМы также реализуем возможность сохранения выбранного языка в локальном хранилище браузера для обеспечения его доступности после перезагрузки страницы и последующих визитах пользователя.']"
['\n      Avelot\n    '],['Использование mapbox-gl в React и Next.js'],['JavaScript *Maps API *ReactJS *'],"['В данной статье я хочу описать известные мне способы встраивания mapbox-gl в React приложение', ' на примере создания простого веб приложения содержащего карту на Next.js с использованием Typescript', ' код компонента карты можно также использовать в любом любом приложении на React']"
['\n      Avelot\n    '],['Хранение инстанса карты mapbox-gl вне React'],['JavaScript *Maps API *ReactJS *TypeScript *'],"['В этом посте будет рассмотрен способ использования mapbox-gl в React приложении', ' с хранением инстанса карты во вспомогательном объекте обертке. Это позволяет обращаться к карте из любой части приложения', ' без необходимости передавать ссылку на карту средствами React.']"
['\n      SeokkySss\n    '],"['React.js — 5 вещей', ' которые могут вас удивить']",['JavaScript *ReactJS *'],"['React.js - довольно простая в понимании и относительно легкая в освоении библиотека', ' особенно учитывая широкий выбор материалов', ' призванных помочь новичкам. Но каждый инструмент имеет свою долю уловок и проблем', ' которые обычно эти материалы не затрагивают. Вы сталкиваетесь с ними', ' когда кто-то проверяет ваш код или', ' того хуже', ' когда вы предстаете лицом к лицу с проблемой и отчаянно пытаетесь найти решение. Надеюсь', ' в этой статье я смогу раскрыть некоторые из этих моментов в React и', ' может', ' даже удивить вас!']"
['\n      xamd\n    '],['Diff-алгоритм React'],['JavaScript *Алгоритмы *ReactJS *'],"['React — это JavaScript библиотека для создания пользовательских интерфейсов от Facebook. Она была разработана «с нуля»', ' с упором на производительность. В этой статье я расскажу вам о diff-алгоритме и механизме рендеринга', ' который использует React', ' что позволит вам оптимизировать ваши приложения.\n\nDiff Алгоритм\r\nПеред тем как мы углубимся в детали реализации', ' довольно важно', ' чтобы вы имели представление о том', ' как работает React.\n\nvar MyComponent = React.createClass({\n  render: function() {\n    if (this.props.first) {\n      return <div className=""first""><span>A Span</span></div>;\n    } else {\n      return <div className=""second""><p>A Paragraph</p></div>;\n    }\n  }\n});\n\r\nВ любой момент времени вы можете описать', ' как будет выглядеть ваш UI. Важно понимать', ' что результат рендеринга не является фактическим DOM деревом. Это всего лишь легковесные JS объекты', ' которые мы называем «виртуальный DOM».\n']"
['\n      true_engineering\n    '],['Инъекция React JS в приложение на Angular JS или борьба за производительность'],['Блог компании True Engineering JavaScript *Angular *'],"['Дорогие Хабролюбители', ' всем привет! Не откроем Америку если скажем', ' что существуют сотни плагинов и библиотек', ' которые облегчают специализированные задачи', ' связанные с построением современных web интерфейсов. Angular один из них', ' про его производительность писалось много и в большинстве случаев даются рекомендации чего не нужно делать', ' чтобы все было хорошо. \n\r\nОсновной аргумент сторонников — медленно работают неправильные приложения', ' а вот правильные не должны содержать более 2000-3000 элементов. Если содержит больше значит что-то не так. См. например http://iantonov.me/page/angularjs-osnovy. \n\r\nАргумент в общем вполне здравый', ' но всегда есть ситуации', ' когда нужно написать «неправильное» web приложение потому', ' что такие требования. В этой статье мы решили рассказать как раз про такую задачу', ' и как мы ее решили. На наш взгляд статья будет полезна в большей степени профессиональным веб разработчикам. Итак', ' наша задача была сделать календарь для системы бронирования для одного спортивного клуба. Календарь отображает семь 12–часовых блоков', ' каждый день из которых разделен на 15 минутные интервалы. В блоке может быть от 2-х до 10 DOM элементов. Вроде ничего не предвещало беды', ' верхняя граница ~3000. \n']"
['\n      follower\n    '],['Краткое руководство по React JS'],['JavaScript *ReactJS *'],"['Статья даст вам краткий обзор того', ' как строятся интерфейсы с помощью React JS.\r\nВы можете параллельно писать код с помощью starter kit', ' или просто продолжать читать.']"
['\n      asdf404\n    '],['Создание изоморфного приложения на React и Flummox'],['JavaScript *ReactJS *'],"['Сегодня я хочу показать', ' как используя React', ' Flummox и Express', ' создать полноценное изоморфное приложение.\n\r\nИдея изоморфности давно витала в воздухе', ' но никто не знал этого слова', ' поэтому ничего особо не менялось', ' пока не пришел airbnb.\n\r\nЗа полгода до этого появился React', ' позже появился Flux и множество его реализаций', ' одна не хуже другой. Но все эти реализации ориентировались только на работу на клиентской стороне', ' они работали через синглтоны и', ' зачастую', ' их нельзя было нормально использовать на сервере. Я успел попробовать несколько', ' но ни одна мне не понравилась. Пока два месяца назад я не наткнулся на Flummox. Как заявляет разработчик', ' Flummox создан как раз для изоморфных приложений', ' он не использует синглтоны', ' присущие другим реализациям', ' и максимально прост в использовании.\n\r\nОжидается', ' что вы имеете опыт работы с React и слышали про Flux. Итак', ' поехали…\r\nЗабрать готовый код можно тут.\n']"
['\n      Wix_engineering\n    '],['Повторное использование строк для высокоэффективной работы со списками React Native ListView'],['Блог компании Wix.com Разработка мобильных приложений *Разработка под Android *ReactJS *'],"['Повторное использование ранее размещенных в памяти строк', ' которые при прокрутке выходят за пределы экрана', ' ― широко распространенная техника оптимизации использования компонента ListView', ' изначально реализованная в iOS и Android. Реализация ListView как компонента React Native по умолчанию не содержит непосредственно эту оптимизацию', ' но имеет ряд других приятных преимуществ. Тем не менее', ' это отличный образец', ' достойный изучения. Рассмотрение этой реализации в рамках изучения React также будет интересным мысленным экспериментом.\n\nСписки являются важной частью разработки мобильных приложений\r\nСписки – это сердце и душа мобильных приложений. Множество приложений отображают списки: это и список публикаций в вашей ленте приложения Facebook', ' и списки бесед в Messenger', ' и список сообщений электронной почты Gmail', ' и список фотографий в Instagram', ' и список твитов в Twitter и т.д.\n\r\nКогда ваши списки становятся более сложными', ' со значительным количеством источников данных', ' тысячами строк', ' медиа-файлами', ' требующими большого объема памяти', ' их разработка также становится сложнее.\n\r\nС одной стороны', ' вы хотите сохранить скорость работы вашего приложения', ' т.к. прокручивание со скоростью 60 FPS стало золотым стандартом нативного опыта взаимодействия (UX). С другой стороны', ' вы хотите сохранить низкое потребление памяти', ' потому что мобильные устройства не располагают избыточными ресурсами. Не всегда просто выполнить оба эти условия.\n\n\n\nПоиск идеальной реализации элемента ListView\r\nОсновополагающим правилом разработки программного обеспечение является то', ' что нельзя предусмотреть оптимизацию для любого сценария. ']"
['\n      heathen\n    '],['Клон Trello на Phoenix и React. Части 1-3'],['Разработка веб-сайтов *Программирование *Erlang/OTP *Функциональное программирование *Elixir/Phoenix *'],"['\nTrello — одно из самых моих любимых приложений. Я пользуюсь им с момента появления', ' и мне очень нравится то', ' как оно работает', ' его простота и гибкость. Каждый раз', ' начиная изучать новую технологию', ' я предпочитаю создать полноценное приложение', ' в котором смогу применить на практике всё', ' что изучил', ' для решения реальных проблем', ' и проверить эти решения. Так что начав изучать Elixir и его Phoenix Framework я понял: я должен на практике использовать весь этот потрясающий материал', ' с которым познакомился', ' и поделиться им в виде руководства о том', ' как реализовать простое', ' но функциональное посвящение Trello.']"
['\n      heathen\n    '],['Клон Trello на Phoenix и React. Части 8-9'],['Разработка веб-сайтов *Программирование *Erlang/OTP *Ruby on Rails *Функциональное программирование *'],"['\nОглавление (текущий материал выделен)\nВведение и выбор стека технологий\nНачальная настройка проекта Phoenix Framework\nМодель User и JWT-аутентификация\nFront-end для регистрации на React и Redux\nНачальное заполнение базы данных и контроллер для входа в приложение\nАутентификация на front-end на React и Redux\nНастраиваем сокеты и каналы\nВыводим список и создаём новые доски\nДобавляем новых пользователей досок\nОтслеживаем подключённых пользователей досок\nДобавляем списки и карточки\nВыкладываем проект на Heroku\n\n\nВыводим список и создаём новые доски\nОригинал\nВ настоящий момент мы реализовали все важные аспекты регистрации пользователя и управления аутентификацией', ' равно как и подключение к сокету и вход на каналы', ' так что готовы перейти на следующий уровень', ' и дать пользователю возможность выводить список и создавать собственные доски.']"
['\n      yury-dymov\n    '],['React.js: собираем с  ... '],['Разработка веб-сайтов *JavaScript *Node.JS *API *ReactJS *'],"['\nПожалуйста', ' авторизуйтесь\nЭто третья и заключительная часть статьи про разработку изоморфного React.js приложения с нуля. Части первая и вторая.\nВ этой части мы:\n\nдобавим redux-dev-tools;\nдобавим запросы к API;\nреализуем авторизацию;\nреализуем выполнение запросов к API в процессе Server-Side Rendering.\n']"
['\n      ru_vds\n    '],['React или Vue? Выбираем библиотеку для фронтенд-разработки'],['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['На чём делать фронтенд? Самый верный способ найти ответ – попробовать лучшие библиотеки самостоятельно. В идеале', ' хорошо бы начать с самого простого и понять', ' как таинственные для непосвящённого конструкции превращаются в готовые к выводу страницы. Дальше же', ' вооружившись пониманием основ', ' можно осмысленно читать документацию и усложнять собственные эксперименты до тех пор', ' пока ответ не покажется очевидным.\n\n\n\r\nСегодня мы поговорим о React.js и Vue.js. Это – одни из самых популярных JavaScript-библиотек в мире. Взгляните на этот список', ' посмотрите их репозитории на GitHub. И та', ' и другая обладают впечатляющими возможностями и служат для создания пользовательских интерфейсов. Работать с ними довольно просто', ' главное – сразу понять', ' что к чему', ' сделать правильный первый шаг. Собственно говоря', ' этому вот первому шагу в разработке с использованием React и Vue и посвящён данный материал.\n']"
['\n      dfuse\n    '],['Что взять за основу React приложения'],['Разработка веб-сайтов *JavaScript *Клиентская оптимизация *Node.JS *ReactJS *'],"['Каждый раз начиная писать React приложение', ' вы так или иначе выберите какой-то вариант:\n\nкопи-паст вашего предыдущего проекта\nкакой-то бойлерплейт или даже генератор (типа Yeoman)\nготовый фреймворк не требующий конфигурации\nпишете сами все с нуля \n\nКаждый из способов имеет свои сильные и слабые стороны', ' как на длинной', ' так и на короткой дистанции.\nНекоторые решения скрывают сложность в начале', ' позволяя сделать быстрый старт. Это что-то вроде решения под ключ', ' но в результате такие решения могут оказаться недостаточно гибкими и сложными в подстройке. С другой стороны', ' в начале все может казаться слегка монструозным и неповоротливым', ' и чтоб начать нужно немного повозиться', ' но зато потом преимущества станут очевидными. Всегда есть возможность сделать все с нуля', ' ровно так', ' как хочется', ' но в таком случае Вы будете отвечать за бесчисленные аспекты и Вам потребуются очень глубокие знания во всех участвующих технологиях.']"
['\n      merrick_krg\n    '],['Простой туториал React Router v4'],['ReactJS *'],['\n\nАвтор @pshrmn ⬝ Оригинальная статья ⬝ Время чтения: 10 минут\n\nReact Router v4 — это переработанный вариант популярного React дополнения. Зависимые от платформы конфигурации роутов из прошлой версии были удалены и теперь всё является простыми компонентами. \n']
['\n      Alexey_Solomatin\n    '],['Практическое руководство по использованию CSS Modules в React приложениях'],['CSS *JavaScript *ReactJS *'],"['Привет Хабр! Предлагаю вашему вниманию свободный перевод статьи «Practical Guide to React and CSS Modules» от Tatu Tamminen.\n\r\nВ прошлом веб-разработчики тратили много времени и сил на создание повторно используемых компонентов. Оcобую проблему представлял собой CSS и природа его каскадов. Например', ' если разработчик создаёт компонент для отображения древовидной структуры', ' то как он может гарантировать', ' что CSS класс (например', ' .leaf)', ' используемый в этом компоненте', ' не приведёт к побочным эффектам в других частях приложения? Были созданы различные методологии и соглашения', ' чтобы справиться с проблемами селекторов. БЭМ и SMACSS — широко используемые методологии', ' которые хорошо выполняют свои задачи', ' но в то же время далеко не идеальны. В этой статье рассказывается о недостатках таких методологий', ' основанных на соглашении об именах', ' о том', ' что представляют собой CSS Modules', ' и о том', ' как эти модули можно использовать в React приложении.']"
['\n      Karaoke\n    '],['8 ключевых решений в разработке на React'],['Блог компании Edison Разработка веб-сайтов *CSS *JavaScript *ReactJS *'],"['\n\nТяжело выбрать', ' имея так много опций.\n\r\nReact стал open-source проектом в 2013. С тех пор он очень развился. Поискав в интернете', ' вы можете найти старые посты с разными подходами. Здесь я опишу восемь ключевых решений которые ваша команда должна поддерживать', ' когда пишут на React.\n']"
['\n      VanishMax\n    '],['Частые трудности работы с React.js'],['JavaScript *ReactJS *'],"['Привет', ' Хабр! Представляю вашему вниманию перевод статьи Samer Buna «React.js Frequently Faced Problems».\nНе паникуйте. Вы правы: существуют мириады веб-технологий', ' архитектур и фреймворков', ' и множество разрабатывается прямо сейчас. Помните: каждый', ' кто стал профессиональным веб-разработчиком начинал как и вы. Они изучали языки', ' библиотеки по одному', ' раз за разом', ' пока не прокачали свои навыки и механизмы работы\n\r\nВеб-разработка сейчас как первый поход в супермаркет. На прилавках сотни товаров', ' которыми хочется овладеть. Растерявшись', ' очень легко испугаться огромному выбору. Ошибкой будет пытаться изучить все сразу', ' будто бы вам нужно везде быть компетентным.\n\r\nНа самом деле', ' если вы сконцентрируетесь на одной вещи', ' например на создании сайта на простейшем HTML/CSS/JavaScript без библиотек', ' а потом добавите фреймворк по типу React’а', ' ваш путь от новичка до профессионала пройдет гораздо удобнее и приятнее.\nИ правда', ' новичкам бывает сложно разобраться с простыми вещами', ' на которые опытный разработчик даже не обращает внимание. Эта статья призвана разобрать популярные ошибки и затруднения', ' с которыми сталкиваются большинство изучающих React.\n']"
['\n      apapacy\n    '],['Универсальные приложения React + Express'],['Веб-дизайн *Разработка веб-сайтов *JavaScript *Node.JS *ReactJS *'],"['В прошлой статье рассматривалась библиотека Next.js', ' которая позволяет разрабатывать универсальные приложения «из коробки». В обсуждении статьи были озвучены существенные недостатки этой библиотеки. Судя по тому', ' что https://github.com/zeit/next.js/issues/88 бурно обсуждается с октября 2016 года', ' решения проблемы в ближайшее время не будет.\n\r\nПоэтому', ' предлагаю ознакомится с современным состоянием «экосистемы» React.js', ' т.к. на сегодняшний день все', ' что делает Next.js', ' и даже больше', ' можно сделать при помощи сравнительно простых приемов. Есть', ' конечно', ' и готовые заготовки проектов. Например', ' мне очень нравится проект', ' который', ' к сожалению', ' базируется на неактульной версии роутера. И очень актуальный', ' хотя не такой «заслуженный» проект.\n\r\nИспользовать готовые проекты с массой плохо документированных возможностей немного страшно', ' т.к. не знаешь', ' где споткнешься', ' и самое главное — как развивать проект. Поэтому для тех', ' кто хочет разобраться в современном состоянии вопроса (и для себя)', ' я сделал заготовку проекта с разъяснениями. В ней не будет какого-то моего личного эксклюзивного кода. Просто компиляция из примеров документации и большого количества статей.']"
['\n      inomdzhon92\n    '],['React cheatsheet или парочка лайфхаков'],['Блог компании Space307 Программирование *ReactJS *'],"['\n\r\nПоделюсь несколькими практиками', ' которые использую при создании React-компонентов. Заинтересованных прошу под кат.']"
['\n      Luanre\n    '],['React HoC в TypeScript. Типизация без боли'],['Блог компании Сбер Разработка веб-сайтов *Программирование *ReactJS *TypeScript *'],"['\n\r\nМного раз', ' когда шла речь о переводе React-проектов на TypeScript', ' я часто слышал', ' что самую сильную боль вызывает создание HoC’ов (Higher-Order Components — компоненты-обертки). Сегодня я покажу приём', ' как делать это безболезненно и довольно легко. Данный приём будет полезен не только для проектов TS', ' но также и для проектов ES6+.']"
['\n      SeOd\n    '],['Kivy. Xamarin. React Native. Три фреймворка — один эксперимент (часть 3)'],['Блог компании Developer Soft JavaScript *Программирование *Разработка мобильных приложений *ReactJS *'],"['\r\nЗадача сравнения фреймворков очень неблагодарное занятие', ' предпочтения у разработчиков разные', ' технологии меняются очень быстро. Слишком быстро. Эта статья', ' устареет еще до того момента как я нажму кнопочку “опубликовать“. ']"
['\n      Plarium\n    '],"['Незнание основ React', ' которое', ' возможно', ' вас губит']",['Блог компании Plarium JavaScript *Разработка мобильных приложений *HTML *ReactJS *'],"['Хотите получить наглядное представление о том', ' что происходит с компонентами', ' когда вы работаете с React? Читайте под катом перевод статьи Ohans Emmanuel', ' опубликованной на сайте freeCodeCamp.\n\n']"
['\n      ru_vds\n    '],['Компоненты высшего порядка в React'],['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['Недавно мы публиковали материал о функциях высшего порядка в JavaScript', ' направленный на тех', ' кто изучает JavaScript. Статья', ' перевод которой мы публикуем сегодня', ' предназначена для начинающих React-разработчиков. Она посвящена компонентам высшего порядка (Higher-Order Components', ' HOC). \n\n']"
['\n      eduardtkachuk\n    '],['Краткая выжимка из книги React и Redux функциональная веб-разработка: Глава 1. Добро пожаловать в React'],['JavaScript *ReactJS *'],"['\nПредисловие\nДля начала представлюсь', ' меня зовут Эдик', ' я Full Stack Web Developer. Основные направления Laravel & React.js', ' Vue.js. Изучаю GoLang и Swift.\nХотя уже есть много других источников получения информации', ' книги остаются одними из самых распостраненных', ' но в них очень много воды и я решил не придумывать очередной костыль', ' а просто делать заметки.\nЧтобы структурировать данные информация будет представлена в виде серии статей разбитых по главам.\nЯ пишу эти нотатки для себя и решил поделится ими со всем миром. Так что не будьте суровы. И так', ' поехали!\nГлава 1. Добро пожаловать в React\nReact — популярная библиотека', ' используемая для создания пользовательских интерфейсов. Она была создана в Facebook чтобы решить ряд проблем', ' связанных с крупномаштабными сайтами.']"
['\n      gnefedev\n    '],['Ещё один dsl на Kotlin или как я печатал PDF из react'],['JavaScript *Java *ReactJS *Kotlin *'],"['\n\r\nНельзя просто взять и распечатать страницу написанную на React: есть разделители страниц', ' поля для ввода. Кроме того', ' хочется один раз написать рендеринг', ' чтобы он генерил как ReactDom', ' так и обычный HTML', ' который можно сконвертить в PDF.\n\r\nСамое сложное', ' что у React свой dsl', ' а у html свой. Как решить эту проблему? Написать ещё один!\n\r\nЧуть не забыл', ' всё это будет написано на Kotlin', ' так что', ' на самом деле', ' это статья о Kotlin dsl.']"
['\n      kalaev-viktor\n    '],['Валидация форм React. Часть 2'],['JavaScript *ReactJS *'],"['В первой части (Валидация форм React. Часть 1) я описал', ' как можно работать с react-validate-form', ' теперь буду улучшать код. Вынесем в отдельный блок поле инпут', ' подсказки и ошибки. И подключим redux.\n\nimport React', "" {Component} from 'react';\nimport {connect as vBooConnect} from 'react-validation-boo';\nimport {connect as reduxConnect} from 'react-redux';\nimport {InputBlock"", ' InputCheckboxBlock', ' InputRadioGroupBlock', ' TextareaBlock', "" SelectBlock} from '../form/default';\n\nclass MyForm extends Component {\n    constructor() {\n        super();\n\n        this.genderOptions = [\n            {value: ''"", "" label: 'Ваш пол?'}"", '\n            {value: 1', "" label: 'Мужской'}"", '\n            {value: 2', "" label: 'Женский'}\n        ];\n\n        this.familyRadioList = [\n            {value: 1"", "" label: 'холост'}"", '\n            {value: 2', "" label: 'сожительство'}"", '\n            {value: 3', "" label: 'брак'}\n        ];\n    }\n    componentWillMount() {\n        this.props.vBoo.subscribe('change:input'"", "" this.props.onChangeVBooInput);\n        this.props.vBoo.subscribe('valid:form'"", ' this.props.onChangeVBooValid);\n    }\n    render() {\n        let s = this.props.myStore.inputs;\n        return <Form connect={this.props.vBoo.connect}>\n            <InputBlock name=""name"" value={s.name} />\n            <InputBlock name=""email"" value={s.email} />\n            <SelectBlock name=""gender"" options={this.genderOptions} value={s.gender} />\n            <InputRadioGroupBlock name=""familyStatus"" items={this.familyRadioList} value={s.familyStatus} />\n            <TextareaBlock name=""comment"" value={s.comment} />\n            <InputCheckboxBlock name=""addition"" value=""yes"" checked={s.addition===\'yes\'} />\n\n            <button onClick={this.sendForm}>\n                {this.props.vBoo.isValid() ? \'Можно отправлять\': \'Будьте внимательны!!!\'}\n            </button>\n        </Form>\n    }\n}\n\nexport default reduxConnect(\n    store => ({\n        myStore: { // для наглядности\n            isValid: false', ""\n            inputs: {\n                email: 'test@mail.ru'"", '\n                gender: 0', '\n                familyStatus: 1\n            }\n        }\n    })', '\n    dispatch => ({\n        onChangeVBooInput: (input) => {...}', '\n\tonChangeVBooValid: (isValid) => {...}\n    })\n)(vBooConnect({\n    rules: () => ([...])', '\n    labels: () => ({...})', '\n})(MyForm));\n']"
['\n      xnim\n    '],['Разбор конкурса-квиза по React со стенда HeadHunter на HolyJs 2018'],['Блог компании HeadHunter JavaScript *ReactJS *'],"['Привет. 24–25 сентября в Москве прошла конференция фронтенд-разработчиков HolyJs https://holyjs-moscow.ru/. Мы на конференцию пришли со своим стендом', ' на котором проводили quiz. Был основной квиз — 4 отборочных тура и 1 финальный', ' на котором были разыграны Apple Watch и конструкторы лего. И отдельно мы провели квиз на знание react. \nПод катом — разбор задач квиза по react. Правильные варианты будут спрятаны под спойлером', ' поэтому вы можете не только почитать разбор', ' но и проверить себя :)\n\nПоехали!']"
['\n      kashey\n    '],['React-Hot-Loader v4.6'],['JavaScript *ReactJS *'],"['Примерно месяц назад вышли React Hooks', ' и сразу же выяснилось что React-Hot-Loader портит все малину и не только сам с ними не очень совместим', ' так еще и весь остальной код ломает. В общем это был жаркий месяц...\n\n\nЧто внутри?\n\nНовый API для HMR\nПолная поддержка React 16.6 – React.lazy', ' React.memo и forwardRef\nКонечно же hooks \nReact--dom (что бы это не значило)\nWebpack plugin\nAutomagic ErrorBoundaries\nPure Render\n“Principles”\n']"
['\n      ru_vds\n    '],"['Учебный курс по React', ' часть 5: начало работы над TODO-приложением', ' основы стилизации']",['Блог компании RUVDS.com Разработка веб-сайтов *ReactJS *'],"['Сегодня', ' в следующей части перевода учебного курса по React', ' мы начнём работу над первым учебным проектом и поговорим об основах стилизации.\n\n\n\r\n→ Часть 1: обзор курса', ' причины популярности React', ' ReactDOM и JSX\r\n→ Часть 2: функциональные компоненты\r\n→ Часть 3: файлы компонентов', ' структура проектов\r\n→ Часть 4: родительские и дочерние компоненты\r\n→ Часть 5: начало работы над TODO-приложением', ' основы стилизации\r\n→ Часть 6: о некоторых особенностях курса', ' JSX и JavaScript\r\n→ Часть 7: встроенные стили\r\n→ Часть 8: продолжение работы над TODO-приложением', ' знакомство со свойствами компонентов\r\n→ Часть 9: свойства компонентов\r\n→ Часть 10: практикум по работе со свойствами компонентов и стилизации\r\n→ Часть 11: динамическое формирование разметки и метод массивов map\r\n→ Часть 12: практикум', ' третий этап работы над TODO-приложением\r\n→ Часть 13: компоненты', ' основанные на классах\r\n→ Часть 14: практикум по компонентам', ' основанным на классах', ' состояние компонентов\r\n→ Часть 15: практикумы по работе с состоянием компонентов\r\n→ Часть 16: четвёртый этап работы над TODO-приложением', ' обработка событий\r\n→ Часть 17: пятый этап работы над TODO-приложением', ' модификация состояния компонентов\r\n→ Часть 18: шестой этап работы над TODO-приложением\r\n→ Часть 19: методы жизненного цикла компонентов\r\n→ Часть 20: первое занятие по условному рендерингу\r\n→ Часть 21: второе занятие и практикум по условному рендерингу\r\n→ Часть 22: седьмой этап работы над TODO-приложением', ' загрузка данных из внешних источников\r\n→ Часть 23: первое занятие по работе с формами\r\n→ Часть 24: второе занятие по работе с формами\r\n→ Часть 25: практикум по работе с формами\r\n→ Часть 26: архитектура приложений', ' паттерн Container/Component\r\n→ Часть 27: курсовой проект']"
['\n      ru_vds\n    '],"['Учебный курс по React', ' часть 14: практикум по компонентам', ' основанным на классах', ' состояние компонентов']",['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['В этой части перевода учебного курса по React мы предлагаем вам выполнить практическое задание по работе с компонентами', ' основанными на классах. После этого мы приступим к освоению такого важного понятия React', ' как состояние компонентов.\n\n\n\r\n→ Часть 1: обзор курса', ' причины популярности React', ' ReactDOM и JSX\r\n→ Часть 2: функциональные компоненты\r\n→ Часть 3: файлы компонентов', ' структура проектов\r\n→ Часть 4: родительские и дочерние компоненты\r\n→ Часть 5: начало работы над TODO-приложением', ' основы стилизации\r\n→ Часть 6: о некоторых особенностях курса', ' JSX и JavaScript\r\n→ Часть 7: встроенные стили\r\n→ Часть 8: продолжение работы над TODO-приложением', ' знакомство со свойствами компонентов\r\n→ Часть 9: свойства компонентов\r\n→ Часть 10: практикум по работе со свойствами компонентов и стилизации\r\n→ Часть 11: динамическое формирование разметки и метод массивов map\r\n→ Часть 12: практикум', ' третий этап работы над TODO-приложением\r\n→ Часть 13: компоненты', ' основанные на классах\r\n→ Часть 14: практикум по компонентам', ' основанным на классах', ' состояние компонентов\r\n→ Часть 15: практикумы по работе с состоянием компонентов\r\n→ Часть 16: четвёртый этап работы над TODO-приложением', ' обработка событий\r\n→ Часть 17: пятый этап работы над TODO-приложением', ' модификация состояния компонентов\r\n→ Часть 18: шестой этап работы над TODO-приложением\r\n→ Часть 19: методы жизненного цикла компонентов\r\n→ Часть 20: первое занятие по условному рендерингу\r\n→ Часть 21: второе занятие и практикум по условному рендерингу\r\n→ Часть 22: седьмой этап работы над TODO-приложением', ' загрузка данных из внешних источников\r\n→ Часть 23: первое занятие по работе с формами\r\n→ Часть 24: второе занятие по работе с формами\r\n→ Часть 25: практикум по работе с формами\r\n→ Часть 26: архитектура приложений', ' паттерн Container/Component\r\n→ Часть 27: курсовой проект']"
['\n      ru_vds\n    '],"['Учебный курс по React', ' часть 15: практикумы по работе с состоянием компонентов']",['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['Сегодня мы предлагаем вам выполнить два практических занятия по работе с состоянием компонентов. В частности', ' выполняя сегодняшние задания', ' вы сможете не только лучше усвоить концепцию свойств', ' но и позаниматься отладкой React-приложений', ' в которых имеются ошибки.\n\n\n\r\n→ Часть 1: обзор курса', ' причины популярности React', ' ReactDOM и JSX\r\n→ Часть 2: функциональные компоненты\r\n→ Часть 3: файлы компонентов', ' структура проектов\r\n→ Часть 4: родительские и дочерние компоненты\r\n→ Часть 5: начало работы над TODO-приложением', ' основы стилизации\r\n→ Часть 6: о некоторых особенностях курса', ' JSX и JavaScript\r\n→ Часть 7: встроенные стили\r\n→ Часть 8: продолжение работы над TODO-приложением', ' знакомство со свойствами компонентов\r\n→ Часть 9: свойства компонентов\r\n→ Часть 10: практикум по работе со свойствами компонентов и стилизации\r\n→ Часть 11: динамическое формирование разметки и метод массивов map\r\n→ Часть 12: практикум', ' третий этап работы над TODO-приложением\r\n→ Часть 13: компоненты', ' основанные на классах\r\n→ Часть 14: практикум по компонентам', ' основанным на классах', ' состояние компонентов\r\n→ Часть 15: практикумы по работе с состоянием компонентов\r\n→ Часть 16: четвёртый этап работы над TODO-приложением', ' обработка событий\r\n→ Часть 17: пятый этап работы над TODO-приложением', ' модификация состояния компонентов\r\n→ Часть 18: шестой этап работы над TODO-приложением\r\n→ Часть 19: методы жизненного цикла компонентов\r\n→ Часть 20: первое занятие по условному рендерингу\r\n→ Часть 21: второе занятие и практикум по условному рендерингу\r\n→ Часть 22: седьмой этап работы над TODO-приложением', ' загрузка данных из внешних источников\r\n→ Часть 23: первое занятие по работе с формами\r\n→ Часть 24: второе занятие по работе с формами\r\n→ Часть 25: практикум по работе с формами\r\n→ Часть 26: архитектура приложений', ' паттерн Container/Component\r\n→ Часть 27: курсовой проект']"
['\n      xnim\n    '],['Работа с callbacks в React'],['Блог компании HeadHunter JavaScript *ReactJS *'],"['За время своей работы', ' я периодически сталкивался с тем', ' что разработчики не всегда четко представляют', ' каким образом работает механизм передачи данных через props', ' в частности колбеков', ' и почему их PureComponents обновляется так часто. \nПоэтому в данной статье мы разберемся', ' как передаются callbacks в React', ' а также обсудим особенности работы event handlers. ']"
['\n      ru_vds\n    '],"['Учебный курс по React', ' часть 16: четвёртый этап работы над TODO-приложением', ' обработка событий']",['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['В сегодняшней части перевода учебного курса по React мы продолжим работу над Todo-приложением и поговорим о том', ' как в React обрабатывают события.\n\n\n\r\n→ Часть 1: обзор курса', ' причины популярности React', ' ReactDOM и JSX\r\n→ Часть 2: функциональные компоненты\r\n→ Часть 3: файлы компонентов', ' структура проектов\r\n→ Часть 4: родительские и дочерние компоненты\r\n→ Часть 5: начало работы над TODO-приложением', ' основы стилизации\r\n→ Часть 6: о некоторых особенностях курса', ' JSX и JavaScript\r\n→ Часть 7: встроенные стили\r\n→ Часть 8: продолжение работы над TODO-приложением', ' знакомство со свойствами компонентов\r\n→ Часть 9: свойства компонентов\r\n→ Часть 10: практикум по работе со свойствами компонентов и стилизации\r\n→ Часть 11: динамическое формирование разметки и метод массивов map\r\n→ Часть 12: практикум', ' третий этап работы над TODO-приложением\r\n→ Часть 13: компоненты', ' основанные на классах\r\n→ Часть 14: практикум по компонентам', ' основанным на классах', ' состояние компонентов\r\n→ Часть 15: практикумы по работе с состоянием компонентов\r\n→ Часть 16: четвёртый этап работы над TODO-приложением', ' обработка событий\r\n→ Часть 17: пятый этап работы над TODO-приложением', ' модификация состояния компонентов\r\n→ Часть 18: шестой этап работы над TODO-приложением\r\n→ Часть 19: методы жизненного цикла компонентов\r\n→ Часть 20: первое занятие по условному рендерингу\r\n→ Часть 21: второе занятие и практикум по условному рендерингу\r\n→ Часть 22: седьмой этап работы над TODO-приложением', ' загрузка данных из внешних источников\r\n→ Часть 23: первое занятие по работе с формами\r\n→ Часть 24: второе занятие по работе с формами\r\n→ Часть 25: практикум по работе с формами\r\n→ Часть 26: архитектура приложений', ' паттерн Container/Component\r\n→ Часть 27: курсовой проект']"
['\n      ru_vds\n    '],"['Учебный курс по React', ' часть 17: пятый этап работы над TODO-приложением', ' модификация состояния компонентов']",['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['В сегодняшней части перевода курса по React мы предлагаем вам выполнить очередное практическое задание и представляем вашему вниманию рассказ о том', ' как модифицировать состояние компонентов React.\n\n\n\r\n→ Часть 1: обзор курса', ' причины популярности React', ' ReactDOM и JSX\r\n→ Часть 2: функциональные компоненты\r\n→ Часть 3: файлы компонентов', ' структура проектов\r\n→ Часть 4: родительские и дочерние компоненты\r\n→ Часть 5: начало работы над TODO-приложением', ' основы стилизации\r\n→ Часть 6: о некоторых особенностях курса', ' JSX и JavaScript\r\n→ Часть 7: встроенные стили\r\n→ Часть 8: продолжение работы над TODO-приложением', ' знакомство со свойствами компонентов\r\n→ Часть 9: свойства компонентов\r\n→ Часть 10: практикум по работе со свойствами компонентов и стилизации\r\n→ Часть 11: динамическое формирование разметки и метод массивов map\r\n→ Часть 12: практикум', ' третий этап работы над TODO-приложением\r\n→ Часть 13: компоненты', ' основанные на классах\r\n→ Часть 14: практикум по компонентам', ' основанным на классах', ' состояние компонентов\r\n→ Часть 15: практикумы по работе с состоянием компонентов\r\n→ Часть 16: четвёртый этап работы над TODO-приложением', ' обработка событий\r\n→ Часть 17: пятый этап работы над TODO-приложением', ' модификация состояния компонентов\r\n→ Часть 18: шестой этап работы над TODO-приложением\r\n→ Часть 19: методы жизненного цикла компонентов\r\n→ Часть 20: первое занятие по условному рендерингу\r\n→ Часть 21: второе занятие и практикум по условному рендерингу\r\n→ Часть 22: седьмой этап работы над TODO-приложением', ' загрузка данных из внешних источников\r\n→ Часть 23: первое занятие по работе с формами\r\n→ Часть 24: второе занятие по работе с формами\r\n→ Часть 25: практикум по работе с формами\r\n→ Часть 26: архитектура приложений', ' паттерн Container/Component\r\n→ Часть 27: курсовой проект']"
['\n      ArthurSupertramp\n    '],['Управление стейтом с помощью React Hooks –\xa0без Redux и Context API'],['Блог компании ВКонтакте Разработка веб-сайтов *JavaScript *ReactJS *'],"['Всем привет! Меня зовут Артур', ' я работаю ВКонтакте в команде мобильного веба', ' занимаюсь проектом VKUI — библиотекой React-компонентов', ' с помощью которой написаны некоторые наши интерфейсы в мобильных приложениях. Вопрос работы с глобальным стейтом у нас пока открыт. Существует несколько известных подходов: Redux', ' MobX', ' Context API. Недавно я наткнулся на статью André Gardi State Management with React Hooks\u200a—\u200aNo Redux or Context API', ' в которой автор предлагает использовать React Hooks для управления стейтом приложения. \n\r\nХуки стремительно врываются в жизнь разработчиков', ' предлагая новые способы решения или переосмысления разных задач и подходов. Они меняют наше представление не только о том', ' как описывать компоненты', ' но и о том', ' как работать с данными. Перевод статьи и комментарий переводчика читайте под катом.\n\n']"
['\n      MaxRokatansky\n    '],['Использование Typescript с React – руководство для новичков'],['Блог компании OTUS JavaScript *ReactJS *TypeScript *'],"['Друзья', ' в преддверии выходных хотим поделиться с вами еще одной интересной публикацией', ' которую хотим приурочить к запуску новой группы по курсу «Разработчик JavaScript».\n\n\n\r\nПотратив последние несколько месяцев на разработку приложений на React и библиотек с использованием Typescript', ' я решил поделиться некоторыми вещами', ' которые узнал за это время. В этом руководстве я расскажу вам про шаблоны', ' которые я использую для Typescript и React в 80% случаев.\n\r\nСтоит ли изучать Typescript для разработки приложений на React? Стоит', ' еще как стоит! Для себя я осознал на практике', ' что строгая типизация приводит к написанию гораздо более надежного кода', ' быстрой разработке', ' особенно в крупных проектах. Сначала вы', ' вероятно', ' будете разочарованы', ' но по мере работы вы обнаружите', ' что хотя бы минимальный шаблон действительно будет очень кстати.\n\r\nИ если вы застряли на чем-то', ' помните', ' что вы всегда можете типизировать что- нибудь как any. Any – ваш новый друг. А теперь перейдем непосредственно к примерам.']"
['\n      Plarium\n    '],['Руководство по React Native для начинающих Android-разработчиков (с примером приложения)'],['Блог компании Plarium Разработка под Android *'],"['Представляем вам перевод статьи Nikhil Sachdeva', ' опубликованной на hackernoon.com. Автор делится опытом разработки мобильных приложений с помощью React Native и предлагает создать свое приложение', ' используя этот фреймворк.\n\n\n\r\nЯ был Android-разработчиком и довольно длительное время использовал в работе Java. Лишь недавно я попробовал свои силы в создании мобильных приложений с помощью React Native. Это заставило меня взглянуть на процесс разработки по-новому', ' если не сказать больше. Цель моей статьи — показать', ' какие различия я заметил', ' используя эти два фреймворка в разработке приложений.']"
['\n      ru_vds\n    '],['Анимированное руководство по базовым механизмам React'],['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['Автор заметки', ' перевод которой мы сегодня публикуем', ' говорит', ' что существует пропасть между использованием React для разработки пользовательских интерфейсов и необходимостью знать о том', ' как работает React на самом деле. Многие', ' применяющие React на практике', ' не знают о том', ' что происходит в недрах этой библиотеки. Здесь', ' в анимированной форме', ' будут рассмотрены некоторые ключевые процессы', ' происходящие в React при формировании пользовательских интерфейсов.\n\n']"
['\n      greebn9k\n    '],['Статическая типизация в React приложении'],['Программирование *Разработка мобильных приложений *ReactJS *'],"['В 2016 году TypeScript начал брать новые высоты. Разработчики принялись полностью переписывать на него многие популярные технологии и добавлять на существующие платформы поддержку статического анализа. Такой глобальный процесс добавил больше стабильности в кодовую базу тысяч', ' а то и десятков тысяч проектов.\n\r\nПочему React? По состоянию на сегодняшний день эта библиотека бесспорно доминирует на фоне конкурентов. Вокруг React образовалось самое большое сообщество разработчиков в мире. Каждый третий SPA написан на данной платформе. Также есть множество отличных проектов', ' связанных с использованием React Native', ' платформы для iOS', ' UWP и Android приложений', ' основанной на React.js.\n\r\nПоэтому сегодня мы взглянем на возможности', ' которые дает интеграция двух суперпопулярных инструментов: TypeScript и React.\n\n']"
['\n      vlsergey\n    '],['React + IndexDb + автообновление = почти AsyncRedux'],['JavaScript *ReactJS *'],"['В данной заметке по шагам расскажу как приготовить IndexDB (база данных', ' которая встроена в любой современный браузер) для использования в проектах', ' написанных на ReactJS. В результате Вы сможете использовать данные из IndexDB так же удобно', ' как если бы они находились в Redux Store вашего приложения.\n\nIndexDB — это документоориентированная СУБД', ' удобное средство для временного хранения относительно небольшого объёма (единицы и десятки мегабайт) структуированных данных на стороне браузера. К стандартной задаче', ' для которых мне приходится использовать IndexDB относится кэширование данных бизнес-справочников на стороне клиента (названия стран', ' городов', ' валют по коду и прочее). Скопировав их на сторону клиента потом можно лишь изредка загружать с сервера обновления этих справочников (либо целиком — они же небольшие) и не делать это при каждом открытии окна браузера.']"
['\n      botyaslonim\n    '],"['Когда фронтенд-разработчику стоит перейти с React на Vue', ' а когда это усложнит разработку']",['Блог компании Mail.ru Group Разработка веб-сайтов *ReactJS *VueJS *'],"['\n\r\nЕсли вы пытаетесь разобраться', ' какой из этих двух замечательных фреймворков выбрать', ' читайте мнение сторонника Vue по этому вопросу', ' которое я перевел и дополнил. \n\nПереведено при поддержке облачной платформы Mail.ru Cloud Solutions.']"
['\n      host_m\n    '],['Native vs Flutter vs React Native: тестируем производительность в работе с UI-элементами'],['Блог компании VDSina.ru Разработка мобильных приложений *Разработка под Android *ReactJS *Flutter *'],"['Давайте возьмём задачи разной сложности и сравним потребление памяти', ' FPS', ' загрузку CPU и GPU при работе мобильных приложений', ' созданных с помощью разных технологий.\n\n']"
['\n      chemtech\n    '],['Sentry удаленный мониторинг багов в фронтенд приложениях React'],['Тестирование IT-систем *Отладка *Тестирование веб-сервисов *DevOps *'],"['Мы изучаем использование Sentry с React.\n\nЭта статья является частью серии', ' начинающейся с сообщения об ошибках Sentry на примере: Часть 1. ']"
['\n      LinguaLeo\n    '],['Когда имеет смысл писать кроссплатформенные приложения: появление и исчезновение React Native в Lingualeo'],['Блог компании Lingualeo Разработка мобильных приложений *Изучение языков '],"['В приложениях Lingualeo сложился довольно редкий кейс. Их создали до того', ' как появились кроссплатформенные технологии', ' но через несколько лет туда добавили модули на React Native. Кроссплатформенные модули прожили в приложениях примерно четыре года: в ближайшем релизе мы их уберём.Мы попросили лидера мобильной разработки Артёма Рыжкина (phoenix_rav) рассказать о том', ' откуда в нативных приложениях Lingualeo появились модули на React Native', ' какие они вызывали проблемы и когда вообще имеет смысл делать кроссплатформенные приложения.\xa0']"
['\n      ru_vds\n    '],"['Visx — коллекция графических примитивов для React-приложений', ' созданная в Airbnb']",['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['После 3 лет разработки и 2', '5 лет использования в продакшн-проектах Airbnb', ' после переписывания кода на TypeScript', ' мы рады представить вам официальный релиз коллекции графических примитивов visx 1.0\xa0 (раньше она называлась vx). Вот — страница проекта на GitHub. Документацию и примеры можно найти на airbnb.io.\n\n\n\r\nМы поставили себе цель', ' которая заключалась в том', ' чтобы унифицировать стек технологий визуализации данных', ' применяемый во всех проектах Airbnb. В ходе движения к этой цели мы создали новый проект', ' в котором объединена мощь D3 и удобство React. Среди сильных сторон visx мы можем отметить следующие:\n\n\nИспользование коллекции способствует созданию бандлов приложений маленького размера. Дело в том', ' что visx разбита на множество пакетов. Поэтому при её использовании в некоем проекте можно взять из неё лишь то', ' что нужно.\nКоллекция спроектирована так', ' чтобы не навязывать программистам некие предопределённые схемы работы. Используя visx', ' разработчик может использовать собственную систему управления состоянием приложения', ' свою библиотеку анимации или подходящее ему CSS-in-JS-решение. Высока вероятность того', ' что при создании вашего React-приложения уже приняты решения о том', ' как в нём выполняются анимации', ' о том', ' какой подход используется для работы с темами', ' о том', ' как стилизуются элементы. Visx', ' в этом плане', ' ничего нового в приложения не добавляет. Библиотека интегрируется со всем тем', ' что уже есть в проект.\nЭто — не коллекция элементов', ' «заточенная» под создание графиков. Если вы будете пользоваться визуализационными примитивами для создания графиков', ' то вы', ' в итоге', ' создадите собственную библиотеку', ' решающую эту задачу. Причём', ' это будет библиотека', ' оптимизированная под ваши нужды. Она будет находиться под вашим полным контролем.\n']"
['\n      tw_community\n    '],['Создание React-компонентов с помощью Hygen'],['Блог компании Timeweb Программирование *ReactJS *'],"['Вы использовали когда-нибудь Hygen', ' автоматический генератор кода? Если еще нет', ' возможно', ' наш перевод откроет для вас новый полезный инструмент.\n\n']"
['\n      tw_community\n    '],['NextJS и Create-React-App. В чем разница?'],['Блог компании Timeweb Программирование *'],"['Публикуем новый перевод для начинающих React-разработчиков. Надеемся', ' статья поможет при выборе подходящего инструмента для вашего следующего проекта.\r\nКогда речь идет о создании новых проектов на React', ' перед нами стоит очевидный выбор: NextJS или Create-React-App. Gatsby практически перестал использоваться из-за медленных сборок при масштабировании. Кроме того', ' NextJS становится всё более удобным генератором статических сайтов.']"
['\n      membrum\n    '],['Архитектурный паттерн Dependency Injection в React-приложении'],['Блог компании TINKOFF Разработка веб-сайтов *JavaScript *Проектирование и рефакторинг *ReactJS *'],"['Расшифровка доклада Сергея Нестерова с конференции FrontendLive 2020.Привет! Меня зовут Сергей', ' уже больше двух лет я работаю в группе компаний Тинькофф. Моя команда занимается разработкой системы для анализа качества обслуживания клиентов в Тинькофф', ' и', ' как вы', ' наверное', ' догадались', ' мы используем React в своем приложении. Не так давно мы внедрили в свой проект архитектурный паттерн Dependency Injection совместно с IoC-контейнерами. Сделали мы это не просто так: это позволило нам решить ряд проблем', ' которые тормозили разработку нового функционала. ']"
['\n      Sin9k\n    '],['Исходники React.memo или что такое SimpleMemo'],['JavaScript *ReactJS *'],"['Привет', ' Хабр!В прошлых моих статьях обсуждая useMemo', ' мы постоянно упоминали React.memo. Поэтому в этой статье я решил глубоко погрузиться в понятие', ' что из себя представляет React.memo и конечно же изучим его исходники. (Данная статья является расшифровкой двух видео: React.memo это вам не useMemo и Чем отличается SimpleMemoComponent от MemoComponent?)']"
['\n      vvaannaa1\n    '],['Чего мне не хватало в функциональных компонентах React.js'],['Программирование *ReactJS *TypeScript *'],"['Помню первое впечатление от React hooks. Можно не писать классы. Не нужно описывать тип состояния', ' инициализировать состояния в конструкторе', ' теснить всё состояние в одном объекте', ' помнить о том', ' как setState сливает новое состояние со старым. Не придется больше насиловать методы componentDidMount и componentWillUnmount запутанной логикой инициализации и освобождения ресурсов.']"
['\n      ButtSurfer\n    '],['Как Лёня с React на Swift переезжал'],['Блог компании Яндекс.Практикум JavaScript *Разработка мобильных приложений *Swift *ReactJS *'],"['Всем привет! Меня зовут Лёня', ' я фронтенд-разработчик в компании KOTELOV и выпускник курса «Мидл фронтенд-разработчик» в Яндекс.Практикуме. Общаясь с коллегами', ' которые занимаются мобильной разработкой', ' я понял', ' что у них всё гораздо сложнее', ' чем в вебе. Я взял свой телефон в руки', ' посмотрел на известные приложения типа телеги или Яндекс.Музыки с точки зрения человека', ' который их пишет', ' и подумал: «Вау', ' как круто! Я тоже хочу так уметь!»\n\r\nТогда я принял твёрдое решение изучить iOS-разработку и написать собственное приложение. На выбор было два языка: Objective-C и Swift. К динозаврам моё отношение подозрительное', ' поэтому я принял решение набивать шишки обо что-то помягче и посвежее.\n\r\nЭтим постом я открываю цикл про то', ' как я переезжал с фронта на мобилку и с чем столкнулся по пути. Если вы тоже посматриваете в сторону мобилок', ' вам может пригодиться мой опыт.\n\n\n\nГотовимся к переходу — изучаем SwiftUI\r\nДва года назад Apple выпустила SwiftUI — новый фреймворк для своего языка. До этого разработчики писали на UI Kit', ' но это дело прошлого. Думаю', ' что на нём до сих пор пишут лишь потому', ' что сложно в один день переписать весь легаси-код на новый лад. Для себя я уже давно вынес правило: никогда не изучай старое', ' если есть новое. Но на всякий случай я изучил различия между старым UI Kit Storyboard и SwiftUI', ' а также мнения людей', ' которые в теме.']"
['\n      aio350\n    '],['React: немного о работе с формами'],['Блог компании Timeweb Разработка веб-сайтов *JavaScript *Программирование *'],"['\n\r\nПривет', ' друзья!\nВ последнее время мне на глаза часто попадаются статьи', ' посвященные работе с формами в React и разработке соответствующих кастомных хуков. Вот парочка таких статей:\n\nUsing Forms in React\nReact.js — формошлепство или работа с формами при помощи пользовательских хуков\nForm validation with React Hooks WITHOUT a library: The Complete Guide\n\nЯ тоже решил попробовать в этом свои силы', ' чему и посвящена настоящая статья. Под ""этим"" я подразумеваю разработку кастомного хука для работы с формами в React.\nСначала мы разработаем хук', ' затем используем его в формах для регистрации и авторизации.\nДля большей правдоподобности мы напишем простой express-сервер', ' который будет возвращать некоторые пользовательские данные (например', ' jwt-токен и хешированный пароль)', ' а также некоторые типичные для процесса авторизации ошибки (например', ' 404 User not found или 409 Email already in use).\nПри разработке хука и компонентов приложения мы применим несколько продвинутых паттернов', ' которые', ' смею надеяться', ' покажутся вам интересными.\nИсходный код проекта находится здесь.\nДемо приложения:\n\nВозможно', ' для того', ' чтобы в песочнице все заработало', ' потребуется ввести команду yarn dev в терминале.\nХук в форме npm-пакета — simple-form-react.']"
['\n      qmzik\n    '],['Планы React Native на второе полугодие 2021 года'],['JavaScript *Разработка под iOS *Разработка под Android *ReactJS *'],"['За последний год в нашем мире так много изменилось', ' и React Native не исключение. Мы приветствовали новых членов в нашей команде (с которыми мы очень рады встретиться лично!)', ' наши проекты созрели', ' и появились новые возможности. Мы рады поделиться всем этим с вами в этой публикации!В Facebook наша команда работает полугодиями. Каждое полугодие мы пересматриваем нашу стратегию', ' устанавливаем планы и делимся ими внутри компании. Сегодня мы хотим поделиться с вами', ' нашим комьюнити', ' нашими планами на второе полугодие 2021 года.Вторая половина года - захватывающая для React Native. Наши основные направления включают развитие сообщества', ' начало развертывания новой архитектуры с открытым исходным кодом и продвижение технологии.']"
['\n      MrCheater\n    '],['Стилизация React-компонентов'],['Блог компании Developer Soft JavaScript *ReactJS *'],"['\nВведение\nСуществует множество подходов для того', ' чтобы стилизовать React-компоненты', ' и в этой статье будут рассмотрены некоторые из них. Но', ' для начала', ' определимся с ключевыми моментами', ' на которых основано повествование:\n\nИспользование React предполагает', ' что View нашего Web-приложения разбито на компоненты', ' и каждый из них', ' так или иначе', ' отвечает за собственное отображение и функциональность.\n\nПодразумевается', ' что будут использованы современные инструменты разработки вроде babel', ' webpack', ' browserify', ' gulp', ' post- pre- css-процессоры.\n']"
['\n      xnim\n    '],['Нянчим проект на React-redux с пелёнок'],['Блог компании HeadHunter JavaScript *Программирование *ReactJS *'],"['\r\nВ начале этого года мы в HeadHunter начали проект', ' нацеленный на автоматизацию различных HR-процессов у компаний-клиентов. Архитектурой этого проекта на фронте выбрали React-Redux стек. \n\r\nЗа 9 месяцев он вырос из небольшого приложения для тестирования сотрудников в многомодульный проект', ' который сегодня называется “Оценка талантов”. По мере его роста мы сталкивались с вопросами:\n\n\nхранения стейта', ' его нормализации; \nпостроения масштабируемой архитектуры проекта', ' удобной иерархии — как в структуре', ' так и в бизнес-логике. \n\r\nЭто проявлялось в изменении подхода к построению компонентов', ' архитектуры редьюсеров. \n\r\nДавайте поговорим о том', ' как мы развивали проект и какие решения принимали. Некоторые из них могут оказаться “холиварными”', ' а другие', ' напротив', ' “классикой” в построении большого проекта на redux. Надеюсь', ' что описанные ниже практики помогут вам при построении react-redux приложений', ' а живые примеры помогут разобраться', ' как работает тот или иной подход.\n']"
['\n      olegbunin\n    '],['Изоморфные React-приложения: производительность и масштабирование'],['Блог компании Конференции Олега Бунина (Онтико) JavaScript *Клиентская оптимизация *Angular *ReactJS *'],"['\n\nДенис Измайлов ( DenisIzmaylov )\r\nВсем привет! Вкратце расскажу о себе. Я — Денис Измайлов. Последние 5 лет сосредоточился на JS-разработке', ' делал много Single Page Application', ' highload', ' React', ' выступал на MoscowJS несколько раз', ' каммитил webpack и т.д.\n\r\nСегодня хотел бы поговорить вот о чем: почему от Single Page Application в его классическом виде стоит отказаться; как изоморфные приложения отразятся на Вашей зарплате; и что вы будете делать на этих выходных?\n']"
['\n      dfuse\n    '],['Упрощаем универсальное/изоморфное приложение на React + Router + Redux + Express'],['JavaScript *Клиентская оптимизация *Node.JS *ReactJS *'],"['На Хабре уже было предостаточно статей про то', ' как делать универсальное (изоморфное) приложение на стеке React + Redux + Router + Koa/Express (Google в помощь)', ' однако я заметил', ' что все они содержат повторяющийся код для серверного рендеринга. Я решил упростить задачу и выделить этот общий код в библиотеку', ' так и появился на свет Create React Server', ' работает примерно так:\nimport Express from ""express"";\nimport config from ""./webpack.config"";\nimport createRouter from ""./src/createRouter"";\nimport createStore from ""./src/createStore"";\nimport {createExpressServer} from ""create-react-server"";\n\ncreateExpressServer({\n  createRouter: (history) => (createRouter(history))', '\n  createStore: ({req', ' res}) => (createStore())', '\n  port: 3000\n}));\nПредлагаемый способ может сэкономить силы и избавить от копи-паста. В самом подходе нет чего-то принципиально нового', ' и для более глубокого понимания можно почитать официальную документацию', ' а также статьи по ссылкам выше. Далее я постараюсь кратко изложить суть серверного рендеринга и необходимые подготовительные этапы.']"
['\n      blognetology\n    '],['Эврика! Моменты озарения при изучении React'],['Блог компании Нетология JavaScript *Программирование *ReactJS *'],"['Светлана Шаповалова', ' редактор «Нетологии»', ' перевела статью Тайлера МакГинниса', ' в которой он перечислил основные моменты озарения', ' которые возникают при изучении React.\n\n\n\r\nОдна из моих главных преподавательских задач — сделать так', ' чтобы у людей чаще случались моменты озарения. «Эврика!» — это момент внезапного прояснения', ' когда ранее непонятные факты вдруг обретают смысл. Такое случалось с каждым. Я знаком со многими преподавателями и лучшие из них умеют так преподносить урок', ' чтобы озарение у учеников возникало намного чаще.\n']"
['\n      serpentcross\n    '],['Изоморфное приложение React JS + Spring Boot'],['Блог компании Альфа-Банк Open source *JavaScript *Java *ReactJS *'],"['\n\r\nПро ReactJs', ' Java', ' Spring', ' рендеринг', ' Virtual DOM', ' Redux и прочие подобные вещи уже существует очень много всевозможных статей и практических наработок', ' поэтому я не буду в них углубляться.\n\r\nЯ не замерял производительность этой конструкции. Те кому интересно', ' могут провести свои личные тесты и сравнить например с NodeJS.\n\r\nЯ не особо заморачивался на стиле и качестве кода', ' так что извиняйте', ' кому не придётся по душе =)\n\r\nЦель моей работы просто заставить работать воедино такие вещи как ReactJS + Redux + WebPack + Java/Spring. \n\r\nПеред тем как писать свою статью', ' я воспользовался поиском и обнаружил существующий аналогичный пример. Но', ' почитав комментарии', ' я заметил', ' что некоторые желают увидеть подобный образец изоморфного приложения', ' но работающий со Spring. \n\r\nС радостью исполняю желание читателей.']"
['\n      ru_vds\n    '],['Топ-10 библиотек для React на GitHub'],['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['Как искать хорошие инструменты для разработки веб-проектов? Один из способов поиска заключается в анализе статистики проектов из интересующей вас сферы на GitHub. Если', ' например', ' некая библиотека пользуется популярностью', ' то это', ' по меньшей мере', ' говорит о том', ' что на неё стоит взглянуть. Вполне возможно', ' что одна из таких библиотек окажется именно тем', ' что вам нужно.\n\n\n\r\nБиблиотека React', ' созданная Facebook', ' представляет собой мощный JavaScript-фреймворк', ' упрощающий работу программистов', ' занимающихся веб-разработкой. Однако', ' если вы работали какое-то время с React JS', ' вы согласитесь с тем', ' что для того', ' чтобы в полной мере раскрыть возможности этого фреймворка', ' не помешает ещё несколько дополнительных библиотек.\n\r\nАвтор материала', ' перевод которого мы сегодня публикуем', ' говорит о том', ' что из опыта знает о важности опенсорсных проектов в деле веб-разработки. Однако', ' из-за того', ' что на GitHub присутствует очень много библиотек для React', ' программисты оказываются избалованы выбором. Поэтому было бы неплохо сузить рассматриваемые варианты до буквально нескольких проектов. Перед вами — обзор первой десятки самых популярных библиотек для React с GitHub', ' ранжированных по количеству присвоенных им звёзд.']"
['\n      ph_piter\n    '],['Книга «React и Redux: функциональная веб-разработка»'],['Блог компании Издательский дом «Питер» Профессиональная литература ReactJS *'],"[' Привет', ' Хаброжители! В декабре мы издали книгу Алекса Бэнкса и Евы Порселло', ' цель которой — научить писать эффективные пользовательские интерфейсы при помощи React и систематизация новых технологий', ' позволяющая сразу же приступить к работе с React. Чтение книги не предполагает никаких предварительных знаний React. Все основы библиотеки будут представлены с самого начала. Сейчас мы рассмотрим раздел «Управление состоянием React»\n\r\nДо сих пор свойства использовались только для обработки данных в компонентах React. Свойства имеют неизменяемый характер. После отображения свойства компонента не изменяются. Чтобы изменить пользовательский интерфейс', ' понадобится другой механизм', ' способный заново отобразить дерево компонента с новыми свойствами. Состояние React является его неотъемлемой частью', ' предназначенной для управления данными', ' которые будут изменяться внутри компонента. Когда состояние приложения меняется', ' пользовательский интерфейс отображается заново', ' чтобы отразить эти нововведения.']"
['\n      ru_vds\n    '],['Новшества React 16.3(.0-alpha)'],['Блог компании RUVDS.com Разработка веб-сайтов *ReactJS *'],"['React 16.3-alpha опубликован в npm', ' его уже можно загружать и использовать. Сегодня мы поговорим о самых крупных и интересных нововведениях этого релиза. В частности', ' речь пойдёт об API Context', ' о новых методах жизненного цикла', ' о статическом методе getDerivedStateFromProps', ' о компонентах StrictMode и AsyncMode', ' а также об обновлённых инструментах разработчика React.\n\n\n']"
['\n      maxfarseer\n    '],['Разработка игры на React + SVG. Часть 3'],['JavaScript *Node.JS *ReactJS *'],"['TL;DR: в этих сериях вы узнаете', ' как заставить React и Redux управлять SVG элементами для создания игры. Полученные в этой серии знания позволят вам создавать анимацию не только для игр. Вы можете найти окончательный вариант исходного кода', ' разработанного в этой части', ' на GitHub\n(третья часть заключительная. В ней помимо завершения разработки непосредственно игры', ' рассмотрена авторизация с помощью Auth0 и простой realtime-сервер — прим.переводчика)\n']"
['\n      xnim\n    '],['Keys in React. Готовим правильно'],['Блог компании HeadHunter JavaScript *ReactJS *'],"['Сегодня поговорим об атрибуте key в React. Часто разработчики', ' которые только начинают использовать React', ' не придают большого значения атрибуту key. А зря…\n\nЧто говорит уточка', ' когда узнала', ' что ты не используешь key\nЧтобы представить работу ключей полностью и с различными кейсами', ' рассмотрим план:\n\nReconciliation\nРеиспользование ключей и нормализация\nИспользование key при рендере одного элемента\nРабота с ключами при передаче компоненту children\n']"
['\n      ru_vds\n    '],['Обзор библиотеки react-testing-library'],['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *'],"['В материале', ' перевод которого мы публикуем сегодня', ' Кент Доддс рассказывает о библиотеке собственной разработки для тестирования React-приложений', ' react-testing-library', ' в которой он видит простой инструмент', ' способный заменить enzyme и способствующий написанию качественных тестов с применением передовых наработок в этой области.\n\n\r\nАвтор материала говорит', ' что давно размышлял о чём-то подобном', ' и в итоге', ' примерно в середине прошлого месяца', ' решил заняться разработкой библиотеки для тестирования', ' которая его устраивала бы. В частности', ' в enzyme ему не нравилось то', ' что большинство возможностей этой библиотеки склоняют разработчика к не самым лучшим методам подготовки тестов', ' которые способны навредить проекту. В результате у него получился простой', ' но самодостаточный набор инструментов для тестирования React DOM. ']"
['\n      apapacy\n    '],['Apollo graphql client — разработка приложений на react.js без redux'],['JavaScript *Node.JS *ReactJS *'],"['Apollo graphql client представляет удобный лаконичный спсоб работы с данными в приложениях react. В большинстве случаев все то', ' что мы привыкли делать с помощью redux', ' гораздо проще сделать при помощи Apollo graphql client. То', ' о чем я хотел бы рассказать в этой статье — это что связка react + apollo client + graphql существенно (на порядок) упрощает разработку приложений react.']"
['\n      8of\n    '],['React Native с точки зрения мобильного разработчика'],['Блог компании Qlean Программирование *Разработка под iOS *Разработка мобильных приложений *Разработка под Android *'],"['\n\nСтатья ориентирована на iOS и android разработчиков', ' которые уже достаточно хорошо разбираются в своей области и поглядывают в сторону React Native.\n\r\nВпервые узнав про React Native', ' я воспринял его как повод для веб-разработчиков вторгнуться на мою территорию (нипазволю!) и заодно испортить хорошо работающий crash-free-60-fps продукт. Так оно и произошло. Конец. Реальная история оказалась длиннее.']"
['\n      MordorReal\n    '],"['Самые распространенные ошибки в вашем React коде', ' которые вы (возможно) делаете']",['JavaScript *ReactJS *'],"['\nВдохновленный прочитанными статьями на медиуме', ' я решил написать свою статью и рассказать вам как можно избегать самых распространенных ошибок в вашем React приложении и для чего это нужно делать.\nВесь код написан в ES6 стиле', ' поэтому', ' что бы повторить его вам нужно использовать Babel в вашем проекте (а еще есть такие кто его не использует?).\nЯ постарался объяснить как можно подробнее каждую ошибку', ' поэтому', ' моя статья больше ориентирована на молодых разработчиков', ' которые еще находятся в поиске новых знаний. Хотя', ' как мне кажется', ' и опытный разработчик может найти для себя пару интересных вещей в этой статье.\nЕсли вам интересно', ' то добро пожаловать под кат.']"
['\n      ru_vds\n    '],['Кэширование обработчиков событий и улучшение производительности React-приложений'],['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['Сегодня мы публикуем перевод материала', ' автор которого', ' проанализировав особенности работы с объектами в JavaScript', ' предлагает React-разработчикам методику ускорения приложений. В частности', ' речь идёт о том', ' что переменная', ' которой', ' как принято говорить', ' «присвоен объект»', ' и которую часто называют просто «объектом»', ' на самом деле', ' хранит не сам объект', ' а ссылку на него. Функции в JavaScript тоже являются объектами', ' поэтому вышесказанное справедливо и для них. Если помнить об этом', ' проектируя React-компоненты и критически анализируя их код', ' можно усовершенствовать их внутренние механизмы и улучшить производительность приложений.\n\n']"
['\n      Lavs\n    '],['Начать с React и Bootstrap за 2 дня. День №1'],['CSS *JavaScript *HTML *ReactJS *'],"['Сразу скажу', ' что сайт будет быстрее работать', ' если заменить Bootstrap на чистый CSS и JS. Эта статья про то', ' как быстро начать разрабатывать красивые web-приложения', ' а оптимизация это уже отдельный вопрос', ' выходящий за пределы этой статьи.\n\r\nДля начала надо хотя бы немного разбираться в HTML', ' CSS', ' JavaScript', ' XML', ' DOM', ' ООП и уметь работать в терминале (командной строке). \n\nГде брать материалы для изучения?Для изучения HTML и CSS рекомендую htmlbook.ru\r\nДля изучения JavaScript рекомендую learn.javascript.ru\r\nДля изучения XML рекомендую msiter.ru/tutorials/uchebnik-xml-dlya-nachinayushchih\r\nПро DOM можно почитать в уроке по JavaScript learn.javascript.ru/dom-nodes\r\nДля изучения ООП рекомендую видеокурс proglib.io/p/oop-videocourse\r\nДля изучения командной строки Windows рекомендую cmd.readthedocs.io/cmd.html\r\nДля изучения терминала в Mac рекомендую ixrevo.me/mac-os-x-terminal\r\nЕсли вы работаете в Linux', ' то bash и аналоги знаете', ' в крайнем случае man или help вам помогут.\r\nДля изучения React использую learn-reactjs.ru (который является переводом официальной документации React: reactjs.org). \r\nДля изучения Bootstrap использую bootstrap-4.ru (который является переводом официальной документации Bootstrap: getbootstrap.com). \r\nДля того', ' чтобы подружить React и Bootstrap нашёл отличную статью webformyself.com/kak-ispolzovat-bootstrap-s-react\n\r\nВ этой статье сделаю выжимку минимально необходимого для работы и сделаем такой таймер:\n\n']"
['\n      itwillwork\n    '],['Почему у React элементов есть свойство $$typeof?'],['Информационная безопасность *Разработка веб-сайтов *JavaScript *ReactJS *'],"['О механизме React по предотвращению возможности инъекции JSON для XSS', ' и об избегании типовых уязвимостей.\n']"
['\n      ru_vds\n    '],"['Учебный курс по React', ' часть 2: функциональные компоненты']",['Блог компании RUVDS.com Разработка веб-сайтов *ReactJS *'],"['В одном из наших предыдущих материалов мы задавали вам вопрос о том', ' целесообразно ли сделать на базе этого курса по React серию традиционных публикаций. Вы нашу идею поддержали. Поэтому сегодня мы представляем вашему внимание продолжение курса. Здесь мы поговорим о функциональных компонентах.\n\n\n\n\r\n→ Часть 1: обзор курса', ' причины популярности React', ' ReactDOM и JSX\r\n→ Часть 2: функциональные компоненты\r\n→ Часть 3: файлы компонентов', ' структура проектов\r\n→ Часть 4: родительские и дочерние компоненты\r\n→ Часть 5: начало работы над TODO-приложением', ' основы стилизации\r\n→ Часть 6: о некоторых особенностях курса', ' JSX и JavaScript\r\n→ Часть 7: встроенные стили\r\n→ Часть 8: продолжение работы над TODO-приложением', ' знакомство со свойствами компонентов\r\n→ Часть 9: свойства компонентов\r\n→ Часть 10: практикум по работе со свойствами компонентов и стилизации\r\n→ Часть 11: динамическое формирование разметки и метод массивов map\r\n→ Часть 12: практикум', ' третий этап работы над TODO-приложением\r\n→ Часть 13: компоненты', ' основанные на классах\r\n→ Часть 14: практикум по компонентам', ' основанным на классах', ' состояние компонентов\r\n→ Часть 15: практикумы по работе с состоянием компонентов\r\n→ Часть 16: четвёртый этап работы над TODO-приложением', ' обработка событий\r\n→ Часть 17: пятый этап работы над TODO-приложением', ' модификация состояния компонентов\r\n→ Часть 18: шестой этап работы над TODO-приложением\r\n→ Часть 19: методы жизненного цикла компонентов\r\n→ Часть 20: первое занятие по условному рендерингу\r\n→ Часть 21: второе занятие и практикум по условному рендерингу\r\n→ Часть 22: седьмой этап работы над TODO-приложением', ' загрузка данных из внешних источников\r\n→ Часть 23: первое занятие по работе с формами\r\n→ Часть 24: второе занятие по работе с формами\r\n→ Часть 25: практикум по работе с формами\r\n→ Часть 26: архитектура приложений', ' паттерн Container/Component\r\n→ Часть 27: курсовой проект']"
['\n      ru_vds\n    '],"['Учебный курс по React', ' часть 21: второе занятие и практикум по условному рендерингу']",['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['Сегодня', ' в переводе следующей части учебного курса по React', ' мы предлагаем вашему вниманию второе занятие по условному рендерингу и практикум по этой теме.\n\n\n\r\n→ Часть 1: обзор курса', ' причины популярности React', ' ReactDOM и JSX\r\n→ Часть 2: функциональные компоненты\r\n→ Часть 3: файлы компонентов', ' структура проектов\r\n→ Часть 4: родительские и дочерние компоненты\r\n→ Часть 5: начало работы над TODO-приложением', ' основы стилизации\r\n→ Часть 6: о некоторых особенностях курса', ' JSX и JavaScript\r\n→ Часть 7: встроенные стили\r\n→ Часть 8: продолжение работы над TODO-приложением', ' знакомство со свойствами компонентов\r\n→ Часть 9: свойства компонентов\r\n→ Часть 10: практикум по работе со свойствами компонентов и стилизации\r\n→ Часть 11: динамическое формирование разметки и метод массивов map\r\n→ Часть 12: практикум', ' третий этап работы над TODO-приложением\r\n→ Часть 13: компоненты', ' основанные на классах\r\n→ Часть 14: практикум по компонентам', ' основанным на классах', ' состояние компонентов\r\n→ Часть 15: практикумы по работе с состоянием компонентов\r\n→ Часть 16: четвёртый этап работы над TODO-приложением', ' обработка событий\r\n→ Часть 17: пятый этап работы над TODO-приложением', ' модификация состояния компонентов\r\n→ Часть 18: шестой этап работы над TODO-приложением\r\n→ Часть 19: методы жизненного цикла компонентов\r\n→ Часть 20: первое занятие по условному рендерингу\r\n→ Часть 21: второе занятие и практикум по условному рендерингу\r\n→ Часть 22: седьмой этап работы над TODO-приложением', ' загрузка данных из внешних источников\r\n→ Часть 23: первое занятие по работе с формами\r\n→ Часть 24: второе занятие по работе с формами\r\n→ Часть 25: практикум по работе с формами\r\n→ Часть 26: архитектура приложений', ' паттерн Container/Component\r\n→ Часть 27: курсовой проект']"
['\n      yallie\n    '],['Unstated-next: минималистичное управление состоянием React-приложения'],['ReactJS *'],"['200 байт для управления состоянием React-компонентов\n\nReact-хуки: это все', ' что нужно для управления состоянием.\n~200 байт', ' min+gz.\nЗнакомый API: просто пользуйтесь React', ' как обычно.\nМинимальный API: хватит пяти минут', ' чтобы разобраться.\nНаписан на TypeScript', ' чтобы обеспечить автоматический вывод типов.\n\nГлавный вопрос: чем этот пакет лучше', ' чем Redux? Ну...']"
['\n      fokus-lop\n    '],['5 отличных способов анимировать React-приложения в 2019 году'],['Блог компании Skillbox Разработка веб-сайтов *Программирование *Учебный процесс в IT '],"['\n\r\nАнимация в приложениях React — популярная и обсуждаемая тема. Дело в том', ' что способов ее создания очень много. Некоторые разработчики используют CSS', ' добавляя теги в HTML-классы. Отличный способ', ' его стоит применять. Но', ' если вы хотите работать со сложными видами анимаций', ' стоит уделить время изучению GreenSock', ' это популярная и мощная платформа. Также для создания анимаций существует масса библиотек и компонентов. Давайте поговорим о них.']"
['\n      ru_vds\n    '],[' ...  по разработке крупномасштабных React-приложений. Часть 2 ... '],['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['Сегодня мы публикуем вторую часть перевода материала', ' который посвящён разработке крупномасштабных React-приложений. Здесь речь пойдёт об управлении состоянием приложений', ' о маршрутизации и о разработке интерфейсов.\n\n\n\r\nЧасть 1: Практические рекомендации по разработке масштабных React-приложений. Планирование', ' действия', ' источники данных и API\n\r\nЧасть 2: Практические рекомендации по разработке крупномасштабных React-приложений. Часть 2: управление состоянием', ' маршрутизация\n']"
['\n      SSul\n    '],"['Нативная разработка', ' React Native и Flutter: критерии выбора']",['Блог компании SimbirSoft Разработка под iOS *Разработка мобильных приложений *Разработка под Android *Flutter *'],"['Уже на стадии проектирования мобильного приложения важно понимать', ' какой язык выгоднее использовать для конкретного проекта. Наряду с нативной разработкой (например', ' для iOS — Swift или Objective-C', ' для Android – Java или Kotlin)', ' используются кроссплатформенные фреймворки', ' такие как React Native и Flutter. Мы в SimbirSoft предлагаем несколько критериев', ' которые помогут в выборе как бизнесу', ' так и мобильному разработчику. \n\n']"
['\n      san-smith\n    '],['React Native: делаем draggable & swipeable список'],['Разработка под iOS *Разработка под Android *ReactJS *'],"['Сегодня трудно кого-то удивить возможностью свайпать элементы списка в мобильных приложениях. В одном нашем react-native приложении тоже была такая функциональность', ' но недавно возникла необходимость расширить её возможностью перетаскивать элементы списка. А поскольку процесс поиска решения стоил мне некоторого количества нервных клеток', ' я решил запилить небольшую статью', ' чтобы сэкономить драгоценное время будущим поколениям.\n\n']"
['\n      DmitriyKotlyarenko\n    '],['Modern Environment for React Native Applications'],['Программирование *Разработка под iOS *Разработка под Android *ReactJS *TypeScript *'],"['In this article', ' we will consider the process of setting up a React Native environment using expo-cli', ' Typescript', ' and Jest.\r\nTypescript will help us avoid development mistakes and write a more efficient mobile application.\n\r\nModern tools allow integrating Typescript into the development environment. We can also use VS Code that supports Typescript.\n\nIntegration with React Native will give us the opportunity to use the auto-completion service', ' code navigation', ' and refactoring.\n\r\nExpo is a toolkit that simplifies the creation of native React applications. This tutorial will give you an idea of how you can quickly create native React applications using Expo.\n\n\n']"
['\n      RostislavDugin\n    '],['The Clean Architecture на TypeScript и React. Часть 1: Основы'],['Разработка веб-сайтов *JavaScript *ООП *ReactJS *'],"['\n\r\nДобрый день', ' уважаемые читатели. В этой статье мы поговорим об архитектуре программного обеспечения в веб-разработке. Довольно долгое время я и мои коллеги используем вариацию The Clean Architecture для построения архитектуры в своих проектах Frontend проектах. Изначально я взял ее на вооружение с переходом на TypeScript', ' так как не нашел других подходящих общепринятых архитектурных подходов в мире разработки на React (а пришел я из Android-разработки', ' где давным-давно', ' еще до Kotlin', ' наделала шумихи статья от Fernando Cejas', ' на которую я до сих пор иногда ссылаюсь).\n\r\nВ данной статье я хочу рассказать вам о нашем опыте применения The Clean Architecture в React-приложениях с использованием TypeScript. Зачем я это рассказываю? — Иногда мне приходится разъяснять и обосновывать ее использование разработчикам', ' которые еще не знакомы с таким подходом. Поэтому здесь я сделаю детальный разбор с наглядными пояснениями на которое я смогу ссылаться в будущем.']"
['\n      ph_piter\n    '],['Постепенно вводим TypeScript в ваш проект на React'],['Блог компании Издательский дом «Питер» Занимательные задачки JavaScript *Программирование *TypeScript *'],"['Привет', ' Хабр!\n\r\nВ последнее время в области front-end особую популярность приобретает комбинация React+TypeScript. Соответственно', ' возрастает актуальность грамотной миграции с JavaScript на TypeScript', ' желательно в сжатые сроки. Сегодня мы хотели бы обсудить с вами именно эту тему.\n\n']"
['\n      IvanGanev\n    '],['Как управлять состоянием React приложения без сторонних библиотек'],['Разработка веб-сайтов *JavaScript *ReactJS *'],"['\nРеакт это все что вам нужно для управления состоянием вашего приложения.\nУправление состоянием это одна из сложнейших задач при разработки приложения. Вот почему каждый день появляются все новые и новые библиотеки для управления состоянием', ' их становится все больше и больше', ' причем многие из них разрабатываются поверх уже существующих решений. В npm вы можете найти сотни ""упрощенных Redux"" библиотек. Однако', ' несмотря на то что управлять состоянием сложно', ' одной из причин того почему так получилось стало именно то что мы слишком переусложняем решение проблемы.\nСуществует метод управления состоянием который лично я пытаюсь применять еще с тех пор как я начал использовать Реакт. И теперь', ' после релиза хуков (hooks) и улучшения контекстов (context)', ' этот метод управления состояниями стало очень просто использовать.']"
['\n      ru_vds\n    '],['React-разработка: 6 путей к профессиональному росту'],['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *Карьера в IT-индустрии '],"['Последние полгода я наблюдал за развитием начинающих React-программистов. За это время они прошли просто невероятный путь. Скорость их обучения', ' их жажда знаний', ' их стремление к совершенству — всё это произвело на меня сильнейшее впечатление.\n\r\nКак им это удалось? Как они превратились из тех', ' кто не может без посторонней помощи открыть PR', ' в тех', ' к кому обращаются за помощью другие? Что сделало людей', ' просящих советов', ' людьми', ' охотно дающих советы другим? Как ученики превратились в учителей?\n\n\n\r\nЯ задал им эти вопросы. Вот что они на них ответили.']"
['\n      PatriciaNeil\n    '],['7 Best Practices Every Budding React.JS Developer Must Follow to Excel'],['Веб-дизайн *JavaScript *Программирование *ReactJS *'],"['\n\r\nWith the advancement in web technology', ' the entire globe is sliding towards the online tech sphere. The globe around us is going tech-centric day by day and thus the demand for front-end designers and developers also.\n\r\nWhatever', ' be the purpose', ' people just google things and get their desired result. This is all because of the increase in the evolution of web and mobile app development. While we all know that to be a Web developer', ' you need to have basic skills of HTML', ' CSS', ' and JavaScript', ' but', ' with time React.js emerged into the technology stack of the web development field and outdated JavaScript. \n\r\nA Report by JS reflects that 64.8% of the web developers prefer to use the React.JS framework and would love to use it again and again in the future. It has even beaten other categories of frameworks that are Vue.js with 28.8% votes and Angular with 23.9% votes. This is the reason why the demand for React.JS development companies is at an all-time high.\n\n\n\r\nWith React', ' it becomes painless to build an interactive user interface. It efficiently updates and renders the right components when changes are made.\n\r\nBefore you use React.js as web technology', ' let’s have a look at the practices that every React.js developer should follow to write better react codes for their application.']"
['\n      AndrewKhizhnyak\n    '],['REACT + JEST = TDD ❤️'],['Блог компании ManyChat Разработка веб-сайтов *TDD *Тестирование веб-сервисов *ReactJS *'],"['Привет', ' Хабр! Меня зовут Андрей Хижняк', ' я фронтенд-разработчик в команде', ' разрабатывающей App Store внутри ManyChat.\n\r\nКак и моим коллегам', ' мне нравится пробовать новые подходы', ' методологии и практики', ' заниматься повышением качества и скорости разработки. В начале этого года мы с командой решили попробовать одну из техник экстремального программирования — TDD.\n\r\nОт том', ' что из этого вышло', ' и будет моя статья', ' добро пожаловать под кат!\n\n']"
['\n      frolant\n    '],['SEO-оптимизация сайта на React или как добиться конверсии от поисковиков если у вас Single Page Application'],['Блог компании Россельхозбанк Разработка веб-сайтов *ReactJS *Повышение конверсии *Поисковая оптимизация '],"['Смоделируем ситуацию: Вы являетесь членом команды веб-разработчиков', ' занимающихся созданием frontend-части молодого интернет-ресурса на базе React. И вот', ' когда уже начинает казаться что ваша разработка достигла определенной функциональной', ' качественной и эстетической кондиции', ' вы сталкиваетесь с достаточно сложным и не менее интересным вопросом: А что делать с SEO? Как добиться качественной конверсии от поисковых систем? Как сделать так', ' чтобы о вашем ресурсе узнал весь мир', ' не вкладывая в это огромного количества денег за платные рекламные компании либо сил в крупномасштабную дополнительную разработку? Как заставить контент вашего Single Page Application работать на вас в поисковых выдачах и приносить клиентов? Интересно? Тогда поехали…']"
['\n      Sanchezz17\n    '],['Вопросы для собеседования по хукам React'],['Разработка веб-сайтов *JavaScript *Программирование *ReactJS *'],['В данной статье приведены примеры вопросов и задач по React Hooks для собеседования']
['\n      Leono\n    '],"['Код на React и TypeScript', ' который работает быстро. Доклад Яндекса']",['Блог компании Яндекс Интерфейсы *ReactJS *TypeScript *'],"['Евангелисты Svelte и других библиотек любят показывать примеры тормозящих компонентов на React. React и TypeScript дают много возможностей создавать медленный код. После доклада Виктора victor-homyakov вы сможете писать более производительные компоненты без усложнения кода.\n\n— Здравствуйте', ' меня зовут Виктор', ' я один из разработчиков страницы поиска Яндекса. На ней каждый день сотни миллионов пользователей вводят свои запросы', ' получают страницу со ссылками или сразу с правильными ответами. Из-за такого количества запросов нам очень важно', ' чтобы наш код работал оптимально. И', ' конечно', ' я сразу должен затронуть тему преждевременной оптимизации кода. ']"
['\n      Greatest_Duke\n    '],['Структура React REST API приложения + TypeScript + Styled-Components'],['JavaScript *ReactJS *TypeScript *'],"['В этой статье я расскажу о том', ' как можно организовать структуру своего React приложения', ' чтобы работы протекала гораздо легче и навигация по директориям происходила быстрее.']"
['\n      justboris\n    '],['Нарушает ли React DOM-стандарты?'],['Разработка веб-сайтов *JavaScript *ReactJS *'],"['Существует довольно популярный сайт https://custom-elements-everywhere.com где показывается как работают веб-компоненты в разных фреймворках. Почти у всех фреймворков там красивый 100% результат', ' но у React там очень настораживающие 71%.Многие пользователи смотрят на эту страничку и делают вывод', ' что React плохо поддерживает не только веб-компоненты', ' но и DOM API в принципе. Так ли это? Действительно ли все плохо?Давайте разбираться!']"
['\n      ru_vds\n    '],['Простые советы по написанию чистого кода React-компонентов'],['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *Совершенный код *ReactJS *'],"['Автор материала', ' перевод которого мы публикуем сегодня', ' делится советами', ' которые помогают делать чище код React-компонентов и создавать проекты', ' которые масштабируются лучше', ' чем прежде.\n\n']"
['\n      noorsoftprod\n    '],"['Deck.gl', ' Mapbox и React: отображение точек', ' маршрутов и кластеризация на карте']",['ReactJS *'],"['Mapbox является американским поставщиком пользовательских онлайн-карт для веб-сайтов и приложений. С 2010 года он быстро расширил нишу пользовательских карт', ' в ответ на ограниченный выбор', ' предложенный поставщиками карт', ' такими как Google Maps. На данный момент остается достойным продуктом на фоне большого количества конкурентов.\n\n\nОфициальный сайт\n\nDeck.gl это платформа на базе WEB API WebGL для визуального исследовательского анализа больших наборов данных (не только для визуализации географических данных). Создана и поддерживается Uber. Изначально разработана с использованием Mapbox. Также поддерживаются Google Maps', ' но возможности будут ограничены.\n\n\nОфициальный сайт\n\r\nТеперь мы можем переходить к практике', ' которую разделим на несколько пунктов. Напомню', ' что для реализации поставленных задач будем использовать React.\n\r\n1. Отображение карты\n\r\nДля начала нам нужно зарегистироваться на сайте Mapbox и в личном кабинете получить токен. Он понадобится для работы с картами в проекте. ']"
['\n      zhekaal\n    '],"['Кэш или стэйт', ' пробуем React-query']",['Разработка веб-сайтов *JavaScript *ReactJS *TypeScript *'],"[' Популярная библиотека для работы с состоянием веб-приложений\xa0на react-js это redux.\xa0 Однако у нее есть ряд недостатков такие как многословность(даже в связке с redux-toolkit)', ' необходимость выбирать дополнительный слой(redux-thunk', ' redux-saga', ' redux-observable). Возникает ощущение', ' что как-то это все слишком сложно\xa0и уже давно появились хуки и в частности хук useContext.. Так что я попробовал другое решение.']"
['\n      jojo97\n    '],"['Построение надежных веб-приложений на React: Часть 4', ' серверная генерация']",['Разработка веб-сайтов *JavaScript *Node.JS *'],"['Перевод статьи «Building robust web apps with React: Part 4', ' server-side rendering»', ' Matt Hinchliffe\n\r\nОт переводчика: это перевод четвертой части цикла статей «Building robust web apps with React»\r\nПереводы: \n\nПостроение надежных веб-приложений на React: Часть 1', ' браузерные прототипы\nПостроение надежных веб-приложений на React: Часть 2', ' оптимизация с Browserify\nПостроение надежных веб-приложений на React: Часть 3', ' тестирование с Jasmine\nПостроение надежных веб-приложений на React: Часть 4', ' серверная генерация\n\r\nНесколько месяцев назад я написал первую часть этой серии', "" я очень заинтересовался возможностями использования React'а для создания разумных приложений"", ' которые могут избежать слабостей', ' существующих во многих современных JavaScript приложениях. Наконец', ' я собираюсь сделать так', ' чтобы мое приложение запускалось сначала на сервере', ' а потом запускало тот же код в браузере', ' завершая цикл изоморфного или адаптивно-гибридного приложения.\n\r\nВ предыдущей части этой серии я блуждал в поисках стратегии тестирования', ' и эта часть не сильно отличается. И хотя здесь есть примеры и базовые демо изоморфного JavaScript', ' здесь не так много опенсорс реализаций для изучения. В сторону детали реализации', ' для меня', ' самое большое отличие', ' от написания клиентского JavaScript', ' это то', ' что у меня изначально есть данные.\n']"
['\n      iLikeKoffee\n    '],"['Как мы готовим React', ' Require и Backbone']",['Разработка веб-сайтов *JavaScript *ReactJS *'],"['Как следует из официальной документации', ' React.js — V из MVC', ' и', ' как правило', ' вместе с ним применяются другие решения', ' в данном случае — Backbone.js и Require.js. А еще Jasmine', ' Karma и Grunt. Сегодня я поделюсь наброском проекта с применением этих инструментов.\n\nСсылка для нетерпеливых.\n\nХотелки\n\nПрозрачная структура проекта;\nАвтоматизация всей рутинной работы;\nАвтоматизация тестирования;\nМодульность;\nПовторное использования кода;\nПроизводительность.\n\n']"
['\n      xamd\n    '],['Обновление React компонентов с сохранением состояния в режиме реального времени для Browserify'],['Разработка веб-сайтов *JavaScript *Программирование *ReactJS *'],"['\n\r\nВсем доброго времени суток!\r\nДавайте немного поговорим о DX (Developer Experience) или «Опыте разработки»', ' а если конкретнее — об обновлении кода в режиме реального времени с сохранением состояния системы. Если тема для вас в новинку', ' то перед прочтением советую ознакомиться со следующими видео:\n\nРяд видео с обновлением кода в реальном времени без перезагрузки страницы\n\n\n\nВведение: Как это работает?\r\nПрежде всего стоит понимать', ' что реализация подобной функциональности подразумевает под собой решение ряда задач:\r\n — Отслеживание изменений файлов\r\n — Вычисление патча на основании изменений файлов\r\n — Транспортировка патча на клиент (в браузер', ' например)\r\n — Обработка и применение патча к существующему коду\r\nНо обо всём по порядку.\n']"
['\n      XEK\n    '],['Тонкие места в React.js'],['Блог компании Acronis Программирование *ReactJS *'],"['React — это', ' безусловно', ' прорывная технология', ' которая упрощает создание сложных интерфейсов', ' но', ' как у любой абстракции', ' у неё есть свои мелкие проблемки и особенности. Я в своей практике столкнулся с четырьмя не очень очевидными вещами. Багами это назвать сложно — это просто особенности работы библиотеки. О них сегодня и поговорим.\n\n']"
['\n      heathen\n    '],['Клон Trello на Phoenix и React. Части 6-7'],['Разработка веб-сайтов *Программирование *Erlang/OTP *Ruby on Rails *Функциональное программирование *'],"['\n\n\nОглавление (текущий материал выделен)\nВведение и выбор стека технологий\nНачальная настройка проекта Phoenix Framework\nМодель User и JWT-аутентификация\nFront-end для регистрации на React и Redux\nНачальное заполнение базы данных и контроллер для входа в приложение\nАутентификация на front-end на React и Redux\nНастраиваем сокеты и каналы\nВыводим список и создаём новые доски\nДобавляем новых пользователей досок\nОтслеживаем подключённых пользователей досок\nДобавляем списки и карточки\nВыкладываем проект на Heroku\n\nТеперь', ' когда back-end готов обслуживать запросы на аутентификацию', ' давайте перейдём к front-end и посмотрим', ' как создать и отправить эти запросы и как использовать возвращённые данные для того', ' чтобы разрешить пользователю доступ к личным разделам.']"
['\n      comerc\n    '],['React Native — одного JS мало'],['JavaScript *Разработка мобильных приложений *ReactJS *'],"['Итак', ' пришла пора быстро погрузиться в тему. Для усиления эффекта', ' использую разные техники преобразования информации в знания. В частности', ' представляю конспект доклада Алексея Андросова (старшего разработчика интерфейсов', ' Yandex).']"
['\n      lokhmakov\n    '],['Создание npm пакета React компонентов на базе create-react-app'],['JavaScript *Node.JS *ReactJS *'],"['В данной публикации мы рассмотрим', ' как создать npm пакет React компонентов используя create-react-app.']"
['\n      EFS_programm\n    '],['О мобильной библиотеке и любви к React Native'],['Блог компании Сбер JavaScript *Разработка под iOS *Разработка мобильных приложений *ReactJS *'],"['В апреле состоялась конференция для разработчиков мобильных приложений Mobius. На мероприятии Программу «Единая фронтальная система» представляли лидеры команды мобильной разработки Дмитрий Евстратов и Даниил Калинцев (Отдел развития платформы ЕФС АО СберТех) с рассказом о масштабируемом VIP архитектурном дизайне для компонентов с использованием React Native. \r\nДля тех', ' кому интересна мобильная разработка Программы ЕФС', ' кто не присутствовал или не успел пообщаться с ребятами на конференции', ' мы подготовили короткое интервью. В комментариях к нему вы можете задать вопрос спикерам напрямую.\r\n\xa0\n\r\n\xa0']"
['\n      SuperOleg39ru\n    '],"[""Окружение для разработки веб-приложений на TypeScript и React: от 'hello world' до современного SPA. Часть 2""]",['Разработка веб-сайтов *JavaScript *ReactJS *TypeScript *'],"['Цель данной статьи — вместе с читателем написать окружение для разработки современных веб-приложений', ' последовательно добавляя и настраивая необходимые инструменты и библиотеки. По аналогии с многочисленными starter-kit / boilerplate репозиториями', ' но наш', ' собственный.\n\r\nСтатья полностью открыта для доработки и исправления', ' и', ' возможно', ' итоговый материал превратится в актуальный и удобный справочник', ' интересный и для профессионалов', ' и для желающих опробовать новые для них технологии.\n\n']"
['\n      fire-111\n    '],['Первый взгляд на react-native'],['Разработка под iOS *Разработка мобильных приложений *Разработка под Android *ReactJS *'],"['Если вы фронтенд разработчик', ' да еще и с опытом работы react + redux', ' то вам определенно стоит обратить внимание на такой интересный инструмент как react-native. Он позволяет разрабатывать кроссплатформенные приложения под ios и android. React-native находится в стадии активного развития и выпускает обновления каждый месяц.\n']"
['\n      m512781\n    '],"['Знакомьтесь: «все и сразу»', ' React Boilerplate от Maximilian Stoiber v3.6.0']",['JavaScript *Программирование *Node.JS *ReactJS *'],"['Сборка react-boilerplate совсем недавно', ' 26.06.2018', ' была обновлена до версии 3.6.0. Этой сборке уже более трех лет', ' но', ' заметно выделяясь на фоне множества других (более 18 тыс. Stars GitHub)', ' она практически никак не была замечена на Хабре. В чем же ее особенность? Если кратко — сборка предлагает разработчику «все и сразу»!']"
['\n      Vladimirov_Vladimir\n    '],['Приручить зверя. С чем мы столкнулись при разработке приложения для ведения личного дневника на React Native'],['Open source *JavaScript *Разработка мобильных приложений *Разработка под Android *ReactJS *'],"['В предыдущей статье я подробно рассказал о нашем опыте создания веб-сервиса/мобильного приложения для ведения личного дневника. Актуальная версия приложения (минимальная работоспособная версия уже выложена в Google Play) разрабатывается на React Native', ' и вот на нем мы и остановимся подробно сегодня. \n\r\nРассказываем о собственном опыте работы с фреймворком', ' способах расширения функционала', ' «подводных камнях» (куда ж без них!) и как мы их обошли.\n\nО фреймворке в целом\r\nНемного о виновнике торжества — React Native. Он все-таки хорош!\n\r\nДля тех', ' кто в достаточной степени знает JavaScript и тем более NodeJS — он очень хорош. Если же есть опыт с React', ' ну или хотя бы есть понимание ее идеи', ' механизма — он просто великолепен!\n\r\nГлавное', ' что на выходе получается действительно нативное приложение. Расширения и плагины покрывают практически 99% типовых задач. Оставшийся процент при острой необходимости можно дописать на родных языках (java', ' object-c) и подключить к React Native приложению. \n\r\nНо хватит про плюсы', ' от них толку ноль', ' хоть список и будет внушительным. Все плюшки и вкусности бессмысленны', ' если приложение не запускается', ' а это первое чем нас «порадовал» React Native. \n\r\nСначала ему не понравилась версия NodeJS. Потом версия npm. Потом версия Android SDK', ' потом версия Android tools', ' потом… Писать про то', ' как все проблемы решились', ' смысла нет', ' ибо с того момента все вышеперечисленное ПО обновило свои версии и инструкции будут неактуальны. \n\r\nПросто знайте: узкое место React Native — среда сборки. Будьте готовы к штудированию google', ' чтению форумов и stackoverflow. На развертывание в итоге потратили: Ubuntu — 3 дня', ' Win10 — 2 дня. Как ни странно', ' на «винде» все оказалось проще', ' ну', ' или просто на ubuntu «шишек набили» и уже понимали', ' что и куда подсовывать.\n\r\nНа заметку', ' вдруг кому пригодится: код', ' представленный ниже', ' решил все проблемы с совместимостью версий sdk у дополнений при компиляции проекта. ']"
['\n      kashey\n    '],['React и Code Splitting'],['JavaScript *ReactJS *'],"['С code splitting я познакомился очень давно', ' в году так 2008', ' когда Яндекс немного подвис', ' и скрипты Яндекс.Директа', ' синхронно подключенные на сайте', ' просто этот сайт убили. Вообще в те времена было нормой', ' если ваши ""скрипты"" это 10 файлов которые вы подключаете в единственно правильном порядке', ' что и до сих пор (с defer) работает просто на ура.\r\nПотом я начал активно работать с картами', ' а они до сих пор подключаются как внешние скрипты', ' конечно же lazy-load. Потом уже', ' как член команды Яндекс.Карт', ' я активно использовал ymodules возможность tree-shaking на клиенте', ' что обеспечивало просто идеальный code splitting.\nА потом я переметнулся в webpack и React', ' в страну непуганных идиотов', ' которые смотрели на require.ensure как баран на новые ворота', ' да и до сих пор так делают.\nCode splitting — это не ""вау-фича""', ' это ""маст хэв"". Еще бы SSR не мешался...\n']"
['\n      ru_vds\n    '],"['Учебный курс по React', ' часть 23: первое занятие по работе с формами']",['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['В этой части перевода учебного курса по React мы поговорим о работе с формами. В частности', ' сегодняшнее занятие посвящено организации взаимодействия компонентов и текстовых полей.\n\n\n\r\n→ Часть 1: обзор курса', ' причины популярности React', ' ReactDOM и JSX\r\n→ Часть 2: функциональные компоненты\r\n→ Часть 3: файлы компонентов', ' структура проектов\r\n→ Часть 4: родительские и дочерние компоненты\r\n→ Часть 5: начало работы над TODO-приложением', ' основы стилизации\r\n→ Часть 6: о некоторых особенностях курса', ' JSX и JavaScript\r\n→ Часть 7: встроенные стили\r\n→ Часть 8: продолжение работы над TODO-приложением', ' знакомство со свойствами компонентов\r\n→ Часть 9: свойства компонентов\r\n→ Часть 10: практикум по работе со свойствами компонентов и стилизации\r\n→ Часть 11: динамическое формирование разметки и метод массивов map\r\n→ Часть 12: практикум', ' третий этап работы над TODO-приложением\r\n→ Часть 13: компоненты', ' основанные на классах\r\n→ Часть 14: практикум по компонентам', ' основанным на классах', ' состояние компонентов\r\n→ Часть 15: практикумы по работе с состоянием компонентов\r\n→ Часть 16: четвёртый этап работы над TODO-приложением', ' обработка событий\r\n→ Часть 17: пятый этап работы над TODO-приложением', ' модификация состояния компонентов\r\n→ Часть 18: шестой этап работы над TODO-приложением\r\n→ Часть 19: методы жизненного цикла компонентов\r\n→ Часть 20: первое занятие по условному рендерингу\r\n→ Часть 21: второе занятие и практикум по условному рендерингу\r\n→ Часть 22: седьмой этап работы над TODO-приложением', ' загрузка данных из внешних источников\r\n→ Часть 23: первое занятие по работе с формами\r\n→ Часть 24: второе занятие по работе с формами\r\n→ Часть 25: практикум по работе с формами\r\n→ Часть 26: архитектура приложений', ' паттерн Container/Component\r\n→ Часть 27: курсовой проект']"
['\n      ru_vds\n    '],"['Детальный разбор новых возможностей React 16+', ' часть 1: общие сведения']",['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['Сегодня мы представляем вам первую часть перевода этого большого материала. Он посвящён детальному разбору новых возможностей React', ' которые появились в этой библиотеке начиная с версии 16. Автор этого материала уже 5 лет занимается программированием. В прошлом он был дизайнером и пробовал себя в качестве иллюстратора. Он включил в статью комиксы', ' которые', ' по его мнению', ' помогут читателям лучше усвоить то', ' о чём тут идёт речь.\n\r\nВ оригинале эта статья называется «Reintroducing React: every React update since v16 demystified». Название намекает на то', ' что читателю', ' возможно', ' уже знакомому с React', ' предлагается снова познакомиться с этой библиотекой. Это повторное знакомство с React поможет ему упорядочить то', ' что он уже знает', ' и открыть для себя что-то новое.']"
['\n      AlexanderShutov\n    '],['Зачем писать свой React Data Grid в 2019'],['Разработка веб-сайтов *JavaScript *ReactJS *'],"['Привет', ' Хабр! Я участвую в разработке ECM системы. И в небольшом цикле статей хочу поделится нашим опытом и историей разработки своего React Data Grid (далее просто грид)', ' а именно:\n\nпочему мы отказались от готовых компонент\nс какими проблемами и задачами мы столкнули при разработке своего грида\nкакой профит дает разработка своего грида\n\nПредыстория\nУ нашей системы есть веб-приложение', ' в котором пользователи работают со списками документов', ' результатами поисков', ' справочниками. Причем', ' списки могут быть как маленькие (10 сотрудников)', ' так и очень большие (50 000 контрагентов). Для отображения этих списков мы разработали свой грид:\n']"
['\n      Leopardius\n    '],['Typescript и react'],['Разработка веб-сайтов *'],"['Разработка на javascript иногда становится похожа на работу детектива. Как понять чужой код? Хорошо', ' если разработчик обладает тонким искусством называть переменные так', ' чтобы другие поняли суть. А как быть', ' если члены команды все таки не всегда способны понять замысел своего коллеги? Как понять', ' что приходит в аргумент какой-либо функции? \nПредположим', ' что аргумент функции называется errors. Вероятно в errors находится массив. Скорее всего строк? Ну то', ' что массив это понятно. Ведь далее проверяется его длина. Но свойство length есть и у строки. Похоже', ' чтобы точно разобраться', ' необходимо поставить breakpoint и запустить скрипт. Затем полностью пройти по сценарию на UI (например нам нужен финальный шаг формы). Теперь в devtools видно', ' что errors — это объект с набором определенных полей', ' среди которых и поле length.\nПодобная неоднозначность при разборе javascript кода приводит к пустой трате времени разработчика. Неплохим решением в данном случае может стать typescript (далее ts). Можно использовать его в следующем проекте', ' а еще лучше сделать поддержку ts в существующем. После этого время на понимание чужого кода сократится значительно. Ведь', ' чтобы понять структуру любых данных достаточно одного клика. Можно сконцентрироваться на логике работы с данными и в любой момент времени знать', ' что вы однозначно понимаете работу кода.']"
['\n      KhodeN\n    '],['Революция или боль? Доклад Яндекса о\xa0React Hooks'],['Блог компании Яндекс Разработка веб-сайтов *Интерфейсы *ReactJS *'],"['Меня зовут Артём Березин', ' я разработчик нескольких внутренних сервисов Яндекса. Последние полгода я активно работал с React Hooks. По ходу дела возникали некоторые сложности', ' с которыми приходилось бороться. Теперь хочу поделиться этим опытом с вами. В докладе я разобрал React Hook API с практической точки зрения — зачем нужны хуки', ' стоит ли переходить', ' что лучше учитывать при портировании. В процессе перехода легко наделать ошибок', ' но избежать их тоже не так сложно.\n\n\n\r\n— Хуки — это просто еще один способ описывать логику ваших компонентов. Он позволяет добавить к функциональным компонентам некоторые возможности', ' ранее присущие только компонентам на классах. \n']"
['\n      greebn9k\n    '],['Современное окружение для React Native приложений'],['Программирование *Разработка мобильных приложений *ReactJS *Управление разработкой *TypeScript *'],"['В этой статье мы рассмотрим настройку React Native окружения с использованием expo-cli', ' Typescript', ' и Jest.\n\nTypescript поможет нам избежать ошибок при разработке и написать более эффективное мобильное приложение.\n\r\nСовременные разработки позволяют интегрировать Typescript в окружение разработки. Так же мы можем использовать VS Code', ' который отлично поддерживает Typescript.\n\r\nТакже интеграция с React Native даст нам возможность использовать сервис автодополнения', ' навигацию по коду и рефакторинг.\n\nExpo — это набор инструментов', ' которые упрощают создание нативных React приложений. В этом уроке я собираюсь показать вам', ' как вы можете быстро создавать нативные React приложения', ' используя Expo.\n\n']"
['\n      MaxRokatansky\n    '],['Рекомендации по созданию приложений на React Native. Часть 1'],['Блог компании OTUS JavaScript *Программирование *ReactJS *'],"['Добрый день', ' хабровчане. Сегодня делимся с вами переводом статьи', ' перевод которой был подготовлен специально для первого запуска курса «ReactJS/React Native-разработчик». Приятного прочтения.\n\n\n\n\r\nЕсли вы новичок в мире React Native', ' то вы знаете', ' что в нем есть некоторые подводные камни', ' которых вам хотелось бы избежать. В некоторых случаях вам придется делать выбор наперед', ' не имея ни малейшего понятия', ' как и на что он повлияет.\n\r\nНиже я составил список лучших практических советов из своего личного опыта', ' которые', ' надеюсь', ' окажутся для вас полезными :)']"
['\n      ru_vds\n    '],"['Три типовых ошибки в сфере безопасности', ' о которых должен знать каждый React-разработчик']",['Блог компании RUVDS.com Информационная безопасность *Разработка веб-сайтов *JavaScript *ReactJS *'],"['Автор статьи', ' перевод которой мы сегодня публикуем', ' говорит', ' что React — это её любимая библиотека для создания интерактивных интерфейсов. React одновременно и лёгок в использовании', ' и достаточно хорошо защищён. Однако это не значит', ' что React-приложения совершенно неуязвимы. Очень легко впасть в неоправданное спокойствие', ' решив', ' что о XSS-атаках можно не волноваться из-за того', ' что в проекте используется React.\n\r\nУязвимости React чаще всего проявляются тогда', ' когда разработчик думает', ' что он использует защитные механизмы этой библиотеки', ' хотя на самом деле оказывается', ' что это не так. Поэтому важно правильно оценивать возможности React', ' и знать о том', ' какие задачи программисту нужно решать своими силами.\n\n\n\r\nСегодня мы поговорим о типичных уязвимостях React', ' о том', ' как находить их во время код-ревью', ' и о том', ' как от них защищаться.']"
['\n      skoni\n    '],['Антипаттерны в React или вредные советы новичкам'],['ReactJS *'],"['Привет', ' Хабр.\n\r\nРовно год прошел с момента', ' как я начал изучать React. За это время я успел выпустить несколько небольших мобильных приложений', ' написанных на React Native', ' и поучаствовать в разработке web-приложения с использованием ReactJS. Подводя итог и оглядываясь назад на все те грабли', ' на которые я успел наступить', ' у меня родилась идея выразить свой опыт в виде статьи. Оговорюсь', ' что до начала изучения реакта', ' у меня имелось 3 года опыта разработки на c++', ' python', ' а также мнение', ' что во фронтенд разработке нет ничего сложного и разобраться во всем мне не составит труда. Поэтому в первые месяцы я пренебрегал чтением обучающей литературы и в основном просто гуглил готовые примеры кода. Соответственно', ' примерный разработчик', ' который первым делом изучает документацию', ' скорее всего', ' не найдет для себя здесь ничего нового', ' но я все-таки считаю', ' что довольно много людей при изучении новой технологии предпочитают путь от практики к теории. Так что если данная статья убережет кого-то от граблей', ' то я старался не зря.']"
['\n      yantishko\n    '],['Server Side Rendering для React App на Express.js'],['Разработка веб-сайтов *JavaScript *HTML *Node.JS *ReactJS *'],"['На написание этой статьи меня сподвигло отсутствие какого-либо более-менее полного мануала', ' как же сделать Server Side Rendering для React приложения.\n\r\nКогда я столкнулся с этой проблемой', ' у меня было 2 варианта это сделать', ' либо Next.js фреймворк', ' либо используя Express.js.\n\r\nНа инвестигейт Next.js было потрачено около 100 часов', ' чтоб завести его для нашей готовой крупной OTT платформы', ' но проблем было настолько много', ' что мы от него отказались (по этому поводу напишу статью еще)', ' остался выбор за малым', ' Express.js', ' про который я и хочу рассказать.\n\r\nПолный код демо-примера', ' рассматриваемого в статье', ' тут.']"
['\n      yalatan\n    '],['React или Angular или Vue.js — что выбрать?'],['Разработка веб-сайтов *'],"['Фреймворки JavaScript развиваются очень быстрыми темпами', ' и это означает', ' что сегодня мы часто обновляем версии Angular', ' React и еще одного игрока на этом рынке — Vue.js.\n\r\nМы решили поделиться основными преимуществами и недостатками каждого фреймворка и помочь разработчикам выбрать лучший вариант для использования.\n\nПлюсы и минусы Angular\r\nAngular — это супергероическая среда JavaScript MVVM', ' основанная в 2009 году', ' которая отлично подходит для создания интерактивных веб-приложений.\n\nПреимущества Angular:\n\n\n Angular используется вместе с Typescript. Он имеет исключительную поддержку для этого.\nAngular-language-service — обеспечивает интеллектуальные возможности и автозаполнение шаблона HTML-компонента. \n\n']"
['\n      ru_vds\n    '],['10 React-компонентов на все случаи жизни'],['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['Я полагаю', ' что для решения различных задач React-разработки лучше использовать маленькие узкоспециализированные инструменты', ' а не универсальные решения', ' предлагаемые библиотеками компонентов. Мне нравится выбирать компоненты самостоятельно', ' я не люблю читать длинную документацию', ' и мне хочется избежать бессмысленных обновлений библиотек', ' после которых в проекте нередко что-то ломается.\n\n\n\r\nНекая фронтенд-библиотека способна дать разработчику единообразное оформление компонентов', ' что крайне важно. Но может оказаться так', ' что в проекте', ' в котором планируется использовать такую библиотеку', ' уже есть собственная дизайн-система', ' или собственная UI-библиотека. В такой ситуации разработчик ищет не новую библиотеку', ' а лишь настраиваемые компоненты', ' подходящие для многократного использования и ускоряющие работу. В подобном случае больше смысла я вижу в поиске отдельного компонента', ' а не целой библиотеки', ' которая содержит', ' вместе с тем', ' что очень нужно разработчику', ' много такого', ' что ему совершенно ни к чему.\n\r\nМатериал', ' перевод которого мы сегодня публикуем', ' посвящён рассказу о 10 React-компонентах.']"
['\n      666granik\n    '],['Адаптивный или отзывчивый? Разбираем структуру React-компонентов'],['Блог компании Юла Интерфейсы *ReactJS *'],"['\n\r\nВ этой статье мы разберёмся', ' в чем сложность написания адаптивных компонентов', ' поговорим о code-splitting-е', ' рассмотрим несколько способов организации структуры кода', ' оценим их достоинства и недостатки и попытаемся выбрать лучший из них (но это не точно).']"
['\n      RrrredHead\n    '],['3D-аркада в браузере: как мы сделали игру на React + Redux'],['Блог компании 2ГИС JavaScript *Разработка игр *ReactJS *'],"['Привет', ' Хабр! В не такие уж далёкие годы', ' на первом курсе «программистского» факультета', ' мне нравилось задавать товарищам по учёбе вопрос: «Зачем вы вообще пошли сюда учиться?» Точной статистики ответов я', ' конечно', ' не вёл', ' но доподлинно помню: больше половины хотели делать игры. Большинство тех', ' кто так отвечал', ' оказались не готовы к обилию разных видов «математик» и «физик»', ' которыми нас завалили в первые два года учёбы. Выдерживали не все — уже к концу второго курса из пяти переполненных групп осталось три неполных.\nНе так давно нашей фронтенд-команде предоставилась возможность попробовать себя в роли gamedev. Очень коротко', ' задача такая: сделать самую настоящую 3D-игру', ' да так', ' чтобы можно было поиграть', ' просто открыв браузер. Даже мобильный. Даже в WebView.\n\nВ этом посте я постараюсь рассказать о том', ' как мы спроектировали архитектуру игры', ' с какими проблемами столкнулись', ' используя один из самых популярных и актуальных технологических стеков — React + Redux', ' и какими «хорошими практиками»', ' вероятнее всего', ' придётся пожертвовать', ' если вы для схожих задач выберете этот же стек.']"
['\n      Elliot_001\n    '],['Введение в Redux & React-redux'],['JavaScript *ReactJS *'],"['\n\nОглавление\nВведение\n1. Установка и начало работы\n2. Redux\r\n....2.1 createStore\r\n....2.2 reducer()\r\n....2.3 dispatch()\r\n....2.4 actionCreator()\r\n....2.5 Actions\r\n....2.6 getState()\r\n....2.7 subscribe()\r\n....2.8 combineReducers()\r\n....2.9 initialState\n3. React-redux\r\n....3.1 Provider\r\n....3.2 mapStateToProps()\r\n....3.3 mapDispatchToProps()\r\n....3.4 connect()\n\nВведение\r\nВот вы прочитали мою статью про React (если нет', ' то настоятельно рекомендую вам сделать это) и начали разрабатывать приложения на нём. Но что это? Вы замечаете', ' как с расширением вашего приложения становится всё сложнее следить за текущим состоянием', ' сложно следить за тем', ' когда и какие компоненты рендарятся', ' когда они не рендарятся и почему они не рендарятся', ' сложно следить за потоком изменяющихся данных. Для этого и есть библиотека Redux. Сам React хоть и лёгкий', ' но для комфортной разработки на нем нужно много чего изучить.']"
['\n      atomicDaddy\n    '],['Разработка корпоративной библиотеки React компонентов. Кросс-платформенный подход'],['Блог компании Luxoft JavaScript *ReactJS *'],"['В данной статье повествуется история успешного внедрения дизайн-системы в компании одного из крупнейших DIY-ритейлеров. Описываются принципы и подходы кросс-платформенной разработки UI компонентов с использованием библиотек React и React Native', ' а также решение задачи переиспользования кода между проектами для разных платформ.']"
['\n      ru_vds\n    '],['Переработка архитектуры React Native в 2020 году'],['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['Фреймворк React Native (RN) появился в 2015 году. Он предназначен для разработки кросс-платформенных мобильных приложений с использованием библиотеки React. Эти приложения поддерживают нативные возможности платформ', ' для которых их создают. У исходной архитектуры React Native были определённые недостатки. Но', ' несмотря на это', ' RN получил хорошую поддержку сообщества', ' его популярность постепенно росла', ' не в последнюю очередь — благодаря громкой репутации React.\n\n\n\r\nО проекте по перепроектированию архитектуры React Native заговорили в 2018 году. Этой работой занимается команда Facebook. Цель перепроектирования заключается в том', ' чтобы сделать фреймворк более стабильным', ' и в том', ' чтобы решить наиболее распространённые проблемы', ' накопившиеся в RN за годы разработки. Материал', ' перевод которого мы сегодня публикуем', ' посвящён рассмотрению того', ' как переработка архитектуры RN способна улучшить производительность приложений и скорость работы программистов.']"
['\n      raoffonom\n    '],['React Native: Push-уведомления с помощью AWS Amplify'],['Разработка мобильных приложений *Amazon Web Services *ReactJS *'],"['\nPush-уведомления играют важную роль в любом приложении. Это может значительно увеличить взаимодействие с пользователями.\nНастройка push-уведомлений с нуля может быть немного сложной. К счастью', ' Amplify предоставляет услуги push-уведомлений и SDK для React Native приложений. В этом уроке мы узнаем', ' как интегрировать в наше приложение этот сервис.']"
['\n      ru_vds\n    '],['Организация разработки крупномасштабных React-приложений'],['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['Эта публикация основана на серии материалов о модернизации jQuery-фронтенда с использованием React. Для того чтобы лучше разобраться в причинах', ' по которым написан этот материал', ' рекомендуется взглянуть на первый материал этой серии.\n\n\n\r\nВ наши дни очень легко организовать разработку маленького React-приложения', ' или начать работу над ним с нуля. В особенности — при использовании create-react-app. Некоторым проектам', ' скорее всего', ' понадобится лишь несколько зависимостей (например — для управления состоянием приложения и для интернационализации проекта) и папка src', ' в которой', ' как минимум', ' имеется директория components. Я полагаю', ' что именно с такой структуры начинается работа над большинством React-проектов. Обычно', ' правда', ' по мере того', ' как растёт количество зависимостей проекта', ' программисты сталкиваются с ростом количества компонентов', ' редьюсеров и других входящих в его состав механизмов', ' предназначенных для многократного использования. Иногда всем этим становится очень неудобно и сложно управлять. Что делать', ' например', ' если больше неясно то', ' почему нужны некоторые зависимости', ' и то', ' как они сочетаются друг с другом? Или', ' как быть', ' если в проекте накопилось так много компонентов', ' что становится сложно найти среди них именно тот', ' который нужен? Как поступить в том случае', ' если программисту нужно найти некий компонент', ' имя которого забыто?']"
['\n      dzigoro\n    '],"['10 вещей', ' о которых нужно помнить при переходе с React на React Native']",['Блог компании EPAM Разработка мобильных приложений *ReactJS *'],"['Сегодня веб-разработчики проявляют большой интерес к мобильной разработке', ' иногда не представляя', ' что это совершенно иной мир. Однако работать с React-Native разработчикам React немного проще', ' но с некоторыми оговорками. В этом посте я расскажу', ' с чем мобильные разработчики могут столкнуться в «путешествии» от React к React Native. \n\n']"
['\n      Wint95r\n    '],['Как перенести на TypeScript большую кодовую базу React UI-компонентов'],['Блог компании Badoo JavaScript *Интерфейсы *Управление разработкой *TypeScript *'],"['Привет! Меня зовут Иван Греков', ' я работаю UI-разработчиком в frontend-команде Badoo. Главные задачи нашей команды — создание новых и поддержка существующих пользовательских интерфейсов для сайтов и приложений Badoo и Bumble.\xa0Когда в конце 2019 года мы начали параллельно работать над несколькими проектами', ' мы задумались над повышением стабильности кода и возможностью его многократного использования. Для этого мы решили переписать наши 630 React UI-компонентов на TypeScript. Я расскажу о том', ' как мы работали над ними без перерыва в доставке фич и как организовали поэтапный переход на TypeScript для UI-разработчиков', ' которым этот язык был в новинку.']"
['\n      Hasselhoff\n    '],['Как превратить Google-таблицы в REST API и использовать их с React-приложением'],['Блог компании SkillFactory Разработка веб-сайтов *JavaScript *Лайфхаки для гиков '],"['Взаимодействовать с API никогда не было просто. Но использовали ли вы когда-нибудь React для отправки формы в Google-таблицы? Если нет', ' то этот туториал для вас.Сегодня мы поговорим о том', ' как отправлять данные формы из React в Google-таблицы', ' так же как вы отправляете данные с помощью REST API.']"
['\n      ru_vds\n    '],"['5 React-хуков', ' которые пригодятся в любом проекте']",['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['Хочу рассказать о пяти простых React-хуках', ' которые пригодятся в любом проекте. Причём', ' полезность этих хуков не зависит от того', ' в каком именно приложении их будут использовать. Описывая каждый из них', ' я рассказываю о его реализации и привожу пример его использования в клиентском коде.\n\n']"
['\n      gena1977\n    '],['Почему мы должны выбросить React и взяться за Angular'],['Angular *ReactJS *TypeScript *'],"['Итак', ' я уже немного написал о том', ' почему', ' как мне кажется', ' мы должны перестать использовать React. Чтобы подвести итог этой статьи', ' я перечислю несколько проблем', ' с которыми я столкнулся в React...']"
['\n      ananas1357\n    '],"['World of React Native. Уже можно играть! Геймплей', ' обзор']",['Блог компании ЮMoney ReactJS *'],"['Привет! Я Илья', ' фронтенд-разработчик. Я приоткрою мир разработки на React Native', ' а тем', ' кто с ним знаком', ' расскажу о встреченных болях. Статья поможет вам', ' если вы смотрите на этот фреймворк и если вы уже начали с ним работать.В начале 2020 года в ЮMoney мы решили создать продукт для расчетно-кассового обслуживания. Одним из требований бизнеса было запустить мобильное приложение. Это самый удобный путь обслуживания счетов. Мы рассматривали два варианта: задействовать отдел мобильной разработки или воспользоваться новыми технологиями', ' которые позволяют фронтендерам самостоятельно создавать приложения', ' используя JavaScript.Почему мы выбрали React Native?']"
['\n      grigoryvp\n    '],['Как у нас получился нативный модуль к React Native'],['Блог компании Voximplant Разработка веб-сайтов *Разработка под iOS *Разработка мобильных приложений *ReactJS *'],"['Если вы еще не знакомы с ReactJS или React Native', ' то очень рекомендуем ознакомиться', ' эти фреймворки уже сейчас оказывают значительное влияние на то', ' куда движется мир разработки мобильных и веб-приложений. Наша же статья о том', ' как дать возможность веб-разработчику делать приложения для iOS с аудио/видео звонками и другими прелестями платформы voximplant. Создание нативных модулей для React Native — это настолько обширная тема', ' что про нее можно писать бесконечно и материалов про нее в сети пока еще катастрофически мало. Мы при создании модуля опирались на ряд готовых примеров с github', ' которые очень помогли не закопаться с этим на века.\n\n']"
['\n      kambur\n    '],"['Изучение React — для чего', ' откуда', ' как?']",['Разработка веб-сайтов *JavaScript *Программирование *ReactJS *'],"['С чего начать изучение новой библиотеки или фрейморка? Сразу же найти статью на Хабре и с головой погрузиться в пучину практических примеров? Или сначала тщательно изучить официальную и неофициальную документацию', ' прежде чем перейти к практике? Именно между этими вопросами будет метаться ваше сознание', ' когда вы решите узнать', ' что же такое ReactJS. Чтобы желание учиться не умерло', ' как знаменитый ослик', ' обязательно загляните под капот.\n']"
['\n      Plarium\n    '],['5 достойных изучения проектов с открытым исходным кодом на React Native'],['Блог компании Plarium Программирование *Разработка под iOS *Разработка мобильных приложений *ReactJS *'],"['Изучение открытого исходного кода – это лучший способ научиться писать качественный код', ' особенно если речь идет о новом инструменте с не полностью сформировавшимися стандартами. Одним из таких инструментов является React Native. Он постоянно дорабатывается', ' функциональность его API расширяется с каждым релизом', ' а количество библиотек растет. В то же время большинство обучающих ресурсов по работе с React Native очень поверхностны и не идут дальше вступительных рекомендаций. Но даже несмотря на это', ' изучение исходного кода должно быть нормой для каждого разработчика. \n\r\nЯ хочу представить 5 проектов с открытым исходным кодом', ' которые я изучаю сам и советую остальным.\n\n']"
['\n      heathen\n    '],['Клон Trello на Phoenix и React. Части 4-5'],['Разработка веб-сайтов *Программирование *Erlang/OTP *Ruby on Rails *Функциональное программирование *'],"['\n\nОглавление (текущий материал выделен)\nВведение и выбор стека технологий\nНачальная настройка проекта Phoenix Framework\nМодель User и JWT-аутентификация\nFront-end для регистрации на React и Redux\nНачальное заполнение базы данных и контроллер для входа в приложение\nАутентификация на front-end на React и Redux\nНастраиваем сокеты и каналы\nВыводим список и создаём новые доски\nДобавляем новых пользователей досок\nОтслеживаем подключённых пользователей досок\nДобавляем списки и карточки\nВыкладываем проект на Heroku\n\n\nFront-end для регистрации на React и Redux\nОригинал\nПредыдущую публикацию мы закончили созданием модели User с проверкой корректности и необходимыми для генерации зашифрованного пароля трансформациями набора изменений (changeset); так же мы обновили файл маршрутизатора и создали контроллер RegistrationController', ' который обрабатывает запрос на создание нового пользователя и возвращает данные пользователя и его jwt-токен для аутентификации будущих запросов в формате JSON. Теперь двинемся дальше — к front-end.']"
['\n      bsideup\n    '],['RxConnect — когда React встречает RxJS'],['JavaScript *ReactJS *'],"['Данный перевод является русскоязычной интерпретацией документации', ' которую я сам и написал', ' поэтому не стесняйтесь задавать вопросы.\nВведение\nОбрабатывать пользовательский ввод может быть не так просто', ' как кажется. Мы же не хотим отправлять запросы на сервер пока пользователь всё ещё набирает свой запрос? И', ' конечно же', ' пользователь должен всегда видеть результат на последний запрос', ' который он отослал. \nСуществуют разные способы реагирования на интерактивные события в React приложениях', ' и', ' по моему мнению', ' реактивный подход (благодаря таким библиотекам', ' как RxJS или Bacon) — один из самых лучших. Вот только для того', ' чтобы использовать RxJS и React одновременно', ' Вам придётся иметь дело с жизненным циклом React компонента', ' вручную управлять подписками на потоки и так далее. Хорошая новость — всё это можно делать автоматически с помощью RxConnect — библиотеки', ' разработанной в процессе миграции с Angular на React в ZeroTurnaround.\n']"
['\n      BoryaMogila\n    '],['Универсальный (Изоморфный) проект на Koa 2.x + React + Redux + React-Router'],['JavaScript *Node.JS *ReactJS *'],"['\n\r\nСейчас много споров по поводу универсального (изоморфного) кода', ' есть свои за и против.\r\nЯ считаю', ' что за универсальным (изоморфним) кодом будущее', ' так как он позволяет взять лучшее с серверного и клиентского рендеринга.\n']"
['\n      sochix\n    '],['Так ли хорош React Native?'],['Разработка под iOS *Разработка мобильных приложений *Разработка под Android *'],"[' React Native довольно новая технология которая с первого взгляда кажется серебряной пулей для многих начинающих разработчиков. В статье я хочу развеять этот миф и рассказать что же именно не так с React Native и почему стоит подождать прежде чем его использовать.\n\r\nИ так по порядку', ' я Full-stack разработчик. Использую последний стандарт javascript на фронетнде и бэкенде. Опыта разработки мобильных приложений нет', ' но есть 5 лет опыта разработки высоконагруженных проектов на node.js', ' asp.net mvc. Опробовать React Native я решил при создании простого мобильного приложения — клиента LessPass для Android. \n']"
['\n      Simipa\n    '],['React Native с колокольни Android-разработки часть 1'],['Разработка под Android *ReactJS *'],"['На хабре есть множество статей про react native', ' но я не могу понять кем и для кого они написаны. Почти все имеют такой посыл: «Ну', ' это такой же React как в вебе', ' только на мобилках». А вот люди', ' которые занимаются нативной разработкой под мобильные устройства в пролете', ' ведь разобраться в реакте после Android без двух литров без глубокого изучения никак не получится. А я расскажу за реакт опираясь', ' внезапно', ' не на веб разработку', ' а на Android. Всем заинтересованным добро пожаловать под кат.']"
['\n      Carduelis\n    '],['Почему я перешел с React на Cycle.js'],['JavaScript *ReactJS *'],"['\nНетрудно догадаться', ' что большинство разработчиков сейчас используют какие-либо фреймворки для разработки приложений. Они помогают нам структурировать сложные приложения и экономят время. Каждый день можно наблюдать большое количество обсуждений', ' какой фреймворк лучше', ' какой нужно учить', ' и тому подобное. Так что', ' в этот раз я поделюсь своим опытом и отвечу на вопрос: «Почему я перешел на Cycle.js с React?».\nReact', ' возможно', ' самый популярный frontend-фреймворк (на момент 2017) с огромным сообществом. Я большой фанат этого фреймворка и он мне помог изменить взгляд на веб-приложения и их разработку. Некоторые любят его', ' а кто-то считает', ' что он не так хорош.\nБольшинство использует React без мысли о том', ' что есть лучший инструмент или способ разработки веб-приложений. Это дало мне толчок попробовать Cycle.js', ' как новый реактивный фреймворк', ' который становится все более и более популярным изо дня в день.\r\nИ в этой статье я хочу объяснить:\n\n\nЧто такое реактивное программирование\nКак работает Cycle.js\nИ почему он', ' на мой взгляд', ' лучше React\n']"
['\n      ru_vds\n    '],"['React', ' встроенные функции и производительность']",['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['Когда мне приходится рассказывать о React', ' или когда я даю первую лекцию учебного курса', ' показывая всякие интересные вещи', ' кто-нибудь непременно спросит: «Встроенные функции? Слышал', ' они медленные».\n\n\n\r\nЭтот вопрос появлялся далеко не всегда', ' но в последние несколько месяцев мне', ' в роли автора библиотеки и преподавателя', ' приходится отвечать на него чуть ли не каждый день', ' иногда — на лекциях', ' иногда — в твиттере. Честно говоря', ' я от этого уже устал. К сожалению', ' я не сразу сообразил', ' что лучше изложить всё в виде статьи', ' которая', ' надеюсь', ' окажется полезной для тех', ' кто задаётся вопросами производительности. Собственно говоря — перед вами плод моих трудов.']"
['\n      dzigoro\n    '],['Как использовать все возможности мобильной ОС в React Native'],['Блог компании EPAM Разработка мобильных приложений *'],"['На рынке есть несколько кроссплатформенных решений: Cordova', ' Xamarin', ' React Native и другие', ' менее известные. Многие мобильные разработчики считают', ' что кроссплатформенные решения никогда не позволят делать то', ' что могут нативные приложения. \nВ статье я развенчаю этот миф и расскажу о механизме в React Native', ' который позволяет сделать все', ' на что способно нативное приложение. Этот механизм – нативные модули. Под катом – подробное описание', ' как создавать нативные модули для Android и iOS.\n']"
['\n      ru_vds\n    '],['Шаблоны проектирования в React'],['Блог компании RUVDS.com Разработка веб-сайтов *ReactJS *'],"['Шаблоны проектирования', ' которые возникли и развились в экосистеме React за время её существования', ' улучшают читабельность и чистоту кода', ' облегчают повторное использование компонентов.\n\r\nАвтор этого материала говорит', ' что начал работать с React около трёх лет назад. В то время ещё не было устоявшихся практик', ' изучая которые и следуя которым можно было бы улучшить качество своих разработок.\n\r\nСообществу React понадобилось около двух лет для того', ' чтобы выработать несколько идей', ' которые теперь стали популярными. Тут можно отметить переход с React.createClass к классам ES6 и к чистым функциональным компонентам', ' отказ от миксинов и упрощение API. Теперь', ' учитывая то', ' что число React-разработчиков постоянно растёт', ' то', ' что в развитие этого проекта вкладываются серьёзные силы', ' можно наблюдать эволюцию нескольких интересных шаблонов проектирования. Этим шаблонам и посвящён данный материал. ']"
['\n      maxfarseer\n    '],['Вышел React v.16.3.0'],['JavaScript *ReactJS *'],"['Несколько дней назад', ' мы написали пост о приближающихся изменениях в наших lifecycle-методах', ' где также затронули стратегию постепенной миграции (обновления). В React 16.3.0 мы добавили несколько новых lifecycle-методов для помощи в этой миграции. Мы также предоставили новое API для давно ожидаемых новшеств: официальное context API', ' ref forwarding API и ergonomic ref API.']"
['\n      ru_vds\n    '],"['Год', ' проведённый с React: выводы и рекомендации']",['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['Обычно начало работы с новой технологией — это не так уж и просто. Новичок попадает в бескрайнее море учебных руководств и статей. При этом за каждым из подобных материалов стоит личное мнение его автора', ' а каждый автор заявляет', ' что именно его устами глаголет истина.\n\r\nС точки зрения здравого смысла понятно', ' что далеко не все статьи', ' опубликованные в интернете', ' способны принести реальную пользу', ' поэтому тем', ' кто пытается освоить что-то новое', ' приходится оценивать публикации в попытке найти ответ на вопрос о том', ' стоит ли тратить на них своё время.\n\n\n\r\nПрежде чем уйти с головой в учёбу', ' программисту необходимо понять основы интересующей его технологии. Затем нужно сформировать своё видение этой технологии', ' научиться мыслить её категориями. В результате', ' если некто начинает изучать React', ' сначала ему нужно научиться «думать на языке React». А уже после того', ' как он разовьёт в себе это качество', ' он сможет осмысленно знакомиться с мнениями других людей и', ' отбирая самое ценное', ' развиваться в избранном направлении.\n\r\nАвтор статьи', ' перевод которой мы публикуем сегодня', ' хочет поделиться со всеми желающими тем', ' что ему удалось узнать о React в ходе формирования собственного видения этой технологии', ' в ходе её изучения и накопления опыта в этой области. Здесь он расскажет о том', ' что ему удалось понять за год', ' работая React-программистом', ' занимаясь в свободное время собственными проектами и делясь своими идеями на одной JavaScript-конференции.']"
['\n      kalaev-viktor\n    '],['Валидация сложных форм React. Часть 1'],['JavaScript *ReactJS *'],"['Для начала надо установить компонент react-validation-boo', ' предполагаю что с react вы знакомы и как настроить знаете.\n\nnpm install react-validation-boo\n\r\nЧтобы много не болтать', ' сразу приведу небольшой пример кода.\n\nimport React', "" {Component} from 'react';\nimport {connect"", ' Form', ' Input', "" logger} from 'react-validation-boo';\n\nclass MyForm extends Component {\n    sendForm = (event) => {\n        event.preventDefault();\n\n        if(this.props.vBoo.isValid()) {\n            console.log('Получаем введённые значения и отправляем их на сервер'"", "" this.props.vBoo.getValues());\n        } else {\n            console.log('Выведем в консоль ошибки'"", ' this.props.vBoo.getErrors());\n        }\n    };\n    getError = (name) => {\n        return this.props.vBoo.hasError(name) ? <div className=""error"">{this.props.vBoo.getError(name)}</div> : \'\';\n    };\n    render() {\n        return <Form connect={this.props.vBoo.connect}>\n            <div>\n                <Input type=""text"" name=""name"" />\n                {this.getError(\'name\')}\n            </div>\n            \n            <button onClick={this.sendForm}>\n                {this.props.vBoo.isValid() ? \'Можно отправлять\': \'Будьте внимательны!!!\'}\n            </button>\n        </Form>\n    }\n}\n\nexport default connect({\n    rules: () => (\n        [\n            [\'name\'', "" 'required']"", '\n        ]\n    )', '\n    middleware: logger\n})(MyForm);\n\n']"
['\n      ru_vds\n    '],"['Учебный курс по React', ' часть 22: седьмой этап работы над TODO-приложением', ' загрузка данных из внешних источников']",['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['В сегодняшней части перевода учебного курса по React мы завершим работу над Todo-приложением и поговорим о том', ' как', ' пользуясь внутренними механизмами компонентов и стандартными возможностями JavaScript', ' загружать данные из внешних источников.\n\n\n\r\n→ Часть 1: обзор курса', ' причины популярности React', ' ReactDOM и JSX\r\n→ Часть 2: функциональные компоненты\r\n→ Часть 3: файлы компонентов', ' структура проектов\r\n→ Часть 4: родительские и дочерние компоненты\r\n→ Часть 5: начало работы над TODO-приложением', ' основы стилизации\r\n→ Часть 6: о некоторых особенностях курса', ' JSX и JavaScript\r\n→ Часть 7: встроенные стили\r\n→ Часть 8: продолжение работы над TODO-приложением', ' знакомство со свойствами компонентов\r\n→ Часть 9: свойства компонентов\r\n→ Часть 10: практикум по работе со свойствами компонентов и стилизации\r\n→ Часть 11: динамическое формирование разметки и метод массивов map\r\n→ Часть 12: практикум', ' третий этап работы над TODO-приложением\r\n→ Часть 13: компоненты', ' основанные на классах\r\n→ Часть 14: практикум по компонентам', ' основанным на классах', ' состояние компонентов\r\n→ Часть 15: практикумы по работе с состоянием компонентов\r\n→ Часть 16: четвёртый этап работы над TODO-приложением', ' обработка событий\r\n→ Часть 17: пятый этап работы над TODO-приложением', ' модификация состояния компонентов\r\n→ Часть 18: шестой этап работы над TODO-приложением\r\n→ Часть 19: методы жизненного цикла компонентов\r\n→ Часть 20: первое занятие по условному рендерингу\r\n→ Часть 21: второе занятие и практикум по условному рендерингу\r\n→ Часть 22: седьмой этап работы над TODO-приложением', ' загрузка данных из внешних источников\r\n→ Часть 23: первое занятие по работе с формами\r\n→ Часть 24: второе занятие по работе с формами\r\n→ Часть 25: практикум по работе с формами\r\n→ Часть 26: архитектура приложений', ' паттерн Container/Component\r\n→ Часть 27: курсовой проект']"
['\n      fokus-lop\n    '],['Пишем мультиязычное приложение на React Native'],['Блог компании Skillbox Программирование *ReactJS *Учебный процесс в IT '],"['\n\r\nЛокализация продукции очень важна для международных компаний', ' осваивающих новые для себя страны и регионы. Аналогично локализация нужна и мобильным приложениям. Если разработчик начинает международную экспансию', ' важно дать пользователям из другой страны возможность работать с интерфейсом на родном языке. В этой статье мы создадим приложение React Native', ' используя пакет react-native-localize.']"
['\n      greebn9k\n    '],['Работа с навигацией при рефакторинге легаси проекта в React Native'],['Разработка под iOS *Разработка мобильных приложений *Проектирование и рефакторинг *Разработка под Android *ReactJS *'],"['Данный материал посвящен работе по рефакторингу навигации в мобильной разработке. \r\nВ статье приведены примеры возможных проблем', ' а также выходов из сложных ситуаций', ' связанных с работой навигации в мобильной разработке на React Native. \n\r\nМы рассмотрим основные особенности и проблемы мобильного Legacy проекта', ' шаг за шагом пройдем цепочку действий', ' состоящую из постановки задачи', ' определения узких мест', ' поиска решений сложившихся проблем и получения желаемого результата.\n\n']"
['\n      ru_vds\n    '],['Уменьшение размеров бандлов с помощью Webpack Analyzer и React Lazy/Suspense'],['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *Клиентская оптимизация *ReactJS *'],"['По мере того', ' как растёт сложность клиентских приложений', ' размеры их бандлов становятся всё больше и больше. В этой ситуации сильнее всего страдают люди', ' вынужденные', ' по разным причинам', ' пользоваться медленными интернет-соединениями. При этом с каждым днём всё становится только хуже.\n\n\n\r\nАвтор статьи', ' перевод которой мы сегодня публикуем', ' работает в Wix. Он хочет рассказать о том', ' как смог уменьшить размер одного бандла примерно на 80%', ' используя Webpack Analyzer и React Lazy/Suspense.']"
['\n      vds64_max\n    '],['React и Vue без npm и сборки'],['JavaScript *ReactJS *VueJS *'],"['Когда все начинают знакомство с React или Vue', ' как с двумя самыми популярными фреймворками для frontend', ' конечно-же все используем магические команды npm install', "" npm build. И только после этого папочку 'public' Мы деплоим «куда надо».\n\r\nНо есть и другой (я бы назвал его извращенный) не стандартный способ"", ' о котором многие начинающие фронтэнд разработчики даже не знают', ' так как они «выросли» на npm install/build.\n\nА что', ' если не нужно проводить сборку', "" а просто вставить js код в html?\n\n\r\nПодождите плевать мне в лицо и бросать камни с надписью 'I love node'… Мы конечно знаем"", ' что без сборки Мы потеряем юнит тесты', ' скорость', ' да и как быть с импортом компонентов', ' и иерархией файлов', ' да и вообще спагетти код какой-то получится…\n\nТак для чего Вам (и Нам) это и как это работает ?\r\nНа днях к нам прилетел заказ от «бизнеса» по добавлению функционала в их BPM/ERP систему', "" которая по-сути является сильно модифицированным Redmine. Всё это чудо делалось довольно давно и крутится на VPS сервере с кучей helper'ов микросервисов для считывания данных производства"", ' станков и тп. Трогать ОС нельзя…']"
['\n      olegkorovin\n    '],['Новый фронтенд Одноклассников: запуск React в Java. Часть II'],['Блог компании Одноклассники Разработка веб-сайтов *JavaScript *Java *ReactJS *'],"['\n\r\nМы продолжаем рассказ о том', ' как внутри Одноклассников с помощью GraalVM нам удалось подружить Java и JavaScript и начать миграцию в огромной системе с большим количеством legacy-кода. \n\r\nВо второй части статьи мы подробно расскажем о запуске', ' сборке и интеграции приложений на новом стеке', ' погрузимся в специфику их работы как на клиенте', ' так и на сервере', ' а так же обсудим', ' возникшие на нашем пути', ' трудности и опишем решения', ' помогающие их преодолеть.\n\r\nЕсли вы не читали первую часть', ' то очень рекомендую это сделать. Из неё вы узнаете об истории фронтенда в Одноклассниках и познакомитесь с его историческими особенностями', ' пройдете путь поиска решения проблем', ' которые накопились у нас за 13 лет существования проекта', ' а в самом конце окунетесь в технические особенности серверной реализации принятого нами решения.']"
['\n      MaxRokatansky\n    '],['Heroku и React: деплоим свое первое приложение'],['Блог компании OTUS Программирование *Node.JS *'],"['Всем привет. Вместе с весной в OTUS пришли новые курсы', ' знакомить с которыми мы начинаем прямо сегодня. Уже сейчас открыт набор на курс «React.js разработчик». Подробнее о курсе можно узнать на бесплатном вебинаре', ' который пройдет 11 марта. В рамках этого же вебинара будет разработано небольшое веб-приложение на ReactJS.\n\r\nА сейчас предлагаем вам прочитать статью о деплое своего первого приложения', ' которую написал наш внештатный автор.\n\n\n\r\nСтартовый шаблон Create-react-app и Heroku — это прекрасные инструменты для быстрого создания работающих в облаке приложений', ' однако документация React и Heroku включает в себя на удивление немного информации о том', ' как все-таки выкатить свое React-приложение на Heroku. Описанные в этой статье шаги сработают на любом проекте', ' созданном с помощью create-react-app. В нашей статье мы задеплоим на Heroku простое todo-приложение с самым минимальным бекэндом', ' просто чтобы посмотреть на сам процесс. Но обо всем по порядку:']"
['\n      DeFacto\n    '],['8 плюсов Flutter по сравнению с React Native'],['Разработка мобильных приложений *Тестирование мобильных приложений *ReactJS *Аналитика мобильных приложений *Flutter *'],"['Мобильная разработка все чаще опирается не на нативную разработку', ' а на использование фреймворков', ' помогающих создавать приложения сразу для нескольких платформ. Сегодня мне хочется сказать несколько слов о Flutter', ' который постепенно начинает отвоевывать рынок у React Native. Подробности — под катом. \n\n']"
['\n      olepav\n    '],['5 типичных ошибок при создании React компонентов (с хуками) в 2020 году'],['Блог компании Quarkly JavaScript *ReactJS *'],"['\n\nВсем привет! Из этой статьи вы узнаете о самых распространенных ошибках при создании React компонентов', ' а также о том', ' почему они считаются ошибками', ' как их избежать или исправить.\nОригинальный материал был написан немецким разработчиком Лоренцом Вайсом для личного блога', ' а позже собрал много позитивных отзывов на dev.to. Переведено командой Quarkly специально для комьюнити на Хабре.']"
['\n      KD637\n    '],['Как меня чуть не уволили за выбор React для корпоративного приложения'],['Блог компании SkillFactory JavaScript *Программирование *ReactJS *Читальный зал '],"['Предполагалось', ' что React облегчит разработку', ' но он создал препятствия\r\nЛетом 2018 года', ' мой босс', ' Эдриан', ' попросил меня присоединиться к его звонку по Skype с Джеймсом', ' техническим директором крупной канадской компании.\n\r\nПока мы узнавали друг друга', ' я понял', ' что Джеймс – умный парень с большими амбициями. Его видение заключается в миграции массивного десктопного приложения WPF в облако. \n\r\nМне нравится его дружелюбное отношение', ' и я могу сказать', ' что он готов сотрудничать с нами. У Джеймса уже есть партнёр по развитию в Индии', ' но ему не хватает опыта в создании веб-приложений. Казалось бы', ' что может пойти не так?\n\n']"
['\n      hell0w0rd\n    '],['React v0.13 RC'],['JavaScript *ReactJS *'],"['За выходные мы выпустили первый (и надеемся последний) пре-релиз React v0.13!\n\r\nМы уже немного говорили о грядущих изменениях. Основное — это конечно же поддержка ES6 классов. Подробнее в нашем анонсе беты. Мы очень взволнованы этим событием! Себастьян также написал сегодня утром о некоторых изменениях с ReactElement. Мы надеемся', ' что изменения', ' над которыми мы работатли', ' улучшат производительность и ощущения от разработки.\n']"
['\n      kronoskib\n    '],['Путь длиною в React'],['Блог компании Voximplant Программирование *Angular *ReactJS *'],"[' В VoxImplant мы используем React.js и TypeScript для всех новых фронтенд-проектов. Но стараемся не зацикливаться на выбранных инструментах и внимательно смотрим по сторонам – не летит ли орел', ' не ползет ли змея', ' не случилось ли что интересное у других фреймворков. Недавно нам попалась статья', ' автор которой подробно и вдумчиво сравнивает React с Ember. И', ' да', ' у него большой опыт работы и с первым', ' и со вторым (а не как это обычно бывает). Предлагаем вашему вниманию адаптированный', ' и', ' надеемся', ' легко читаемый', ' перевод.\n']"
['\n      heathen\n    '],['Клон Trello на Phoenix и React. Части 10-12. Финиш долгостроя'],['Разработка веб-сайтов *Программирование *Erlang/OTP *Ruby on Rails *Функциональное программирование *'],"['\n\n\nОглавление (текущий материал выделен)\nВведение и выбор стека технологий\nНачальная настройка проекта Phoenix Framework\nМодель User и JWT-аутентификация\nFront-end для регистрации на React и Redux\nНачальное заполнение базы данных и контроллер для входа в приложение\nАутентификация на front-end на React и Redux\nНастраиваем сокеты и каналы\nВыводим список и создаём новые доски\nДобавляем новых пользователей досок\nОтслеживаем подключённых пользователей досок\nДобавляем списки и карточки\nВыкладываем проект на Heroku\n\nЭта часть — заключительная', ' и будет особенно длинной', ' но хочется уже закончить с циклом и пойти дальше. Так же прошу прощения за столь огромную паузу при её подготовке и публикации. Однако это время не прошло даром и дало материал для новых', ' на этот раз оригинальных', ' статей — прим. переводчика']"
['\n      vtikunov\n    '],['Ref-атрибуты и DOM в React'],['Разработка веб-сайтов *JavaScript *ReactJS *'],"['\nПродолжение серии переводов раздела ""Продвинутые руководства"" (Advanced Guides) официальной документации библиотеки React.js.\nRef-атрибуты и DOM в React\nВ типовом потоке данных React', ' свойства (props) — это единственный способ', ' с помощью которого родители взаимодействуют со своими потомками. Для модификации потомка', ' вам необходимо заново отобразить (произвести ререндеринг) его с новыми свойствами. Однако', ' в некоторых случаях', ' вам понадобится модифицировать потомка непосредственно', ' вне основного потока. Изменение потомка возможно в случаях если он является экземпляром компонента React или элементом DOM. Для обоих этих случаев React имеет особый способ изменения.']"
['\n      marshinov\n    '],['Архитектура модульных React + Redux приложений'],['Разработка веб-сайтов *JavaScript *Анализ и проектирование систем *Проектирование и рефакторинг *'],"['\n\r\nБольшинство разработчиков начинает знакомство с Redux с Todo List Project. Это приложение имеет следующую структуру:\n\nactions/\n  todos.js\ncomponents/\n  todos/\n    TodoItem.js\n    ...\nconstants/\n  actionTypes.js\nreducers/\n  todos.js\nindex.js\nrootReducer.js\r\nНа первый взгляд такая организация кода кажется логичной', ' ведь она напоминает стандартные соглашения многих backend MVC-фреймворков:\n\napp/\n  controllers/\n  models/\n  views/\r\nНа самом деле', ' это неудачный выбор как для MVC', ' так и для React+Redux приложений по следующим причинам:\n\n\nС ростом приложения следить за взаимосвязью между компонентами', ' экшнами и редюсерами становится крайне сложно\nПри изменении экшна или компонента с большой вероятностью потребуется внести изменения и в редюсер. Если количество файлов велико', ' скролить IDE вверх/вниз не удобно\nТакая структура потворствует копипасте в редюсерах\n\r\nНе удивительно', ' что многие авторы(раз', ' два', ' три) советуют структурировать приложение по «функциональности» (by feature).']"
['\n      tokamame\n    '],['Руководство React Native — создаем приложение под iOS. Часть 1.1'],['JavaScript *Разработка под iOS *ReactJS *'],"['Перевод отсюда. \nПродолжение тут. \n\r\nИдея создавать мобильные приложения на JS не нова. Мы видели', ' что фреймворки', ' такие как Ionic или PhoneGap', ' справляются с этой задачей и привлекли изрядное количество разработчиков. \n\r\nТем не менее ни эти фреймворки', ' ни идея создавать мобильные приложения на JavaScript никогда не привлекали меня. Я всегда думал', ' почему бы не изучить Swift/Objective-C или Java и просто делать настоящие приложения? Конечно', ' это потребует затраты значительных усилий на обучение', ' но разве непрерывное обучение — это не то', ' что мы', ' разработчики', ' делаем и должны делать хорошо? Быстро изучать новые языки и фреймворки? Тогда в чём смысл? Что касается меня', ' очевидные преимущества такого подхода никогда не перевешивали сомнения. \n']"
['\n      northicewind\n    '],['React Native: от простой анимации до интерактивной на скорости 60 FPS'],['JavaScript *Разработка под iOS *Разработка под Android *'],"['Необходимость в обмене данными между UI и JS процессами в React Native неизбежно сказывается на производительности препятствуя выполнению JavaScript анимации с высокой частотой кадров. Современные библиотеки', ' такие как Animated', ' решают эту проблему минимизацией количества сообщений', ' передаваемых через мост. Следующий шаг — это элементы управления', ' которые непрерывно реагируют на жесты пользователя. Как мы можем анимировать их со скоростью 60 кадров в секунду?']"
['\n      kashey\n    '],['Горячая перезагрузка компонентов в React'],['JavaScript *ReactJS *'],"['У меня есть два любимых запроса в гугле:\n\r\n — Что будет', ' если в унитаз поезда на полном ходу бросить лом?\r\n — Что будет', ' если в реакту по полном ходу заменить компонент?\n\r\nИ если с первым вопросом все более менее понятно', ' то со вторым вопросом все не так просто — тут же вылезает Webpack-dev-server', ' Hot Module Replacement', ' и React-Hot-Loader. \n\r\nИ все бы хорошо', ' но эта гремучая смесь просто не работает', ' спотыкаясь на первом же сложном коде', ' HOC', ' композиции', ' декораторе и нативных arrow функциях. \n\r\nВ общем третья версия Reac-hot-loader заводилась далеко не у всех.\n\n']"
['\n      apapacy\n    '],['Универсальные приложения React + Express (продолжение)'],['Разработка веб-сайтов *JavaScript *ReactJS *'],"['В предыдущей статье был рассмотрен простой проект универсального приложения на React.js', ' в котором используются только стандартные средства и фрагменты кода из официальной документации React.js. Но этого недостаточно для удобной разработки. Нужно сформировать окружение так', ' чтобы были стандартные возможности (например «горячая» перегрузка компонентов) в равной степени как для серверной', ' так и для клиентской части фронтенда.']"
['\n      webschik\n    '],['Как я мигрировал проект с Angular 1 на React'],['JavaScript *Angular *ReactJS *TypeScript *'],"['Всем привет!\nХочу поделиться своим опытом и инструментами', ' которые я использовал для миграции проекта с Angular 1 на React.\nTLTR: Я написал модуль', ' с помощью которого можно трасформировать Angular компоненты (контроллер + шаблон) в React компоненты.']"
['\n      skillbox\n    '],"['16 инструментов React', ' которые пригодятся разработчикам интерфейсов']",['Блог компании Skillbox Разработка веб-сайтов *Интерфейсы *'],"['\n\r\nДля создания пользовательских интерфейсов существует большое количество инструментов (ваш К.О.', ' не благодарите). Один из наиболее эффективных — React. Наверное', ' на Хабре нет нужды рассказывать о том', ' что это такое и зачем. \n\r\nСегодня мы решили опубликовать подборку классных вспомогательных элементов для разработчиков', ' которые используют React. Вероятно', ' подборка не исчерпывающая', ' но зато позволит дополнить инструментарий. Если вы используете еще что-то', ' чего нет в подборке', ' делитесь в комментариях', ' а мы скажем дружно спасибо и добавим классные предложения в подборку. Предупреждение — под катом довольно много гифок', ' у кого платный трафик — осторожнее', ' ребята. ']"
['\n      ru_vds\n    '],"['Учебный курс по React', ' часть 6: о некоторых особенностях курса', ' JSX и JavaScript']",['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['Сегодня мы публикуем продолжение учебного курса по React. Здесь речь пойдёт о некоторых особенностях курса', ' касающихся', ' в частности', ' стиля кода. Тут же мы подробнее поговорим о взаимоотношениях между JSX и JavaScript.\n\n\n\r\n→ Часть 1: обзор курса', ' причины популярности React', ' ReactDOM и JSX\r\n→ Часть 2: функциональные компоненты\r\n→ Часть 3: файлы компонентов', ' структура проектов\r\n→ Часть 4: родительские и дочерние компоненты\r\n→ Часть 5: начало работы над TODO-приложением', ' основы стилизации\r\n→ Часть 6: о некоторых особенностях курса', ' JSX и JavaScript\r\n→ Часть 7: встроенные стили\r\n→ Часть 8: продолжение работы над TODO-приложением', ' знакомство со свойствами компонентов\r\n→ Часть 9: свойства компонентов\r\n→ Часть 10: практикум по работе со свойствами компонентов и стилизации\r\n→ Часть 11: динамическое формирование разметки и метод массивов map\r\n→ Часть 12: практикум', ' третий этап работы над TODO-приложением\r\n→ Часть 13: компоненты', ' основанные на классах\r\n→ Часть 14: практикум по компонентам', ' основанным на классах', ' состояние компонентов\r\n→ Часть 15: практикумы по работе с состоянием компонентов\r\n→ Часть 16: четвёртый этап работы над TODO-приложением', ' обработка событий\r\n→ Часть 17: пятый этап работы над TODO-приложением', ' модификация состояния компонентов\r\n→ Часть 18: шестой этап работы над TODO-приложением\r\n→ Часть 19: методы жизненного цикла компонентов\r\n→ Часть 20: первое занятие по условному рендерингу\r\n→ Часть 21: второе занятие и практикум по условному рендерингу\r\n→ Часть 22: седьмой этап работы над TODO-приложением', ' загрузка данных из внешних источников\r\n→ Часть 23: первое занятие по работе с формами\r\n→ Часть 24: второе занятие по работе с формами\r\n→ Часть 25: практикум по работе с формами\r\n→ Часть 26: архитектура приложений', ' паттерн Container/Component\r\n→ Часть 27: курсовой проект']"
['\n      482solutions\n    '],['VR-игра на блокчейне с использованием ERC-1155 токена: React 360 или Unity?'],['Разработка игр *AR и VR Игры и игровые приставки '],"['VR-игры всегда вызывали у нас восхищение. Это некое подобие магии в цифровой оболочке', ' полный эффект погружения в другой мир. На всех конференциях VR-проектам уделяется наибольшее внимание', ' масштабные стенды', ' сотни зрителей', ' ожидающих своей очереди нырнуть в свежесозданную вселенную. Так как наша компания по большей части не про развлечения', ' а скорее про эволюцию и прогрессивные подходы — мы детально разобрали вопрос о том', ' как блокчейн может быть полезен в таком молодом жанре геймдева как VR.\nОтвет пришел сразу — смарт-контракты и новейший стандарт токена сети Ethereum ERC1155', ' предназначенный специально для создания игровых/цифровых активов. ERC1155 — токен', ' объединивший в себе лучшие черты популярных ERC20 и ERC721 (технические подробности можно прочитать в readme github’а репозитория). Представим себе классическую ситуацию — вы выбили редкий и дорогой предмет или скин. Как продать его так', ' чтобы тебя не обманул покупатель или у тебя самого отсутствовала возможность беспрепятственно забрать чужие денежки', ' не отдавая предмет? Правильный ответ — смарт-контракты. И ERC1155 токен — именно то', ' что нужно для реализации подобного функционала. Предмет может иметь свои характеристики — в виде силы', ' урона', ' стойкости', ' защиты', ' доп.урона (характерные ERC721 токену) и свою стоимость (характерную токену ERC20) в одной оболочке — разве это не звучит вдохновляюще? Все игры могут стать безопасными и удобными для хранения', ' передачи и продажи своих цифровых активов. Попробуем решить эту задачу на примере задуманной нами игрушки.\nКонцепцию мы придумали довольно быстро — аналог популярной настольной карточной игры “Манчкин”', ' перенесенный в VR-вселенную', ' со смарт-контрактами для торговли любыми выбитыми в ходе игры предметами', ' доспехами и оружием. Выбор технологии реализации для наших инди-разработчиков оказался делом непростым', ' но интересным и об этом опыте мы и хотим поведать вам ниже.']"
['\n      ru_vds\n    '],"['Учебный курс по React', ' часть 13: компоненты', ' основанные на классах']",['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['Сегодня мы публикуем перевод очередного занятия учебного курса по React. Оно посвящено компонентам', ' основанным на классах. Такие компоненты создают с использованием ключевого слова class.\n\n\n\r\n→ Часть 1: обзор курса', ' причины популярности React', ' ReactDOM и JSX\r\n→ Часть 2: функциональные компоненты\r\n→ Часть 3: файлы компонентов', ' структура проектов\r\n→ Часть 4: родительские и дочерние компоненты\r\n→ Часть 5: начало работы над TODO-приложением', ' основы стилизации\r\n→ Часть 6: о некоторых особенностях курса', ' JSX и JavaScript\r\n→ Часть 7: встроенные стили\r\n→ Часть 8: продолжение работы над TODO-приложением', ' знакомство со свойствами компонентов\r\n→ Часть 9: свойства компонентов\r\n→ Часть 10: практикум по работе со свойствами компонентов и стилизации\r\n→ Часть 11: динамическое формирование разметки и метод массивов map\r\n→ Часть 12: практикум', ' третий этап работы над TODO-приложением\r\n→ Часть 13: компоненты', ' основанные на классах\r\n→ Часть 14: практикум по компонентам', ' основанным на классах', ' состояние компонентов\r\n→ Часть 15: практикумы по работе с состоянием компонентов\r\n→ Часть 16: четвёртый этап работы над TODO-приложением', ' обработка событий\r\n→ Часть 17: пятый этап работы над TODO-приложением', ' модификация состояния компонентов\r\n→ Часть 18: шестой этап работы над TODO-приложением\r\n→ Часть 19: методы жизненного цикла компонентов\r\n→ Часть 20: первое занятие по условному рендерингу\r\n→ Часть 21: второе занятие и практикум по условному рендерингу\r\n→ Часть 22: седьмой этап работы над TODO-приложением', ' загрузка данных из внешних источников\r\n→ Часть 23: первое занятие по работе с формами\r\n→ Часть 24: второе занятие по работе с формами\r\n→ Часть 25: практикум по работе с формами\r\n→ Часть 26: архитектура приложений', ' паттерн Container/Component\r\n→ Часть 27: курсовой проект']"
['\n      ReTWi\n    '],"['Хостинг Node.js https сервера с авто-обновляемым SSL в облаке и как я настроил цикл разработки (+ git', ' react)']",['Node.JS *'],"['Предисловие\r\nНачну с того', ' что однажды мне захотелось создать приложение. Желание такое возникло из-за того', ' что я люблю читать', ' а нормальных книжных агрегаторов на просторах русского интернета просто нет. Собственно из боли поиска чего бы почитать и попыток вспомнить как называлась та книжка', ' которую я недавно читал и на какой же главе я остановился', ' родилось желание сделать веб-приложение', ' в котором всё это было бы возможно и удобно. Стоит отметить', ' что никакого опыта разработки', ' программирования и т.п. у меня не было', ' моя работа вообще с этим не связана. Тем не менее желание перебороло лень и переросло в конкретные действия', ' своеобразное хобби.\n\r\nНе буду рассказывать как я изучал javascript', ' node.js', ' react', ' html', ' css и т.п.', ' перейдём к тому', ' к чему я пришел на данный момент', ' чем хотел бы с вами поделится и', ' конечно', ' послушать конструктивную критику специалистов.\n\r\nКак и многие я тренировался на собственном ПК на localhost:3000', "" создавал front/back-end'ы"", ' верстал', ' работал с api и т.д.', ' но меня всегда тревожила мысль а том', ' как же всё это потом перенести на хостинг? Будет ли оно работать? Нужно ли будет переписывать из-за этого код? И самое главное', ' нельзя ли всё настроить так', ' чтобы я мог работать над приложением с любого ПК и легко переносить всё на хостинг на production? Об этом я и расскажу.']"
['\n      ru_vds\n    '],['Apollo Client. Теперь — с хуками React'],['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['Автор материала', ' перевод которого мы публикуем сегодня', ' говорит', ' что миссия разработчиков Apollo Client заключается в том', ' чтобы сделать этот инструмент самым современным и удобным решением для управления состоянием React-приложений. Сообщество React развивается и осваивает новые эффективные способы разработки пользовательских интерфейсов. Создатели Apollo Client стремятся к тому', ' чтобы их проект поддерживал бы всё самое актуальное из мира React. Следуя этой традиции', ' разработчики Apollo Client представляют новую версию системы', ' оснащённую поддержкой хуков React.\n\n\n\r\nХуки были представлены в React 16.8. Это — новый механизм', ' позволяющий создавать компоненты', ' обладающие состоянием', ' и при этом не сталкиваться с проблемами', ' характерными для компонентов', ' основанных на классах. Сейчас Apollo Client включает в себя три хука', ' которые можно использовать в приложениях — во всех тех местах', ' где используются компоненты высшего порядка или механизмы render props. Речь идёт о хуках useQuery', ' useMutation и useSubscription. Эти хуки просты в освоении', ' они обладают множеством преимуществ перед ранее существовавшим API. В частности', ' это касается уменьшения размеров бандла приложения и сокращение объёма шаблонного кода.']"
['\n      ru_vds\n    '],['Использование Immer для управления состоянием React-приложений'],['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['Состояние используется для организации наблюдения за данными React-приложений. Состояния меняются по мере того', ' как пользователи взаимодействуют с приложениями. Когда пользователь выполняет некое действие — нам нужно обновить состояние', ' представляющее собой набор данных', ' на основе которых формируется то', ' что пользователь видит на экране. Обновляют состояния React-приложений с помощью метода setState.\n\n\n\r\nТак как состояния не должны обновляться напрямую (в React состояние должно быть иммутабельным)', ' при усложнении структуры состояний работа с ними превращается в весьма нетривиальную задачу. А именно', ' программисту становится непросто ориентироваться в состоянии и пользоваться его данными в приложении.']"
['\n      undestroyer\n    '],['Многопользовательский чат на React с бэкендом от Chatix'],['JavaScript *ReactJS *'],"['\nСейчас я покажу вам как можно сделать чат для команды/пользователей/друзей если у вас нет своего бэкенда или вы не хотите тратить время на его разработку. Мы сделаем простой текстовый чат и на это у нас уйдет около часа.\nНаписать работающий сетевой чат без бэкенда практически невозможно', ' он обязательно должен быть в том или ином виде. Мы будем использовать Chatix и его JavaScript SDK. Chatix и SDK будут заниматься хранением сообщений и сетевыми задачами', ' а мы займемся фронтендом.\nГотовый код проекта доступен на GitHub\nDemo']"
['\n      ru_vds\n    '],['Скрытая цена CSS-in-JS-библиотек в React-приложениях'],['Блог компании RUVDS.com Разработка веб-сайтов *CSS *JavaScript *ReactJS *'],"['В современных фронтенд-приложениях технология CSS-in-JS пользуется определённой популярностью. Всё дело в том', ' что она даёт разработчикам механизм работы со стилями', ' который удобнее обычного CSS. Не поймите меня неправильно. Мне очень нравится CSS', ' но создание хорошей CSS-архитектуры — задача не из простых. Технология CSS-in-JS может похвастаться некоторыми серьёзными преимуществами перед обычными CSS-стилями. Но', ' к сожалению', ' применение CSS-in-JS способно', ' в определённых приложениях', ' привести к проблемам с производительностью. В этом материале я попытаюсь разобрать высокоуровневые особенности наиболее популярных CSS-in-JS-библиотек', ' расскажу о некоторых проблемах', ' которые иногда возникают при их использовании', ' и предложу способы смягчения этих проблем.\n\n']"
['\n      Aliaksandr_Yanushkevich\n    '],['Создание React форм в 2020 году'],['ReactJS *'],"['Привет', ' Хабр. Представляю вам перевод статьи «Creating forms in React in 2020» автора Kristofer Selbekk\n\n\n']"
['\n      webdriver\n    '],['Пример использования React Stockcharts для рисования графиков и графических элементов'],['Блог компании Auriga JavaScript *ReactJS *'],"['В статье изложен материал практического использования React для решения задачи построения графиков на основе информации с финансовых рынков. Функционал графиков расширен элементами рисования и индикаторами', ' что позволяет дополнительно производить анализ при выборе торговой стратегии. Статья может заинтересовать frontend разработчиков', ' решающих задачи по графическому отображению данных.\n\n']"
['\n      gbiz\n    '],['Concurrent Mode в React: адаптируем веб-приложения под устройства и скорость интернета'],['Блог компании Яндекс Разработка веб-сайтов *JavaScript *Интерфейсы *ReactJS *'],"['В этой статье я расскажу о конкурентном режиме в React. Разберёмся', ' что это: какие есть особенности', ' какие новые инструменты появились и как с их помощью оптимизировать работу веб-приложений', ' чтобы у пользователей всё летало. Конкурентный режим — новая фишка в React. Его задача — адаптировать приложение к разным устройствам и скорости сети. Пока что Concurrent Mode — эксперимент', ' который может быть изменён разработчиками библиотеки', ' а значит', ' новых инструментов нет в стейбле. Я вас предупредил', ' а теперь — поехали.\n\r\nСейчас для отрисовки компонентов есть два ограничения: мощность процессора и скорость передачи данных по сети. Когда требуется что-то показать пользователю', ' текущая версия React пытается отрисовать каждый компонент от начала и до конца. Неважно', ' что интерфейс может зависнуть на несколько секунд. Такая же история с передачей данных. React будет ждать абсолютно все необходимые компоненту данные', ' вместо того чтобы рисовать его по частям. \n\n\n\r\nКонкурентный режим решает перечисленные проблемы. С ним React может приостанавливать', ' приоритизировать и даже отменять операции', ' которые раньше были блокирующими', ' поэтому в конкурентном режиме можно начинать отрисовывать компоненты независимо от того', ' были ли получены все данные или только часть.']"
['\n      ru_vds\n    '],['6 рекомендаций по разработке масштабируемых React-проектов'],['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['В начале работы над новым React-проектом рекомендуется сформулировать инструкции', ' следуя которым можно будет создать приложение', ' хорошо поддающееся масштабированию.\n\n\n\r\nВ этом материале я хочу поделиться знаниями о React-разработке', ' накопленными за годы использования этой библиотеки. Они помогут вам в формировании вашего собственного свода правил по разработке React-приложений.']"
['\n      Houston\n    '],['React: слоты как у сына маминой подруги'],['Разработка веб-сайтов *JavaScript *ReactJS *'],"['При композиции компонентов очень часто возникает задача точечной кастомизации содержимого какого-либо компонента. Например', ' у нас есть компонент DatePicker', ' и в разных частях веб-приложения нам нужно отображать разные кнопки ""Применить"".Для решения подобных задач в каждой популярной технологии сегодня применяется концепция ""слотов"". У Angular есть ngContent', ' во Vue', ' Svelte и WebComponents есть слоты.']"
['\n      aio350\n    '],['React за 60 секунд: валидация формы'],['Разработка веб-сайтов *JavaScript *Программирование *ReactJS *'],"['\n\r\nДоброго времени суток', ' друзья!\n\r\nВ этом небольшом туториале я хочу продемонстировать вам пример клиент-серверной валидации формы.\n\r\nКлиент будет реализован на React', ' сервер на Express.\n\r\nМы не будем изобретать велосипеды', ' а воспользуемся готовыми решениями: для валидации формы на стороне клиента будет использоваться react-hook-form (+: используются хуки', ' русский язык)', ' а на стороне сервера — express-validator.\n\r\nДля стилизации будет использоваться styled-components (CSS-in-JS или All-in-JS', ' учитывая JSX).\n\r\nИсходный код примера находится здесь.\n\r\nПоиграть с кодом можно здесь.\n\r\nБез дальнейших предисловий.']"
['\n      SimbirSoft_frontend\n    '],['2d-графика в React с three.js'],['Блог компании SimbirSoft JavaScript *Программирование *ReactJS *'],"['У каждого из вас может возникнуть потребность поработать с графикой при создании React-приложения. Или вам нужно будет отрендерить большое количество элементов', ' причем сделать это качественно и добиться высокой производительности при перерисовке элементов. Это может быть анимация либо какой-то интерактивный компонент. Естественно', ' первое', ' что приходит в голову – это Canvas. Но тут возникает вопрос: «Какой контекст использовать?». У нас есть выбор – 2d-контекст либо WebGl. А как на счёт 2d-графики? Тут уже не всё так очевидно.']"
['\n      kmoseenk\n    '],['Пользовательские хуки React: зачем нам нужен контекст'],['Блог компании OTUS JavaScript *Программирование *ReactJS *'],"['В некоторых случаях хук — это обычный хук', ' но часто вам понадобится больше контекста. Эта короткая статья в блоге обобщает сказанное. Пользовательские React хуки — это очень удобный способ инкапсуляции логики и передачи данных вниз по дереву рендеринга.\xa0Правила для пользовательских React хуков довольно просты:Пользовательский хук — это функция JavaScript', ' имя которой начинается с ""use"" и которая может вызывать другие хуки.']"
['\n      jojo97\n    '],"['Построение надежных веб-приложений на React: Часть 2', ' оптимизация с Browserify']",['Разработка веб-сайтов *JavaScript *ReactJS *'],"['Перевод статьи «Building robust web apps with React: Part 2', ' optimising with Browserify»', ' Matt Hinchliffe\n\r\nОт переводчика: это перевод второй части цикла статей «Building robust web apps with React».\r\nПереводы: \n\nПостроение надежных веб-приложений на React: Часть 1', ' браузерные прототипы\nПостроение надежных веб-приложений на React: Часть 2', ' оптимизация с Browserify\nПостроение надежных веб-приложений на React: Часть 3', ' тестирование с Jasmine\nПостроение надежных веб-приложений на React: Часть 4', ' серверная генерация\n\n\nВ первой части', ' я осветил причины', ' почему по моему мнению', ' React захватывающий инструмент', ' который может быть использован для построения изоморфный или адаптивно-гибридных веб-сайтов', ' что может равняться динамичности мобильных приложений и надежности статичной страницы двадцатилетней давности. Я также написал базовое демо приложение', ' чтобы исследовать некоторые парадигмы и особенности React и показать', ' как быстро можно прототипировать динамические браузерные приложения', ' но это едва ли демонстрирует надежность', ' к которой я изначально стремился.\n\r\nКод', ' который в начальном демо был представлен на выполнение браузеру', ' не проходит ни один базовый тест производительности; скрипты должны быть прекомпилированы', ' объединены и минифицированы перед отправкой на продакшн.']"
['\n      MrCheater\n    '],['Честный MVC на React + Redux'],['Блог компании Developer Soft JavaScript *Программирование *ReactJS *'],"['\nЭта статья о том', ' как построить архитектуру web-приложения в соответствии с принципами MVC на основе React и Redux. Прежде всего', ' она будет интересна тем разработчикам', ' кто уже знаком с этими технологиями', ' или тем', ' кому предстоит использовать их в новом проекте. ']"
['\n      levvsha\n    '],['Знакомство с React Loadable'],['JavaScript *Клиентская оптимизация *ReactJS *'],"['Привет', ' Хабр. Представляю вам свободный перевод статьи Джеймса Кайла «Introducing React Loadable». В ней Джеймс рассказывает', ' что такое компонент-ориентированный подход к разделению кода и представляет разработанную им библиотеку Loadable — инструмент', ' позволяющий реализовать этот подход в React.js приложениях.\n\n\nЕдиный файл сборки и сборка из нескольких файлов\n\nОт переводчика: я позволил себе не переводить некоторые глаголы и термины', ' повсеместно использующиеся в непереведенной транслитерованной форме (как', ' например', ' «прелоадер» и «рендеринг»)', ' полагаю', ' они будут понятны даже пользователям', ' читающим исключительно материалы на русском языке.\n']"
['\n      tokamame\n    '],"['Руководство React Native — создаем приложение под iOS. Часть 1.2', ' 1.3']",['JavaScript *Разработка под iOS *ReactJS *'],"['→ Перевод отсюда\r\n→ Продолжение. Начало здесь\n\n2. Извлечение данных из API\r\nВ этом разделе мы будем подключаться к API сайта Unsplash.it и запрашивать информацию о обоях. Но', ' прежде чем мы приступим к интересному', ' нам надо сделать кое-что. \n\nОбъявление классов в стиле ES2015\r\nВ файле index.ios.js вы видите существующий код. Он отвечает за вывод содержимого в эмулятор. \n\n\r\nВ файле index.ios.js мы видим строку var SplashWalls = React.createClass({ ... }). Мы будем менять ее. В этом руководстве мы будем использовать синтаксис ES2015 для объявления классов. \r\nМы', ' разработчики', ' любопытные. Вы', ' возможно', ' хотите спросить: «Зачем? Зачем использовать классы из ES2015?».\n']"
['\n      ru_vds\n    '],['Добротный риалтайм на React и Socket.io'],['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['Сегодня поговорим о том', ' как наладить взаимодействие React-приложения с сервером', ' используя Socket.io', ' добившись при этом высокой скорости отклика приложения на события', ' которые генерирует сервер. Примеры кода рассчитаны на React или React Native. При этом концепции', ' изложенные здесь', ' универсальны', ' их можно применить и при разработке с использованием других фронтенд-фреймворков', ' таких', ' как Vue или Angular.\n\n\n\r\nИтак', ' нам нужно', ' чтобы клиентское приложение реагировало на события', ' генерируемые на сервере. Обычно в подобных случаях речь идёт о приложениях реального времени. В таком сценарии сервер передаёт клиенту свежие данные по мере их появления. После того', ' как между клиентом и сервером будет установлено соединение', ' сервер', ' не полагаясь на запросы клиента', ' самостоятельно инициирует передачу данных.']"
['\n      ph_piter\n    '],['Секреты React и Redux при разработке веб-приложений'],['Блог компании Издательский дом «Питер» Высокая производительность *JavaScript *Программирование *ReactJS *'],"[' Здравствуйте', ' уважаемые читатели! Совсем скоро у нас выйдет новая книга о технологиях React и Redux', "" оригинал — O'Reilly"", ' май 2017 \n\r\nЧтобы обрисовать масштабы бедствия круг проблем', ' которые могут возникать при создании веб-приложений с использованием таких технологий', ' предлагаем сокращенный перевод статьи Сэмюэла Менденхолла (от 15 ноября)', ' где рассмотрены тонкости работы с React', ' Redux', ' Typescript и рассказано', ' как устранить и упредить проблемы с производительностью в таких приложениях.']"
['\n      NIX_Solutions\n    '],['Как в React избавиться от сложности в управлении состоянием — отчёт по итогам поездки на React Amsterdam'],['Блог компании NIX JavaScript *Программирование *ReactJS *'],"['В апреле посчастливилось побывать на очень крутом мероприятии — React Amsterdam. Кроме приятных организационных моментов было ещё и много интересных докладов. Они были', ' в основном', ' прикладного характера. Поскольку стек технологий в принципе устоялся', ' докладчики рассказывали о способах решения практических проблем', ' а не продвигали что-то незнакомое и революционное. Здесь я расскажу подробнее о выступлении “setState Machine” Микеле Бертоли из Facebook.\n\r\nОсновная проблема', ' которой был посвящен доклад', ' — сложность в управлении состоянием в React. ']"
['\n      PaulMaly\n    '],"['Re: «Сравнение JS-фреймворков: React', ' Vue и Hyperapp»']",['Разработка веб-сайтов *JavaScript *ReactJS *VueJS *SvelteJS *'],"['Это небольшая ответная статья на публикацию «Сравнение JS-фреймворков: React', ' Vue и Hyperapp». Вообще я не большой фанат подобных сравнений. Однако раз уж речь зашла о таком маргинальном фреймворке', ' как Hyperapp', ' в сравнении с мастодонтами', ' типа React и Vue', ' я подумал', ' почему бы не рассмотреть все те же примеры на Svelte. Так сказать', ' для полноты картины. Тем более', ' это займет буквально 5 минут. Поехали!\n\n']"
['\n      gnemtsov\n    '],['Удобный способ тестирования React-компонентов'],['Разработка веб-сайтов *Node.JS *Тестирование веб-сервисов *ReactJS *'],"['Я написал построитель дополнительных отчетов (custom reporter) для Jest и выложил на GitHub. Мой построитель называется Jest-snapshots-book', ' он создает HTML-книгу снимков компонентов React-приложения.\n\n\n\r\nВ статье речь пойдет о том', ' что такое Jest', ' snapshot-тестирование', ' для чего вообще понадобился дополнительный построитель отчетов и как их писать. В основном все это относится к тестированию React-компонентов', ' но теоретически можно применять при работе с любыми сериализуемыми данными.']"
['\n      Pogman25\n    '],"['Работа с формами в React.js', ' используя базовый инструментарий']",['JavaScript *ReactJS *'],"['Введение\nЗа время работы на React.js мне часто приходилось сталкиваться с обработкой форм. Через мои руки прошли Redux-Form', ' React-Redux-Form', ' но ни одна из библиотек не удовлетворила меня в полной мере. Мне не нравилось', ' что состояние формы хранится в reducer', ' а каждое событие проходит через action creator. Также', ' согласно мнению Дана Абрамова', ' «состояние формы по своей сути является эфемерным и локальным', ' поэтому отслеживать его в Redux (или любой библиотеке Flux) не нужно».\nЗамечу', ' что в React-Redux-Form есть компонент LocalForm', ' который позволяет работать без redux', ' но на мой взгляд', ' пропадает смысл устанавливать библиотеку размером 21', '9kB и использовать её менее чем на половину.\nЯ не против названных библиотек', ' в конкретных случаях они незаменимы. Например', ' когда от введённых данных зависит сторонний компонент', ' не связанный с формой. Но в своей статье я хочу рассмотреть формы', ' которые не нуждаются в redux.\nЯ начал использовать локальный state компонента', ' при этом возникли новые трудности: увеличилось количество кода', ' компоненты потеряли читаемость', ' появилось много дублирования.']"
['\n      ru_vds\n    '],"['Учебный курс по React', ' часть 10: практикум по работе со свойствами компонентов и стилизации']",['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['Сегодня', ' в десятой части перевода учебного курса по React', ' мы предлагаем вам выполнить практическое задание по работе со свойствами компонентов и по их стилизации.\n\n\n\r\n→ Часть 1: обзор курса', ' причины популярности React', ' ReactDOM и JSX\r\n→ Часть 2: функциональные компоненты\r\n→ Часть 3: файлы компонентов', ' структура проектов\r\n→ Часть 4: родительские и дочерние компоненты\r\n→ Часть 5: начало работы над TODO-приложением', ' основы стилизации\r\n→ Часть 6: о некоторых особенностях курса', ' JSX и JavaScript\r\n→ Часть 7: встроенные стили\r\n→ Часть 8: продолжение работы над TODO-приложением', ' знакомство со свойствами компонентов\r\n→ Часть 9: свойства компонентов\r\n→ Часть 10: практикум по работе со свойствами компонентов и стилизации\r\n→ Часть 11: динамическое формирование разметки и метод массивов map\r\n→ Часть 12: практикум', ' третий этап работы над TODO-приложением\r\n→ Часть 13: компоненты', ' основанные на классах\r\n→ Часть 14: практикум по компонентам', ' основанным на классах', ' состояние компонентов\r\n→ Часть 15: практикумы по работе с состоянием компонентов\r\n→ Часть 16: четвёртый этап работы над TODO-приложением', ' обработка событий\r\n→ Часть 17: пятый этап работы над TODO-приложением', ' модификация состояния компонентов\r\n→ Часть 18: шестой этап работы над TODO-приложением\r\n→ Часть 19: методы жизненного цикла компонентов\r\n→ Часть 20: первое занятие по условному рендерингу\r\n→ Часть 21: второе занятие и практикум по условному рендерингу\r\n→ Часть 22: седьмой этап работы над TODO-приложением', ' загрузка данных из внешних источников\r\n→ Часть 23: первое занятие по работе с формами\r\n→ Часть 24: второе занятие по работе с формами\r\n→ Часть 25: практикум по работе с формами\r\n→ Часть 26: архитектура приложений', ' паттерн Container/Component\r\n→ Часть 27: курсовой проект']"
['\n      ru_vds\n    '],"['Учебный курс по React', ' часть 12: практикум', ' третий этап работы над TODO-приложением']",['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['В сегодняшней части перевода курса по React мы предлагаем вам выполнить практическое задание по формированию наборов компонентов средствами JavaScript и продолжить работу над TODO-приложением.\n\n\n\r\n→ Часть 1: обзор курса', ' причины популярности React', ' ReactDOM и JSX\r\n→ Часть 2: функциональные компоненты\r\n→ Часть 3: файлы компонентов', ' структура проектов\r\n→ Часть 4: родительские и дочерние компоненты\r\n→ Часть 5: начало работы над TODO-приложением', ' основы стилизации\r\n→ Часть 6: о некоторых особенностях курса', ' JSX и JavaScript\r\n→ Часть 7: встроенные стили\r\n→ Часть 8: продолжение работы над TODO-приложением', ' знакомство со свойствами компонентов\r\n→ Часть 9: свойства компонентов\r\n→ Часть 10: практикум по работе со свойствами компонентов и стилизации\r\n→ Часть 11: динамическое формирование разметки и метод массивов map\r\n→ Часть 12: практикум', ' третий этап работы над TODO-приложением\r\n→ Часть 13: компоненты', ' основанные на классах\r\n→ Часть 14: практикум по компонентам', ' основанным на классах', ' состояние компонентов\r\n→ Часть 15: практикумы по работе с состоянием компонентов\r\n→ Часть 16: четвёртый этап работы над TODO-приложением', ' обработка событий\r\n→ Часть 17: пятый этап работы над TODO-приложением', ' модификация состояния компонентов\r\n→ Часть 18: шестой этап работы над TODO-приложением\r\n→ Часть 19: методы жизненного цикла компонентов\r\n→ Часть 20: первое занятие по условному рендерингу\r\n→ Часть 21: второе занятие и практикум по условному рендерингу\r\n→ Часть 22: седьмой этап работы над TODO-приложением', ' загрузка данных из внешних источников\r\n→ Часть 23: первое занятие по работе с формами\r\n→ Часть 24: второе занятие по работе с формами\r\n→ Часть 25: практикум по работе с формами\r\n→ Часть 26: архитектура приложений', ' паттерн Container/Component\r\n→ Часть 27: курсовой проект']"
['\n      kshshe\n    '],['Функциональные компоненты с React Hooks. Чем они лучше?'],['JavaScript *ReactJS *'],"['Относительно недавно вышла версия React.js 16.8', ' с которой нам стали доступны хуки. Концепция хуков позволяет писать полноценные функциональные компоненты', ' используя все возможности React', ' и позволяет делать это во многом более удобно', ' чем мы это делали с помощью классов. \nМногие восприняли появление хуков с критикой', ' и в этой статье я хотел бы рассказать о некоторых важных преимуществах', ' которые нам дают функциональные компоненты с хуками', ' и почему нам стоит перейти на них.\nЯ намеренно не буду углубляться в детали использования хуков. Это не очень важно для понимания примеров в этой статье', ' достаточно общего понимания работы React. Если вы хотите почитать именно на эту тему', ' информация о хуках есть в документации', ' и если эта тема будет интересна', ' я напишу статью подробнее о том когда', ' какие', ' и как правильно использовать хуки. ']"
['\n      kshshe\n    '],"[""Functional components with React Hooks. Why it's better?""]",['JavaScript *ReactJS *'],"[""When React.js 16.8 was released we got the opportunity to use React Hooks. Hooks make us able to write fully-functional components using functions. We can use all React.js features and do in in more convenient way. \nA lot of people don't agree with Hooks conception. In this article I'd like to tell about some important advantages React Hooks give you and why we need to write with Hooks.\nI will not talk about how to use hooks. It is not very important for the examples. If you want to read something on this topic"", ' you can use official documentation. Also', ' if this topic will be interesting for you', ' I will write more about Hooks.']"
['\n      Plarium\n    '],['Обмен данными между React-компонентами с использованием библиотеки RxJS'],['Блог компании Plarium JavaScript *Node.JS *ReactJS *'],"['Перед вами перевод статьи Chidume Nnamdi', ' опубликованной на blog.bitsrc.io. Перевод публикуется с разрешения автора.\n\n\n\r\nПоявление библиотеки RxJS открыло массу новых возможностей в мире JS. Цель RxJS — достигать многого', ' используя небольшое количество кода. Прочитав эту статью', ' вы узнаете', ' как осуществлять обмен данными между компонентами приложения на React', ' применяя возможности RxJS.']"
['\n      ru_vds\n    '],['История четырёхкратного ускорения React-приложения'],['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['Почти 60% посетителей сайта покидают его в том случае', ' если его загрузка занимает более 3 секунд. 80% таких посетителей на сайт уже не возвращается. Это говорит о том', ' что успех веб-проекта не в последнюю очередь зависит от его скорости. Автор материала', ' перевод которого мы сегодня публикуем', ' хочет рассказать о методиках повышения производительности React-приложений.\n\n\nРезультаты оптимизации приложения']"
['\n      ru_vds\n    '],"['11 советов для тех', ' кто использует Redux при разработке React-приложений']",['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['Когда речь идёт о разработке React-приложений', ' то', ' в плане архитектуры кода', ' маленькие проекты часто бывают более гибкими', ' чем большие. Нет ничего плохого в том', ' чтобы создавать такие проекты с использованием практических рекомендаций', ' нацеленных на более крупные приложения. Но всё это', ' в случае с маленькими проектами', ' может оказаться попросту ненужным. Чем меньше приложение — тем «снисходительнее» оно относится к использованию в нём простых решений', ' возможно — неоптимальных', ' но не требующих больших затрат времени на их реализацию.\n\n\n\r\nНесмотря на это хотелось бы отметить', ' что некоторые рекомендации', ' которые будут даны в этом материале', ' нацелены на React-приложения любого масштаба.']"
['\n      IvanGanev\n    '],"['Пишем API для React компонентов', ' часть 3: порядок пропсов важен']",['JavaScript *ReactJS *'],"['Пишем API для React компонентов', ' часть 1: не создавайте конфликтующие пропсы\n\nПишем API для React компонентов', ' часть 2: давайте названия поведению', ' а не способам взаимодействия\n\nПишем API для React компонентов', ' часть 3: порядок пропсов важен\n\nПишем API для React компонентов', ' часть 4: опасайтесь Апропакалипсиса!\n\nПишем API для React компонентов', ' часть 5: просто используйте композицию\n\nПишем API для React компонентов', ' часть 6: создаем связь между компонентамиДавайте начнем с простого компонента React', ' который отображает тег якоря (anchor tag):\n\n<Link href=""sid.studio"">Click me</Link>\n\n// будет отрендерено в:\n\n<a href=""sid.studio"" class=""link"">Click me</a>\nВот как выглядит код компонента:\nconst Link = props => {\n  return (\n    <a href={props.href} className=""link"">\n      {props.children}\n    </a>\n  )\n}\nМы также хотим чтобы можно было добавлять к элементу такие html-атрибуты', ' как id', ' target', ' title', ' data-attr и т.д.']"
['\n      CodeShaman\n    '],"['Создание Redux-подобного глобального хранилища', ' используя React Hooks']",['JavaScript *ReactJS *'],"['Привет', ' Хабр! Представляю вашему вниманию перевод статьи ""Build a Redux-like Global Store Using React Hooks"" автора Ramsay.\nДавайте представим', ' что я написал интересное предисловие к этой статье и теперь мы сразу можем перейти к по-настоящему интересным вещам. Если говорить вкратце', ' то мы будем\r\nиспользовать useReducer и useContext для создания пользовательского хука React', ' который обеспечит доступ к глобальному хранилищу', ' похожему на Redux.']"
['\n      it-efrem\n    '],['Redux — Не нужен! Заменяем с помощью useContext и useReducer в React?'],['JavaScript *ReactJS *'],"['\nДоброго времени суток', ' Хабровчане!\nХочу рассказать о том', ' как я недавно узнал о неких ""хуках"" в React. Появились они относительно недавно', ' в версии [16.8.0] от 6 февраля 2019 года (что по скоростям развития FrontEnd — уже очень давно)\nПрочитав документацию я заострил свое внимание на хуке useReducer и сразу же задал себе вопрос: ""Эта штука способна полностью заменить Redux!?"" потратил несколько вечеров на эксперименты и теперь хочу поделиться результатами и своими выводами.']"
['\n      kirillvy\n    '],['Проблемы основных паттернов создания data-driven apps на React.JS'],['JavaScript *ReactJS *TypeScript *'],"['Для создания интерфейсов React рекомендует использовать композицию и библиотеки по управлению состоянием (state management libraries) для построения иерархий компонентов. Однако при сложных паттернах композиции появляются проблемы:\n\nНужно излишне структурировать дочерние элементы\nИли передавать их в качестве пропсов', ' что усложняет читабельность', ' семантичность и структуру кода\n\nДля большинства разработчиков проблема может быть неочевидна', ' и они перекидывают ее на уровень управления состоянием. Это обсуждается и в документации React:']"
['\n      pcdesign\n    '],"['Админка за 5 минут. Фронтэнд — react-admin', ' бэкэнд — Flask-RESTful']",['ReactJS *Flask *'],"['\n\r\nЕсли нужно на коленке получить быстро админку', ' где фронтендом будет react-admin', ' а бэкендом Flask-RESTful api', ' то ниже минимальный код в несколько десятков строк', ' чтобы это реализовать.']"
['\n      IvanGanev\n    '],['Как сделать React приложение быстрее при помощи совместного размещения состояний'],['Разработка веб-сайтов *JavaScript *ReactJS *'],"['В статье речь идет о state colocation', ' то есть о совместном размещении состояний', ' этот термин можно было бы еще перевести как стейт колокейшн или стейт колокация.\nОдной из основных причин замедления работы React приложения является его глобальное состояние (global state). Я покажу это на примере очень простого приложения', ' после чего приведу более близкий к реальной жизни пример.\nВот простенькое приложение в котором можно ввести имя для собаки (если окно не работает', ' вот ссылка):\n\nЕсли вы поиграете с этим приложением то вскоре обнаружите что оно очень медленно работает. При взаимодействии с любым полем ввода возникают заметные проблемы с производительностью. В такой ситуации можно было бы использовать спасательный круг в виде React.memo и обернуть им все компоненты с медленным рендером. Но давайте попробуем решить эту проблему по другому.\nВот код этого приложения:']"
['\n      Antek-ESD\n    '],"['Сказ о том', ' как я настраивал Azure AD B2C на React и React Native Часть 3 (Туториал)']",['.NET *Microsoft Azure ReactJS *'],"['\nПредисловие\r\nПродолжение цикла по работе с Azure B2C. В данной статье я расскажу о том', ' как подключить аутентификацию на React JS.\n\nСсылки на связанные посты\n\n\nЧасть 1: Создание и настройка приложений на Azure AD B2C\nЧасть 2: Работа с Identity Framework Experience\nЧасть 3: Подключение приложения React\nЧасть 4: Подключение приложения React Native\nЧасть 5: Подключение и настройка бэкэнда на .NET Core 3\n']"
['\n      MaxRokatansky\n    '],['useSWR – моя новая любимая библиотека React'],['Блог компании OTUS JavaScript *Программирование *ReactJS *'],"['Перевод статьи подготовлен в преддверии старта курса «React.js разработчик».\n\n\n\r\n Последние несколько месяцев я работаю над приложением на NextJS. С каждой неделей оно становится все больше и больше. В приложении используется axios для вызовов API и unstated-next для управления состоянием. Вызовов API достаточно много', ' но мы не хотим', ' чтобы пользователи видели кучу загрузочных экранов. Поэтому мы храним результаты вызовов axios в unstated хранилищах.\n\r\nОднако мы столкнулись с проблемой. Хранилища сами по себе становятся все более и более сложными. Порой страницы требуют нескольких вызовов API', ' а они в свою очередь полагаются на результаты других вызовов API. Дни превращались в недели', ' а недели в месяцы', ' тем временем наши unstated хранилища становились все более и более громоздкими. Мы сталкивались со странными ошибками', ' поскольку наша самодельная логика кэширования изо всех сил старалась справиться с неожиданными крайними случаями.']"
['\n      shefali_basu\n    '],['Angular vs React vs Vue 2020'],['Angular *ReactJS *VueJS *'],['\n\r\nThere are various programming languages available but it is difficult to choose the best one when it comes to our own project. And sometimes we even get stuck between the different languages when we have to make a choice among them.\n']
['\n      Cobalt\n    '],['Flutter для React/React Native разработчика'],['ReactJS *Flutter *'],"['Статья просвещена тем', ' кто пишет на стеке React/React Native и хочет освоить новую для себя технологию – Flutter. И нет', ' мы не будем тут писать приложение на этом фреймворке! Если вы ждете какой-нибудь очередной Todo List – этот материал не для вас. \n\n\n\r\nСкорее это очередная история о том', ' как я перешел на новый фремйворк)\n\r\nМатериал не предполагает собой истину в последней инстанции. Тут описаны лишь те решения', ' которые я выбрал для себя', ' и которые мне', ' имея огромный бэкграунд в React & React Native разработке', ' было легче всего применить на реальном проекте.']"
['\n      MaxRokatansky\n    '],['Начинающим React-разработчикам: приложение со списком дел (покупок)'],['Блог компании OTUS JavaScript *Программирование *ReactJS *'],"['Если вы только начали изучать React', ' для отработки основных концепций этого фреймворка можно создать простое приложение. Первое', ' что приходит в голову', '\xa0— это приложение для составления списка дел или покупок. С него и начнем. Основные концепции React изложены в официальной документации на сайте', ' а в предыдущих записях моего блога можно найти ссылки на другие руководства по работе с React.Запустите VS Code или любой другой редактор кода. Для создания React-приложения наберите в терминале команду:']"
['\n      notyourhero\n    '],"['Делаем схему выбора мест в кинозале на React: о canvas', ' красивом дизайне и оптимизации']",['Блог компании TINKOFF JavaScript *Клиентская оптимизация *Canvas *ReactJS *'],"['В богатой экосистеме Тинькофф есть лайфстайл-сервисы. Купить билеты на различные мероприятия - в кино', ' театры', ' на концерты', ' спортивные события можно на https://www.tinkoff.ru/entertainment/', ' а также в мобильном приложении. Меня зовут Вадим и я расскажу вам', ' как мы это делали в команде Развлечений в Тинькофф Банке.']"
['\n      aio350\n    '],['React: лучшие практики'],['Разработка веб-сайтов *JavaScript *Программирование *ReactJS *'],"['\n\r\nРазрабатываете на React или просто интересуетесь данной технологией? Тогда добро пожаловать в мой новый проект — Тотальный React.\n\nВведение\r\nЯ работаю с React уже 5 лет', ' однако', ' когда дело касается структуры приложения или его внешнего вида (дизайна)', ' сложно назвать какие-то универсальные подходы.\n\r\nВместе с тем', ' существуют определенные приемы написания кода', ' которые позволяют обеспечить возможность долгосрочной поддержки и масштабируемости создаваемых проектов.\n\r\nДанная статья представляет собой своего рода набор правил разработки React-приложений', ' доказавших свою эффективность для меня и команд', ' с которыми я работал.\n\r\nЭти правила касаются компонентов', ' структуры приложения', ' тестирования', ' стилизации', ' управления состоянием и получения данных. Приводимые примеры намеренно упрощены с целью акцентирования внимания на общих принципах', ' а не на конкретной реализации.\n\r\nПредлагаемые подходы не являются истинной в последней инстанции. Это всего лишь мое мнение. Существует много разных способов решения одной и той же задачи.']"
['\n      rubender\n    '],['React+Redoor IPC мониторинг'],['JavaScript *Node.JS *ReactJS *'],"['В одном из наших проектов', ' мы использовали IPC (inter-process communication) на  сокетах. Довольно большой проект', ' торгового бота', ' где были множество модулей которые  взаимодействовали друг с другом.\xa0 По мере роста сложности стал вопрос о  мониторинге', ' что происходит в микросервисах.\xa0 Мы решили создать свое  приложение для отслеживания', ' потока данных на всего двух библиотеках  react и redoor. Я хотел бы поделиться с вами нашим подходом.']"
['\n      host_m\n    '],['React испортил веб-разработку'],['Блог компании VDSina.ru Разработка веб-сайтов *JavaScript *Программирование *ReactJS *'],"['В начале июня я посетил конференцию разработчиков .debug', ' на которой у моей компании был свой стенд. Смысл стенда заключался в том', ' чтобы создать ситуацию «Измени моё мнение»: мы представляли какую-нибудь радикальную идею', ' предлагали людям обсудить её с нами', ' а потом показывали им', ' что интересного мы делаем.\n\r\nМы решили взять такую идею:\n\n\nМоим первым оппонентом стал этот молодой парень справа', ' создающий приложения на нативном React.\n\r\nЕсли серьёзно', ' то React — это хорошая библиотека. Она важна для веб-разработки', ' потому что в ней используются декларативные и реактивные шаблоны', ' а такой сдвиг парадигмы в момент её создания был нужен всем. В те времена (6-7 лет назад) возникали проблемы с движками рендеринга и реактивностью', ' но React довольно неплохо их решил.']"
['\n      YSpektor\n    '],['Dependency Injection в React — максимально просто'],['Разработка веб-сайтов *JavaScript *Проектирование и рефакторинг *ReactJS *TypeScript *'],"['В интернете немало публикаций на тему реализации Dependency Injection (далее - DI) в React', ' также существует немало сторонних npm-пакетов', ' таких как inversify-react', ' react-simple-di и других. Но', ' по моему мнению', ' DI настолько просто реализуется средствами самого React', ' без дополнительных выкрутасов и boilerplate-кода', ' что никакая сторонняя библиотека во многих случаях попросту не нужна. В данной небольшой статье я постараюсь обосновать это свое мнение. Примеры кода будут приведены на TypeScript.']"
['\n      kartamyshev\n    '],['Быстрый старт нового приложения на React с использованием nwb'],['JavaScript *ReactJS *'],"['Оригинал здесь.\n\r\nНаписав несколько приложений на React', ' теперь уже довольно скучно каждый раз начинать всё сначала. Мне нужно настроить webpack', ' webpack-dev-server', ' Babel с некоторыми пресетами и плагинами', ' Karma', ' React', ' несколько лоадеров для JSON', ' CSS', ' картинок и шрифтов – и объединить всё это вместе.\n\n']"
['\n      Mgrin\n    '],['mgr-forms-react: Простой компонент для простейших форм'],['ReactJS *'],"[' Вы когда нибудь считали', "" сколько форм вы делаете во время разработки веб-приложения? И я не говорю о сложных формах вроде кастомного date-picker'а или же чего-то сложнее"", ' а простых форм с тремя input', ' двумя select и одним textarea?\nЯ не считал. Но когда я начал писать очередное приложение на React и мне за один вечер пришлось создать 5 разных форм — мне поплохело. Ну', ' а когда разработчику плохеет — разработчик пишет велосипед! \nИз таких вот соображений на свет появилась пока еще сырая', ' но уже используемая мной в двух разных проектах', ' библиотека для создания простейших форм на React. И я даже выделю слово простейших', ' потому как моя поделка даже близко не стоит рядом с такими проектами как React Forms или же Formsy-React.\nВместо картинки для привлечения внимания — количество однотипного кода', ' который нам всем приходится писать ради создания простейшей формы с одним полем.']"
['\n      HUJG\n    '],['Понимание жизненного цикла React-компонента'],['Разработка веб-сайтов *JavaScript *ReactJS *'],"['React предоставляет разработчикам множество методов и «хуков»', ' которые вызываются во время жизненного цикла компонента', ' они позволяют нам обновлять UI и состояние приложения. Когда необходимо использовать каждый из них', ' что необходимо делать и в каких методах', ' а от чего лучше отказаться', ' является ключевым моментом к пониманию как работать с React.']"
['\n      MaxRokatansky\n    '],['Открытый вебинар «Cоздание приложения на Webpack + React + Express»'],['Блог компании OTUS JavaScript *Программирование *'],"['Всем привет!\n\r\nВ июле 2018 года наш преподаватель курса «Разработчик JavaScript» Юрий Дворжецкий провел открытый вебинар на тему «Cоздание приложения на Webpack+React+Express»', ' правда', ' в рамках второго курса', ' где он выступает как преподавателя одного из модулей', ' посвящённого JavaScript. В этом материале вы сможете ознакомиться с видеозаписью и кратким пересказом прошедшего мастер-класса. \n\r\nРабота на открытом уроке проходила по следующему плану:\n\n\nЗнакомство с Node JS и Express JS.\nЗнакомство с Webpack.\nЗнакомство с React.\n\r\nИтак', ' поехали!\n\n']"
['\n      impressionbit\n    '],"['Быстрый старт веб-проекта (BE — Java Spring', ' FE — React Redux', ' взаимодействие — Rest', ' WebSocket)']",['JavaScript *Java *ReactJS *'],"['\n\r\nБыстрый старт проекта на React \nСсылка на проект в Git\r\nЧтобы разработать современное веб приложение', ' необходимо иметь навыки как в создании серверной части', ' так и клиентской. Наиболее часто встречаемое в последнее время сочетание в корпоративной среде — это Java c использованием Spring Framework для сервера и React для клиента. Однако не все разработчики обладают Full stack навыками (знаниями как в серверной так и в клиентской части)', ' а для начинающих разработчиков создание такой конфигурации оказывается совсем непосильной задачей.\n\r\nИтак', ' вот готовое решение', ' которое позволит научиться создавать подобные конфигурации', ' а также экономить время при старте нового проекта.']"
['\n      Peregrinus\n    '],['Как использовать новую экспериментальную функцию Profiler в React'],['JavaScript *ReactJS *'],"['Вот и вышел React 16.4.0! (Прим. переводчика — эта фича была добавлена в версии 16.4.0', ' тогда и был написан этот пост). И в такие моменты вы понимаете', ' насколько вы JavaScript — гик', ' если следите за минорными обновлениями своего любимого фреймворка. Отлично!\n\n\n\r\nЕсли вы читали заметки о выпуске версии 16.4', ' опубликованные командой React', ' должно быть посчитали это обновление достаточно скучным. Pointer Events выглядят заманчиво', ' но если честно', ' до этого мало что о них слышал.\n\r\nКроме того', ' есть багфикс для как-бы нового метода getDerivedStateFromProps (теперь он будет вызываться при каждом рендере). Я ещё недостаточно этим пользовался', ' поэтому для меня это обновление было не очень важным. \n\r\nЗатем я увидел похороненный под заголовками анонс о том', ' что они добавили новый экспериментальный компонент unstable_Profiler. Видя', ' что моя жизнь сейчас достаточно неустойчива(unstable_)', ' я решил прочитать RFC и попробовать его. ']"
['\n      ru_vds\n    '],"['Учебный курс по React', ' часть 11: динамическое формирование разметки и метод массивов map']",['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['В сегодняшней части перевода учебного курса по React мы поговорим об использовании стандартного метода массивов map() для организации динамического формирования JSX-разметки', ' описывающей наборы однотипных элементов.\n\n\n\r\n→ Часть 1: обзор курса', ' причины популярности React', ' ReactDOM и JSX\r\n→ Часть 2: функциональные компоненты\r\n→ Часть 3: файлы компонентов', ' структура проектов\r\n→ Часть 4: родительские и дочерние компоненты\r\n→ Часть 5: начало работы над TODO-приложением', ' основы стилизации\r\n→ Часть 6: о некоторых особенностях курса', ' JSX и JavaScript\r\n→ Часть 7: встроенные стили\r\n→ Часть 8: продолжение работы над TODO-приложением', ' знакомство со свойствами компонентов\r\n→ Часть 9: свойства компонентов\r\n→ Часть 10: практикум по работе со свойствами компонентов и стилизации\r\n→ Часть 11: динамическое формирование разметки и метод массивов map\r\n→ Часть 12: практикум', ' третий этап работы над TODO-приложением\r\n→ Часть 13: компоненты', ' основанные на классах\r\n→ Часть 14: практикум по компонентам', ' основанным на классах', ' состояние компонентов\r\n→ Часть 15: практикумы по работе с состоянием компонентов\r\n→ Часть 16: четвёртый этап работы над TODO-приложением', ' обработка событий\r\n→ Часть 17: пятый этап работы над TODO-приложением', ' модификация состояния компонентов\r\n→ Часть 18: шестой этап работы над TODO-приложением\r\n→ Часть 19: методы жизненного цикла компонентов\r\n→ Часть 20: первое занятие по условному рендерингу\r\n→ Часть 21: второе занятие и практикум по условному рендерингу\r\n→ Часть 22: седьмой этап работы над TODO-приложением', ' загрузка данных из внешних источников\r\n→ Часть 23: первое занятие по работе с формами\r\n→ Часть 24: второе занятие по работе с формами\r\n→ Часть 25: практикум по работе с формами\r\n→ Часть 26: архитектура приложений', ' паттерн Container/Component\r\n→ Часть 27: курсовой проект']"
['\n      ru_vds\n    '],"['Учебный курс по React', ' часть 24: второе занятие по работе с формами']",['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['Сегодня мы продолжим разговор об использовании форм в React. В прошлый раз мы рассматривали особенности взаимодействия компонентов и текстовых полей. Здесь же мы обсудим работу с другими элементами форм.\n\n\n\r\n→ Часть 1: обзор курса', ' причины популярности React', ' ReactDOM и JSX\r\n→ Часть 2: функциональные компоненты\r\n→ Часть 3: файлы компонентов', ' структура проектов\r\n→ Часть 4: родительские и дочерние компоненты\r\n→ Часть 5: начало работы над TODO-приложением', ' основы стилизации\r\n→ Часть 6: о некоторых особенностях курса', ' JSX и JavaScript\r\n→ Часть 7: встроенные стили\r\n→ Часть 8: продолжение работы над TODO-приложением', ' знакомство со свойствами компонентов\r\n→ Часть 9: свойства компонентов\r\n→ Часть 10: практикум по работе со свойствами компонентов и стилизации\r\n→ Часть 11: динамическое формирование разметки и метод массивов map\r\n→ Часть 12: практикум', ' третий этап работы над TODO-приложением\r\n→ Часть 13: компоненты', ' основанные на классах\r\n→ Часть 14: практикум по компонентам', ' основанным на классах', ' состояние компонентов\r\n→ Часть 15: практикумы по работе с состоянием компонентов\r\n→ Часть 16: четвёртый этап работы над TODO-приложением', ' обработка событий\r\n→ Часть 17: пятый этап работы над TODO-приложением', ' модификация состояния компонентов\r\n→ Часть 18: шестой этап работы над TODO-приложением\r\n→ Часть 19: методы жизненного цикла компонентов\r\n→ Часть 20: первое занятие по условному рендерингу\r\n→ Часть 21: второе занятие и практикум по условному рендерингу\r\n→ Часть 22: седьмой этап работы над TODO-приложением', ' загрузка данных из внешних источников\r\n→ Часть 23: первое занятие по работе с формами\r\n→ Часть 24: второе занятие по работе с формами\r\n→ Часть 25: практикум по работе с формами\r\n→ Часть 26: архитектура приложений', ' паттерн Container/Component\r\n→ Часть 27: курсовой проект']"
['\n      ru_vds\n    '],"['Учебный курс по React', ' часть 26: архитектура приложений', ' паттерн Container/Component']",['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['В этой части перевода учебного курса по React мы поговорим об архитектуре React-приложений. В частности', ' обсудим популярный паттерн Container/Component. \n\n\n\r\n→ Часть 1: обзор курса', ' причины популярности React', ' ReactDOM и JSX\r\n→ Часть 2: функциональные компоненты\r\n→ Часть 3: файлы компонентов', ' структура проектов\r\n→ Часть 4: родительские и дочерние компоненты\r\n→ Часть 5: начало работы над TODO-приложением', ' основы стилизации\r\n→ Часть 6: о некоторых особенностях курса', ' JSX и JavaScript\r\n→ Часть 7: встроенные стили\r\n→ Часть 8: продолжение работы над TODO-приложением', ' знакомство со свойствами компонентов\r\n→ Часть 9: свойства компонентов\r\n→ Часть 10: практикум по работе со свойствами компонентов и стилизации\r\n→ Часть 11: динамическое формирование разметки и метод массивов map\r\n→ Часть 12: практикум', ' третий этап работы над TODO-приложением\r\n→ Часть 13: компоненты', ' основанные на классах\r\n→ Часть 14: практикум по компонентам', ' основанным на классах', ' состояние компонентов\r\n→ Часть 15: практикумы по работе с состоянием компонентов\r\n→ Часть 16: четвёртый этап работы над TODO-приложением', ' обработка событий\r\n→ Часть 17: пятый этап работы над TODO-приложением', ' модификация состояния компонентов\r\n→ Часть 18: шестой этап работы над TODO-приложением\r\n→ Часть 19: методы жизненного цикла компонентов\r\n→ Часть 20: первое занятие по условному рендерингу\r\n→ Часть 21: второе занятие и практикум по условному рендерингу\r\n→ Часть 22: седьмой этап работы над TODO-приложением', ' загрузка данных из внешних источников\r\n→ Часть 23: первое занятие по работе с формами\r\n→ Часть 24: второе занятие по работе с формами\r\n→ Часть 25: практикум по работе с формами\r\n→ Часть 26: архитектура приложений', ' паттерн Container/Component\r\n→ Часть 27: курсовой проект']"
['\n      DenisIzmaylov\n    '],['Конференция React Russia 2019 уже 1 июня'],['ReactJS *'],"['Друзья', ' вот и снова настала весна! Прекрасная летняя погода всё ближе. Продуктивные будни принесли новые результаты', ' а это значит', ' что пора снова встретиться!\n\r\nВ этом году мы подготовили что-то особенное. На этот раз мы встречаемся не просто вечером в будний день на митап (мини-конференцию)', ' а на весь день и в субботу. Да', ' всё верно. Мы начинаем то', ' что обещали ещё в прошлом году. Встречайте!\n\r\nReact Russia 2019 – это конференция профессиональных разработчиков', ' использующих React.js и React Native в России. Являясь логическим продолжением всех наших конференций-митапов React Moscow и React SPB ', ' проводимых с 2016 года при поддержке крупнейших компаний на рынке', ' мы встречаемся', ' чтобы поделиться идеями', ' представить и рассказать о новых решениях и технологиях', ' поделиться опытом и в совместном общении сделать нашу работу ещё более продуктивной', ' приятной и эффективной.\n\nКогда и где\r\n1 июня 2019 г. в 10:00\r\nМосква', ' Кутузовский проспект 32к1', ' Сбербанк Agile Home\n\nПрограмма']"
['\n      IvanGanev\n    '],"['Пишем API для React компонентов', ' часть 5: просто используйте композицию']",['JavaScript *ReactJS *'],"['Пишем API для React компонентов', ' часть 1: не создавайте конфликтующие пропсы\n\nПишем API для React компонентов', ' часть 2: давайте названия поведению', ' а не способам взаимодействия\n\nПишем API для React компонентов', ' часть 3: порядок пропсов важен\n\nПишем API для React компонентов', ' часть 4: опасайтесь Апропакалипсиса!\n\nПишем API для React компонентов', ' часть 5: просто используйте композицию\n\nПишем API для React компонентов', ' часть 6: создаем связь между компонентамиУ нас есть компонент значка:\n\n<Badge count={12} />\nВы видели их в различных приложениях', ' они показывают количество объектов в виде числа.\n\nВ cosmos Badge (значок) имеет несколько цветов для каждого конкретного контекста (информация', ' опасность и т.д.)']"
['\n      apapacy\n    '],['Универсальный роутинг для React приложений'],['Разработка веб-сайтов *JavaScript *ReactJS *'],"['Если попытаться в двух словах описать', ' в чем заключается функция роутинга на фронтэнде веб-приложений', ' то можно придти к выводу', ' что каждый популярный фреймоворк совершенно по-разному представляет это себе. Даже', ' сравнивая версии одного и того же фреймоворка', ' можно придти к выводу', ' что функции и API роутинга наиболее подвержены изменениям (часто без обратной совместимости). Например 4-я версия роутинга в React была переработана настолько радикально', ' что некоторые популярные проекты на githab.com так и не перешли на эту версию.\n\r\nЗа всем этим просматривается общая тенденция', ' которая', ' по моему мнению', ' заключается в том', ' что функционал роутинга в многих популярных фронтэнд фрейморках перегружен. В связи с этим', ' он становится жестко связанным с другими компонентами', ' которые могли быть выделены из роутинга (например с навигацией', ' историей', ' ссылками и т.п.). Поэтому', ' наверное', ' многим знакомо то чувство', ' когда использование роутинга становится неудобным', ' а его расширение просто невозможным. По сравнению с гибкими и расширяемыми компонентами', ' роутинг в популярных фронтэнд фрейморках выглядит на порядок менее удобным и совсем не расширяемым. Особенно это относится первым версиям (до 4-й) роутинга в React.\n\r\nВ этом сообщении я рассмотрю некоторые исторические моменты', ' которые привели к такому положению дел с роутингом', ' а также использование библиотеки universal-router', ' совместно с React.']"
['\n      Vlad_Murashchenko\n    '],"['Разработка формы на React. Принципы KISS', ' YAGNI', ' DRY на практике']",['JavaScript *Совершенный код *ReactJS *'],"['Здавствуйте', ' в этом туториале мы рассмотрим как разработать очень простую', ' но контролируемую форму в React', ' сфокусировавшись на качестве кода.\n\r\nПри разработке нашей формы мы будем следовать принципам «KISS»', ' «YAGNI»', ' «DRY». Для успешного прохождения данного туториала вам не нужно знать этих принципов', ' я буду объяснять их по ходу дела. Однако', ' я полагаю', ' что вы хорошо владеете современным javascript и умеете мыслить на React.']"
['\n      StonedCatt\n    '],['React.js — формошлепство или работа с формами при помощи пользовательских хуков'],['Разработка веб-сайтов *JavaScript *HTML *ReactJS *'],['\nВ этом посте будет реализован простой пользовательский хук для работы с состояниями формы и будут разобраны способы работы с объектами и массивами. В завершение разберем валидацию форм и реализуем соответствующие функции. ']
['\n      yarostbaklajana\n    '],['Почему иногда React/Redux в текущем состоянии give me creeps'],['JavaScript *ReactJS *'],"['React существует достаточно давно', ' чтобы мажорные изменения в этой библиотеке', ' не ощущались температурой подогрева кресел разработчиков в холодные зимние вечера (не благодарите за лайфхак). Но Facebook сделали ход конем и в свое время выпустили не мажорную', ' а минорную версию и тем самым сняли с себя ответственность за нестабильность уже существующих миллионов репозиториев', ' как вы уже поняли я буду рассказывать про версию 16.8.0', ' а так как мы почти никогда не используем React без Redux в продакшн репозиторияx', ' то и про него скажу.\xa0И сперва давайте поговорим про React. Почему была упомянута нестабильность после внесения “дополнений” 16.8.0', ' проблема в том что она произошла в головах разработчиков - легким движением руки Facebook сказал нам', ' знаете', ' ООП это конечно же хорошо', ' но функциональный подход лучше. И тут особо ярые и продвинутые ринулись кидать уже существующий подход Statefull Components и Stateless Components и дописывать новыe functional Components с его хуками useState', ' useCallback', ' useEffect etc. и только лишь иногда useContext. Штош', ' в самих этих 4-х функциях я ничего плохого и не вижу', ' в общем-то:']"
['\n      grigoryvp\n    '],"['Исполнит ли React Native мечту программиста: единый код для web', ' android и ios?']",['Блог компании Voximplant Разработка веб-сайтов *JavaScript *Программирование *'],"['Писать код – сложно. Писать код для нескольких платформ – еще сложнее. Программисты это знают', ' и последние двадцать лет идеи «универсального всемогутора» будоражат умы и воплощаются в разные технологии. Начиная от Java и заканчивая phonegap разработчики очень хотели', ' чтобы один раз написал и везде работало. Но не складывалось.\n\r\nА потом facebook сделал ReactJS. Чтобы чат себе починить. И сложилось. Идея сборки интерфейса из javascript “кубиков” оказалась настолько хороша', ' что facebook портировал фреймворк на мобильные платформы', ' сделав сначала React Native для iOS', ' а через полгода и для Android. Сможет ли технология', ' пришедшая из веба', ' сделать то', ' что не получилось у таких монстров', ' как Java и .NET?\n']"
['\n      maxfarseer\n    '],"['Текстовый туториал по react-router', ' а так же react-router + redux. На русском']",['JavaScript *ReactJS *'],"['Всем добрый день. Немного с задержкой', ' но все же выходит третий мини-учебник. На этот раз разобран react-router. А так же две главы посвещены интеграции react-router + redux.\nВ процессе интеграции rr+redux я не использовал react-router-redux и redux-router. Как указано в самой книге', ' из-за активного развития библиотек', ' мне хотелось бы «научить вас рыбачить»', ' а не просто «дать рыбу».\nТакже', ' приведенный способ по интеграции основан на личном опыте', ' плюс ответах разработчика redux (его твиттер) на SO', ' и изучении различных репозиториев. Он не является «единственно верным». Пожалуйста', ' укажите ссылки на ваши репозитории', ' либо предложите свои варианты в комментариях.\nПоехали!\n']"
['\n      redflasher\n    '],['Как добавить AppIcon и LaunchScreen в приложение на React Native'],['Разработка под iOS *Разработка мобильных приложений *Разработка под Android *ReactJS *'],"['Не занимаясь никогда ранее нативной разработкой под мобильные платформы', ' и в этот раз решил пойти ""легким путем"" — освоить React Native. Наибольшей трудностью стало добавление иконки приложения(AppIcon) и экрана загрузки (Launch Screen). О чем и хочу рассказать в данной статье тем', ' кто осваивает React Native.']"
['\n      Fen1kz\n    '],['Эволюция на React+Redux'],['JavaScript *Разработка игр *Node.JS *ReactJS *'],"[' \nПривет', ' Хабр', ' я тут написал онлайн версию замечательной настольной игры ""Эволюция: Происхождение видов"" и хотел бы поделиться своими заметками насчет архитектуры и технических моментов. Сразу уточню — я не пиарюсь', ' скорее', ' мне интересно рассказать про ошибки и фичи', ' а взамен услышать много нового и хорошего о своих решениях и коде.']"
['\n      m0sk1t\n    '],"['Визуальный редактор писем на React+Redux. Обзор', ' пример использования и расширения']",['JavaScript *Node.JS *Верстка писем *ReactJS *'],"['Введение\nВсем привет! Не так давно мне поступила задача встроить визуальный редактор email в наш сервис внутренней рассылки', ' ибо людям надоело набирать html руками и компоновать валидные шаблоны для писем. Побродив по интернету', ' я нашёл 2 редактора', ' которые', ' как мне тогда казалось', ' прекрасно подойдут для этих целей. Ссылки на них приведу в конце топика. Изучив их более внимательно (EmailEditor написан с использованием jQuery', ' который я в своё время неплохо изучил', ' а Mosaico был на KnockoutJS', ' с ним я знаком лишь поверхностно)', ' я остановился на EmailEditor', ' и снова окунулся в то дерьмо из которого год назад так успешно выбрался с помощью Angular и Ionic', ' а именно — файлы по 2-3к строк', ' повсеместное и рандомное изменение DOM различными способами из различных мест и т.д.', ' ну вы меня понимаете).\nПотратив больше месяца на попытки пофиксить все баги', ' запилить нужные нам для рассылки строительные блоки и прочее', ' я сдался… Решил попробовать Mosaico и даже начал активно изучать Knockout', ' но проблема в том', ' что этот монстр (я про Mosaico) был настолько сложно написан', ' что EmailEditor показался не таким уж и плохим. Плюс ко всему', ' а точнее минус', ' у Mosaico практически нет вменяемой документации и если в первом я интуитивно понимал как всё работает и как создать свои блоки', ' то тут никакая интуиция мне не помогла. Возможно', ' просто не хватило мозга', ' терпения и желания разбираться', ' не знаю', ' просто гляньте на досуге исходники этих редакторов… А сроки поджимали...\nЧто же делать?!']"
['\n      andrey1s\n    '],['Опыт Rambler Group: как мы начали полностью контролировать формирование и поведение фронтовых React компонентов'],['Блог компании Rambler&Co PHP *Программирование *Symfony *ReactJS *'],"['\r\nСуществует масса способов создать современное веб-приложение', ' однако перед каждой командой неизбежно встает примерно один и тот же набор вопросов: как распределить обязанности фронта и бэка', ' как минимизировать появление дублирующейся логики — например при валидации данных', ' какие библиотеки для работы использовать', ' как обеспечить надежный и прозрачный транспорт между фронтом и бэком и задокументировать код.\n\r\nНа наш взгляд нам удалось реализовать неплохой пример сбалансированного по сложности и профиту решения', ' который мы успешно используем в production на основе Symfony и React.']"
['\n      merrick_krg\n    '],['React hooks — победа или поражение?'],['ReactJS *'],['\nС выходом нового React 16.6.0 в документации появился HOOKS (PROPOSAL). Они сейчас доступны в react 17.0.0-alpha и обсуждаются в открытом RFC: React Hooks. Давайте разберемся что это такое и зачем это нужно под катом.']
['\n      kashey\n    '],['Конечные React Компоненты'],['JavaScript *Тестирование веб-сервисов *ReactJS *'],"['Чем мне нравится экосистема React', ' так это тем', ' что за многими решениями сидит ИДЕЯ. Различные авторы пишут различные статьи в поддержку существующего порядка и обьясняют почему все ""правильно""', ' так что всем понятно — партия держит правильный курс.\nЧерез некоторые время ИДЕЯ немного меняется', ' и все начинается с начала.\nА начало этой истории — разделение компонент на Контейнеры и неКонтейнеры (в народе — Тупые Компоненты', ' простите за мой франзуский).\n']"
['\n      trehleb\n    '],['Создание React-ивного хука usePosition() для получения и отслеживания координат браузера'],['Веб-дизайн *Разработка веб-сайтов *JavaScript *Программирование *ReactJS *'],"['\nЕсли вкратце\nВ этой статье мы создадим React-ивный хук usePosition() для отслеживания геолокации браузера. Под капотом этот хук будет использовать методы getCurrentPosition() и watchPosition() нативного браузерного объекта navigator.geolocation. Финальную версию хука я опубликовал на GitHub и NPM.\nЗачем создавать хук usePosition() в принципе\nОдно из важных преимуществ хуков в React-е — это возможность изолировать логически связанные фрагменты кода в одном месте (в хуке)', ' избежав при этом необходимости смешивания логически не связанных фрагментов кода', ' например', ' в методе компонента componentDidMount().\nПредположим', ' мы хотим получить координаты браузера (latitude и longitude) и после получения координат запросить прогноз погоды или текущую температуру в этом регионе со стороннего сервиса. Код этих двух функциональностей (получения координат и запроса температуры) в React-е часто размещают внутри одного метода componentDidMount(). При этом в методе componentWillUnmount() обычно ""убирают"" за собой', ' вызывая метод clearWatch() для прекращения слежки за локацией браузера. Подобный подход увеличивает размер методов', ' разбивает логически связанные участки кода на части (отдельно подписка и отписка от слежки за локацией браузера) и объединяет логически слабо связанные части кода в один метод (получение координат и температуры). Чтение кода затрудняется', ' так же как и его отладка и поддержка.\nДалее мы попробуем вынести функциональность', ' связанную с получением координат браузера', ' в отдельный хук usePosition()', ' чтобы избежать перечисленные выше трудности.']"
['\n      ru_vds\n    '],['Структурирование React-приложений'],['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['Материал', ' перевод которого мы сегодня публикуем', ' раскрывает подходы', ' применяемые его автором при структурировании React-приложений. В частности', ' речь здесь пойдёт об используемой структуре папок', ' об именовании сущностей', ' о местах', ' где располагаются файлы тестов', ' и о других подобных вещах.\n\r\nОдна из наиболее приятных возможностей React заключается в том', ' что эта библиотека не принуждает разработчика к строгому соблюдению неких соглашений', ' касающихся структуры проекта. Многое в этом плане остаётся на усмотрение программиста. Этот подход отличается от того', ' который', ' скажем', ' принят во фреймворках Ember.js или Angular. Они дают разработчикам больше стандартных возможностей. В этих фреймворках предусмотрены и соглашения', ' касающиеся структуры проектов', ' и правила именования файлов и компонентов.\n\n\n\r\nЛично мне нравится подход', ' принятый в React. Дело в том', ' что я предпочитаю контролировать что-либо сам', ' не полагаясь на некие «соглашения». Однако много плюсов есть и у того подхода к структурированию проектов', ' который предлагает тот же Angular. Выбор между свободой и более или менее жёсткими правилами сводится к тому', ' что именно ближе вам и вашей команде.\n\r\nЗа годы работы с React я испробовал множество различных способов структурирования приложений. Некоторые из применённых мной идей оказались более удачными', ' чем другие. Поэтому здесь я собираюсь рассказать обо всём том', ' что хорошо показало себя на практике. Я надеюсь', ' что вы найдёте здесь что-то такое', ' что пригодится и вам.\n']"
['\n      camelCaseVlad\n    '],['Использование Context API в React для создания глобальной темы приложения'],['ReactJS *'],"['Привет', ' это мой первый пост на Хабр. Надеюсь', ' Вам будет интересно.\n\r\nИтак', ' я хочу начать серию постов', ' напрямую или косвенно касающихся создания ui-kit.\n\n\n\r\nЗадача данного поста: Найти решение контроля темы приложения', ' компоненты которого выполнены в React.js. Будем использовать две глобальные темы — dark и light.\n\r\nВ данном примере я буду использовать модуль create-react-context', ' для создания контекста.']"
['\n      camelCaseVlad\n    '],['Использование Context API в React для создания адаптивного дизайна приложения'],['ReactJS *'],"['Привет', ' данная статья является продолжением вот этого поста', ' где я решил начать серию небольших учебных пособий по созданию UI-Kit. Там описан метод использования контекста для создания темы приложения. Сегодня я хочу дополнить приложение еще одним контекстом', ' который поможет нам показывать компоненты UI', ' основываясь на девайсе юзера.\n\n']"
['\n      makamekm\n    '],['Опыт разработки тестового задания на React для Aviasales'],['ReactJS *'],"['Привет', ' я хотел поделиться опытом разработки тестового задания для Aviasales.\nЯ недавно наткнулся на вакансию React разработчика в компанию Aviasales. Отправил заявку', ' после чего на следующий день мне ответил HR и сообщил', ' что я должен буду сделать тестовое задание. Я крайне не люблю делать тестовые задания', ' так как я должен потратить довольно много времени на их выполнение', ' а в случае неудачи это станет впустую. Но я согласился...']"
['\n      yagorka-gorka\n    '],['Как создать и развернуть Full-Stack React-приложение'],['ReactJS *'],"['Привет', ' Хабр! Представляю вашем вниманию перевод статьи «How to Build and Deploy a Full-Stack React-App» автора Frank Zickert.\n\r\nКомпоненты инфраструктуры позволяют легко создавать', ' запускать и развертывать полноценное React-приложение. С этими React-компонентами вы можете сосредоточиться на написании бизнес-логики вашего приложения. Вам не нужно беспокоиться о его конфигурации.\n\r\nХотите стать full-stack разработчиком? Full-stack приложение дополняет интерактивный веб-интерфейс React сервером и базой данных. Но такое приложение требует гораздо больше настроек', ' чем простое одностраничное приложение.\n']"
['\n      obabichev\n    '],['React Token Auth'],['JavaScript *ReactJS *'],"['\nProblem\nAuthorization is one of the first problems developers face upon starting a new project. And one of the most common types of authorization (from my experience) is the token-based authorization (usually using JWT). \nFrom my perspective', ' this article looks like ""what I wanted to read two weeks ago"". My goal was to write minimalistic and reusable code with a clean and straightforward interface. I had the next requirements for my implementation of the auth management:\n\nTokens should be stored in local storage\nTokens should be restored on page reload\nAccess token should be passed in the network requests\nAfter expiration access token should be updated by refresh token if the last one is presented\nReact components should have access to the auth information to render appropriate UI\nThe solution should be made with pure React (without Redux', ' thunk', ' etc..)\n']"
['\n      Drag13\n    '],"['React', ' performance и -500 миллисекунд на старте — история наших оптимизаций в цифрах']",['Высокая производительность *Разработка веб-сайтов *JavaScript *Программирование *Клиентская оптимизация *'],"['\nДавайте немного отвлечемся от коронавируса', ' и поговорим о чем-то техническом. Например', ' о том', ' как мы пытались улучшить время холодного старта одного react-приложения и что из этого получилось. Кому интересна тема производительности и быстрого web-а в целом — прошу под кат. В конце будет небольшой опрос о цене/необходимости подобных оптимизаций.']"
['\n      psychol\n    '],['Делаем страницу на React с базой сотрудников при помощи Airtable и Quarkly'],['Блог компании Quarkly JavaScript *API *ReactJS *'],"['Слышали про такой инструмент', ' как Airtable', ' но не знали', ' с чего начать? Тогда приглашаем в мир визуального программирования построения БД!\nЭтим постом мы начинаем цикл обучающих статей', ' в которых будем давать практические примеры работы с нашим инструментом Quarkly. В этом уроке мы сделаем простое веб-приложение', ' которое будет показывать сотрудников компании. При создании приложения ни один сотрудник РЖД не пострадал.\nФронт будем делать при помощи Quarkly', ' а данные подтягивать из базы в Airtable. На выходе получим react-приложение', ' синхронизированное с базой данных.']"
['\n      ifisunov\n    '],['Splunk-react-app или создание дашбордов любой сложности в Splunk'],['Разработка веб-сайтов *Node.JS *ReactJS *'],"['\r\nЕсли в своей работе вы используете систему сбора', ' анализа и обработки машинных данных Splunk', ' то рано или поздно вы столкнетесь с проблемой визуализации этих данных и', ' скорее всего', ' инструментов', ' доступных из коробки', ' вам будет недостаточно. Вы захотите гибкости в вопросах построения и визуализации UI любой сложности', ' при этом с возможностью использования доступных от сообщества библиотек и фреймворков. \n\r\nВ этой статье я поделюсь своим опытом создания дашбордов в Splunk', ' которые будут отвечать любым требованиям к сложности UI и значительно расширят набор доступных к использованию инструментов.']"
['\n      AlexSergey\n    '],['React boilerplate — Rocket React'],['Разработка веб-сайтов *Node.JS *ReactJS *'],['\r\nХочу представить вашему вниманию boilerplate (skeleton) на базе React.js + Backbone для быстрого старта разработки приложения любой сложности. Эта связка помогла нашей команде в срок сделать сложное приложение с минимальным количеством проблем а простота позволила быстро подключать новых разработчиков в процесс.\n']
['\n      kosmaks\n    '],['О React Native'],['Разработка мобильных приложений *ReactJS *'],"['\n\r\nНесколько советов о том', ' что нужно знать', ' чтобы писать (или не писать) приложения под React Native. \n\r\nСразу оговорюсь', ' что я ни разу не писал приложения под iOS', ' однако участвовал уже минимум в 4 проектах с React.js', ' немного разбираюсь в objective-c и знаком с процессом разработки под Android.\n\r\nПриложение довольно простое (todo лист)', ' но думаю', ' что это хороший старт.\n\r\nЗадача: написать таск менеджер с монетизацией. Есть наброски интерфейса на invisionapp', ' остальное — дело техники.\n']"
['\n      lavrton\n    '],['Оптимизируем React приложение для отображения списка элементов'],['JavaScript *Canvas *ReactJS *'],"['Отображение списка (множества) элементов на странице — это стандартная задача для практически любого web-приложения. В этом посте я хотел бы поделиться некоторыми советами по повышению производительности.\n\r\nДля тестового примера я создам небольшое приложение', ' которое рисует множество «целей» (кругов) на элементе canvas. Я буду использовать redux как хранилище данных', ' но эти советы подойдут и для многих других способов хранения состояния.\r\nТак же эти оптимизации можно применять с react-redux', ' но для простоты описания я не буду использовать эту библиотеку.\n\r\nДанные советы могут повысить производительность приложения в 20 раз.\n\n']"
['\n      Riim\n    '],['Пишем простое приложение на React с использованием библиотеки cellx'],['JavaScript *ReactJS *'],"['Идея написания статьи появилась в этой ветке', ' может кому-то будет интересно и её почитать. Сразу скажу', ' писатель (в том числе кода) из меня так себе', ' но я буду стараться. \nПисать будем как обычно тудулист', ' надоел конечно до чёртиков', ' но что-то лучшее для демонстрации придумать сложно. Сразу ссылка на работающее приложение: жмяк (код).\n']"
['\n      vtikunov\n    '],['Неконтролируемые компоненты в React'],['Разработка веб-сайтов *JavaScript *ReactJS *'],"['\nПродолжение серии переводов раздела ""Продвинутые руководства"" (Advanced Guides) официальной документации библиотеки React.js.\nНеконтролируемые компоненты в React\nВ большинстве случаев', ' мы рекомендуем использовать контролируемые компоненты для реализации форм. В контролируемом компоненте', ' данные формы обрабатываются компонентом React. Есть альтернативный вариант — это неконтролируемые компоненты', ' в которых данные формы обрабатываются самим DOM.']"
['\n      ru_vds\n    '],['Анализ производительности React 16 приложений с помощью инструментов разработчика Chrome'],['Блог компании RUVDS.com Разработка веб-сайтов *Анализ и проектирование систем *Google Chrome ReactJS *'],"['React — это один из ведущих фронтенд-фреймворков не только потому', ' что за ним стоит Facebook', ' но и благодаря его высокой производительности. Виртуальный DOM React известен благодаря эффективному рендерингу компонентов. Но как быть', ' если эти компоненты внезапно становятся не такими уж и быстрыми? Куда стоит посмотреть? Как это исправить?\n\r\nВ данном материале', ' на примере реального React-приложения', ' будут показаны новые мощные средства мониторинга производительности кода с использованием инструментов разработчика Chrome. Этими средствами может воспользоваться любой React-разработчик для поиска проблем в медленных компонентах.\n\n']"
['\n      ru_vds\n    '],['Тестирование компонентов React'],['Блог компании RUVDS.com Разработка веб-сайтов *Тестирование веб-сервисов *ReactJS *'],"['Овидиу Черешес', ' автор статьи', ' перевод которой мы сегодня публикуем', ' написал тысячи тестов пользовательских интерфейсов. Он говорит', ' что тестирование должно вселять в разработчика уверенность в том', ' что его программы работают именно так', ' как он ожидает', ' и', ' в том', ' что они продолжат делать своё дело и после того', ' как их модифицируют и расширяют. Однако', ' тестирование пользовательских интерфейсов редко даёт уверенность. Вместо этого оно часто ведёт к разочарованиям и к мыслям о непродуктивности программистского труда.\n\n\r\nОн говорит', ' что поднимает вопрос тестирования интерфейсов', ' написанных на React', ' так как сталкивался с характерными для этого процесса проблемами за годы до широкого распространения этого фреймворка', ' и потратил на их решение уйму времени. Он думает', ' что ему удалось подобрать инструменты и методы работы', ' которые позволяют сделать тестирование компонентов React столь же простым', ' как и их создание.\n\r\nОн начнёт рассказ с двух базовых принципов', ' понимание которых важно для нахождения правильного подхода к тестированию', ' далее будут даны примеры и представлен один полезный инструмент', ' способный значительно облегчить жизнь тем', ' кому приходится тестировать React-приложения.']"
['\n      EFS_programm\n    '],['Разрабатываем React-компоненты многократного использования'],['Блог компании Сбер JavaScript *Программирование *Разработка мобильных приложений *ReactJS *'],"['В прошлом году мы рассказывали', ' как устроен фронтенд в Программе «Единая фронтальная система»', ' о библиотеке элементов и нашем подходе к переиспользованию UI компонентов. Сегодня предлагаем сравнить несколько подходов к разработке React-компонентов', ' спасибо Cory House за отличный материал!']"
['\n      sereje4kin\n    '],"['Frontend на CodeFest: React', ' Javascript и лучшие практики']",['Блог компании CodeFest Разработка веб-сайтов *JavaScript *Программирование *Разработка мобильных приложений *'],['\n\r\nПродолжаем рассказывать о программе CodeFest 2018. На очереди — мощный фронт докладов фронтенд-секции.']
['\n      IvanGanev\n    '],['Десять заповедей React компонентов'],['Разработка веб-сайтов *JavaScript *ReactJS *'],"['\nНаписано Kristofer Selbekk', ' в сотрудничестве с Caroline Odden. Основано на лекции с таким же названием и с теми же людьми', ' состоявшейся на встрече ReactJS в Осло в июне 2019 года.От переводчика — оригинальное название The 10 Component Commandments не упоминает React', ' но большинство примеров и рекомендаций относятся именно к реакту', ' к тому же статья выложена под react тэгом и написана реакт разработчиками.\nНе легко создавать компоненты которыми будут пользоваться многие разработчики. Вы должны очень тщательно продумать какие пропсы использовать', ' если эти пропсы будут частью общедоступного API.\nВ этой статье мы сделаем краткое введение в некоторые лучшие практики по разработке API в целом', ' а также сформируем десять заповедей', ' применяя которые вы сможете создавать компоненты', ' которыми ваши коллеги-разработчики будут рады пользоваться.']"
['\n      ilyalazarev\n    '],"['Создание приложения Sticky Notes с использованием 8base', ' GraphQL и React']",['JavaScript *Программирование *ReactJS *'],"['\n\r\nПосмотреть демо версию программы здесь.\n\r\nВо все времена тайм менеджмент был связан для меня с огромной борьбой', ' запланированные задачи забыты', ' заметки потеряны', ' потому что они распределены по нескольким приложениям', ' сохраняющим заметки. Решение заключается вовсе не в приложении для персонализированных заметок', ' которое я предлагаю вам создать', ' хотя есть вероятность', ' что вы будете им пользоваться из-за времени', ' которое вы в него вложите.']"
['\n      Asya_Dyu\n    '],['Reagent: Минималистичный React для ClojureScript'],['Программирование *ReactJS *Учебный процесс в IT Clojure *'],"['Хабр', ' привет.\n\r\nЯ — PM', ' которые лезет в то', ' что его может сожрать. Так что', ' я перевела часть документации по Reagent', ' если будет полезно', ' выложу продолжение.\n\n\nIn the no-holds-barred world of coding', ' the end justifies the extreme.\n\nВведение в Reagent\nReagent обеспечивает минималистичное взаимодействие между ClojureScript и React. Он позволяет вам создавать эффективные компоненты React', ' используя только простые функции ClojureScript и данные', ' которые описывают пользовательский интерфейс', ' используя Hiccup-подобный синтаксис.\n\r\nЦель Reagent — сделать возможным создание произвольно сложных пользовательских интерфейсов', ' используя пару основных понятий', ' и быть по-умолчанию достаточно быстрым', ' чтобы вам редко приходилось думать о производительности.\n\r\nПростейший компонент Reagent \n\n\nможет выглядеть примерно так:\n(defn simple-component []\n  [:div\n   [:p ""I am a component!""]\n   [:p.someclass\n    ""I have "" [:strong ""bold""]\n    [:span {:style {:color ""red""}} "" and red ""] ""text.""]])\n\n']"
['\n      noorsoftprod\n    '],['Как подружить React Native и Java код на Android'],['JavaScript *Разработка мобильных приложений *Разработка под Android *'],"['Необходимость работы с нативной частью приложения React Native обычно возникает тогда', ' когда какой-либо сервис не имеет специального api для RN. Таким образом', ' хороший разработчик должен уметь', ' как минимум', ' представление того', ' как работает нативная часть приложения. В данной статье будут приведены примеры работы взаимодействия приложения React Native c Android.\n\nНативный модуль\r\nДля начала создадим новый класс в папке android/app/src/main/java класс CustomModule:\n\npackage com.awesomeproject;\nimport android.widget.Toast;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.bridge.ReactContextBaseJavaModule;\nimport com.facebook.react.bridge.ReactMethod;\n\nimport java.util.Map;\nimport java.util.HashMap;\n\npublic class CustomModule extends ReactContextBaseJavaModule {\n    CustomModule (ReactApplicationContext context) {\n        super(context);\n        reactContext = context;\n    }\n\n    @Override\n    public String getName() {\n        return ""CustomModule"";\n    }\n\n    private static ReactApplicationContext context;\n}\r\nДанный класс содержит обязательный метод getName(). Именно по тому имени', ' который вернет данный метод можно получить доступ к нативному модулю из кода Javascript (об этом далее).\r\nОбратим также внимание на то', ' что конструктор класса принимает контекст приложения в качестве аргумента. Контекст приложения необходим', ' когда мы хотим взаимодействуем с компонентами Android.\n\r\nСоздадим метод класса CustomModule', ' который будет вызываться из кода Javascript:\n\n@ReactMethod\n    public void show(String message', ' int duration) {\n        Toast.makeText(context', '""Hello world""', ' Toast.LENGTH_LONG).show();\n    }\r\nЗаметим', ' что для того', ' чтобы метод был доступен в RN', ' необходимо использовать декоратор “@ReactMethod”. ']"
['\n      MaxRokatansky\n    '],['Изучение методов кэширования в React'],['Блог компании OTUS Программирование *ReactJS *'],"['Сбор данных в React — это одно. Хранение и кэширование этих данных — это другая история. Возможности кажутся бесконечными', ' а различия часто тонкие', ' что делает выбор правильной техники иногда немного сложным.Сегодня мы исследуем различные методики и рассмотрим все их детали и тонкости. Следует ли использовать useMemo или memoization? Должен ли я хранить данные с помощью useState и context? Когда мы закончим', ' вы должны быть в состоянии сделать осознанный выбор в отношении кэширования данных. Вы узнаете обо всех тонкостях.И много анимированных GIF-файлов. Что еще вы можете желать?Давайте начнем!']"
['\n      rubender\n    '],"['Мой стейт менеджер для React', ' Preact', ' Inferno']",['JavaScript *'],"['Люблю изобретать велосипеды и прочие нужные предметы заново. Получается не всегда хорошо', ' но процесс интересный. Предлагаю вашему вниманию библиотеку  управления стейтом для React', ' Preact (вес всего 4.8Кб). Библиотека еще находится  разработке', ' но уже можно попробовать.Начнем с примера всеми любимого TODO органайзера. Исходный код на гитхабе. Для начала создадим основной компонент main.js. ']"
['\n      yury-dymov\n    '],['Интервью c Max Stoiber и Сергеем Лапиным: Выбираем state management решение для React.js'],['Блог компании JUG Ru Group Разработка веб-сайтов *JavaScript *ReactJS *'],"['\n\r\nВ преддверии конференции HolyJS мы поговорили с Максом Штойбером (одним из организаторов React.js Vienna Meetup', ' создателем react-boilerplate', ' принимавшим участие и в создании Carte Blanche) и Сергеем Лапиным (членом программного комитета HolyJS) и обсудили', ' как выбрать state management решение. \n\r\nRedux', ' MobX', ' Relay или другая реализация Flux? Практические рекомендации и лучшие практики.\n\n Макс Штойбер\n– Макс', ' привет! Для начала коротко представься и расскажи о себе.\n\r\n– Привет! Меня зовут Макс Штойбер', ' я Open Source разработчик', ' работаю в компании Thinkmill. Мы делаем всякие прикольные штуки вроде KeystoneJS', ' разрабатываем веб- и мобильные приложения', ' вносим свой вклад в улучшение User Experience.\n\n– Звучит круто! Расскажи', ' как давно ты всем этим занимаешься', ' когда открыл для себя React', ' и в каких проектах участвовал?\n']"
['\n      GREENpoint\n    '],['БЭМ + React: гибкая архитектура дизайн-системы'],['Блог компании Альфа-Банк Open source *CSS *JavaScript *HTML *'],"['\n\n\r\nДизайн — это фашизм. Фашизму нужна питательная среда. Он начинает раскрываться в полной мере только на крупных масштабах. Идеальная среда для фашизма — это большая компания с огромным количеством продуктов. Например', ' Google или… Альфа-Банк. Фашизм априори не гибок…']"
['\n      ru_vds\n    '],['Отладка React-приложений в VS Code'],['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *Visual Studio *Отладка *'],"['\n\r\nПрошли те дни', ' когда мне', ' в процессе разработки', ' приходилось тратить время', ' переключаясь между терминалом', ' браузером и редактором. Теперь всё делается иначе — быстрее и удобнее. Сегодня я расскажу об оптимизации повседневных дел React-разработчика. А именно', ' речь пойдёт о том', ' как связать Visual Studio Code и Google Chrome. Это даст возможность отлаживать браузерный код в редакторе.\n\n\nСредства отладки VS Code и jest от Facebook']"
['\n      atomAltera\n    '],['Как сделать поиск пользователей по GitHub используя React + RxJS 6 + Recompose'],['JavaScript *ReactJS *'],"['\nЭта статья рассчитана на людей имеющих опыт работы с React и RxJS. Я всего лишь делюсь шаблонами', ' которые я посчитал полезными для создания такого UI.']"
['\n      ru_vds\n    '],"['Учебный курс по React', ' часть 25: практикум по работе с формами']",['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['В сегодняшней части перевода учебного курса по React вам предлагается выполнить практическое задание по работе с формами.\n\n\n\r\n→ Часть 1: обзор курса', ' причины популярности React', ' ReactDOM и JSX\r\n→ Часть 2: функциональные компоненты\r\n→ Часть 3: файлы компонентов', ' структура проектов\r\n→ Часть 4: родительские и дочерние компоненты\r\n→ Часть 5: начало работы над TODO-приложением', ' основы стилизации\r\n→ Часть 6: о некоторых особенностях курса', ' JSX и JavaScript\r\n→ Часть 7: встроенные стили\r\n→ Часть 8: продолжение работы над TODO-приложением', ' знакомство со свойствами компонентов\r\n→ Часть 9: свойства компонентов\r\n→ Часть 10: практикум по работе со свойствами компонентов и стилизации\r\n→ Часть 11: динамическое формирование разметки и метод массивов map\r\n→ Часть 12: практикум', ' третий этап работы над TODO-приложением\r\n→ Часть 13: компоненты', ' основанные на классах\r\n→ Часть 14: практикум по компонентам', ' основанным на классах', ' состояние компонентов\r\n→ Часть 15: практикумы по работе с состоянием компонентов\r\n→ Часть 16: четвёртый этап работы над TODO-приложением', ' обработка событий\r\n→ Часть 17: пятый этап работы над TODO-приложением', ' модификация состояния компонентов\r\n→ Часть 18: шестой этап работы над TODO-приложением\r\n→ Часть 19: методы жизненного цикла компонентов\r\n→ Часть 20: первое занятие по условному рендерингу\r\n→ Часть 21: второе занятие и практикум по условному рендерингу\r\n→ Часть 22: седьмой этап работы над TODO-приложением', ' загрузка данных из внешних источников\r\n→ Часть 23: первое занятие по работе с формами\r\n→ Часть 24: второе занятие по работе с формами\r\n→ Часть 25: практикум по работе с формами\r\n→ Часть 26: архитектура приложений', ' паттерн Container/Component\r\n→ Часть 27: курсовой проект']"
['\n      AlexanderShutov\n    '],['Как управлять React Data Grid через Redux'],['Блог компании Directum Разработка веб-сайтов *JavaScript *ReactJS *'],"['Это продолжение предыдущей статьи: Зачем писать свой React Data Grid в 2019\nДля чего нужен Redux? Ответов много. Например', ' чтобы работать с общими данными в разных React-компонентах. Но можно воспринимать Redux еще как способ манипулирования компонентой. Сам взгляд интересный: любой React-компонент может управлять другим React-компонентом через Redux.\nВозьмём React-компоненту', ' которая отображает данные в виде строк и колонок (Data Grid', ' грид). Каким функционалом у нее можно управлять? Составом колонок и строк. Выделением. Хорошо бы и прокруткой данных.\n']"
['\n      ru_vds\n    '],"['История о V8', ' React и падении производительности. Часть 2']",['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['Сегодня мы публикуем вторую часть перевода материала', ' посвящённого внутренним механизмам V8 и расследованию проблемы с производительностью React.\n\n\n\r\n→ Первая часть']"
['\n      Ksamsonov\n    '],['Формируем стратегию работы с ошибками в React'],['Разработка веб-сайтов *JavaScript *'],"['Как сделать падение мягким?\n\n\r\nЯ не нашел исчерпывающего руководства по обработке ошибок в React приложениях', ' поэтому решил поделиться полученным опытом в этой статье. Статья рассчитана на начинающих разработчиков и может стать некоторой отправной точкой к систематизации обработки ошибок в приложении.\n']"
['\n      Reksoft\n    '],"['Типичные ошибки джунов', ' использующих React']",['Блог компании Reksoft Разработка веб-сайтов *JavaScript *Программирование *ReactJS *'],"['Об основных ошибках junior-разработчиков', ' использующих React. На чем сыпятся джуны', ' и как с этим жить. Перевод статьи\xa0«Mistakes Junior React Developers Make» от специалиста Frontend практики «Рексофт».\n\n']"
['\n      Webgev\n    '],['Локализуем приложение на React Native'],['Разработка мобильных приложений *Локализация продуктов *'],['В ходе разработки одного из наших приложений нам понадобилось сделать поддержку мультиязычности. Задача была дать пользователю возможность менять язык (русский и английский) интерфейса приложения. При этом текста и контент должны переводиться «на лету». \n\r\nДля этого нам нужно было решить 2 задачи:\n\n\nОпределить текущий язык приложения.\nИспользование глобального состояния для перевода «на лету».\n\r\nВ этой статья попробую подробно расписать как мы решили данные задачи. И так поехали. \n\nОпределяем текущий язык устройства']
['\n      soltankirill\n    '],['Как использовать Axios в React'],['JavaScript *Программирование *ReactJS *'],"['\n\r\nВ этой статье вы узнаете как использовать библиотеку Axios в React. \n\r\nРассмотрим все на примере запросов на сервер', ' отобразим полученные данные в таблице', ' сдалаем компонент проверки загрузки и все это используя React Hooks. \n\nЧто такое Axios? \r\nAxios это один из самых популярных HTTP клиентов для браузеров и node.js', ' основанный на промисах.\n\r\nВ Axios есть поддержка запросов', ' получение ответов от сервера', ' их трансформация и автоматическая конвертация в JSON.\n']"
['\n      MaxRokatansky\n    '],['Базовый формат моков React компонентов'],['Блог компании OTUS JavaScript *Тестирование мобильных приложений *ReactJS *'],"['В преддверии старта курса\xa0«Автоматизация тестирования на JavaScript» продолжаем публиковать перевод серии полезных статейВ первой части этой серии статей мы рассмотрели', ' почему моки на самом деле полезны.В этой части я расскажу о базовом формате маков React компонентов.']"
['\n      emdobro\n    '],['Использование Effector в стеке React + TypeScript'],['Блог компании ДомКлик JavaScript *Интерфейсы *ReactJS *TypeScript *'],"['В этой статье я поделюсь своим кратким обзором внедрения стейт-менеджера Effector в продуктовый проект на стеке React + TypeScript', ' а также покажу на примере', ' как легко это можно сделать.']"
['\n      merrick_krg\n    '],['React Server Components — что это?'],['JavaScript *ReactJS *'],"['Буквально неделю назад', ' команда реакт опубликовала в своем блоге о новом RFC.  Давайте разберемся', ' что это за зверь и зачем он нужен.']"
['\n      aio350\n    '],['5 подходов к стилизации React-компонентов на примере одного приложения'],['Разработка веб-сайтов *JavaScript *Программирование *ReactJS *'],"['\n\r\nДоброго времени суток', ' друзья!\n\r\nСегодня я хочу поговорить с вами о стилизации в React.\n\r\nПочему данный вопрос является актуальным? Почему в React существуют разные подходы к работе со стилями?\n\r\nКогда дело касается разметки (HTML)', ' то React предоставляет в наше распоряжение JSX (JavaScript и XML). JSX позволяет писать разметку в JS-файлах — данную технику можно назвать «HTML-в-JS».\n\r\nОднако', ' когда речь идет о стилях', ' то React не предоставляет каких-либо специальных инструментов (JSC?). Поэтому каждый разработчик волен выбирать такие инструменты по своему вкусу.\n']"
['\n      0xy\n    '],['Релиз TypeScript 1.6: не только React'],['Разработка веб-сайтов *JavaScript *TypeScript *'],"['Компания Microsoft активно выпускает новые версии TypeScript. Товарищи разработчики объявили о выпуске бета версии TS версии 1.6 аж второго сентября. А уже 16 сентября был выпущен релиз. Скоростные ребята. Но при этом релиз как-то прошел незамеченным (не для всех', ' но все же). На Хабре как-то не было упоминаний (я не нашел). А посему немного информации по улучшениям.\n\r\nОдна из мощных фич этой версии заключается в нативной поддержке синтаксиса React/JSX. Но это не все. Вот перечень некоторых нововведений:\n\n\nГенераторы ES6\nЛокальные типы\nАлиасы на генерик типы\nКлассовые выражения (анонимные классы)\nПоддержка JSX\nАбстрактные классы и методы\nНовый флаг –init\nНовая секция “exclude” в конфигурационном файле tsconfig.json\n\r\nРассмотрим наиболее интересные из них. Го под кат', ' если интересно.']"
['\n      roman01la\n    '],['Управление состоянием и эффективный рендеринг в приложениях на React'],['JavaScript *ReactJS *'],"['Привет! Я хочу рассказать об очередной реализации Flux. А точнее о минимальной реализации', ' которую мы успешно используем в рабочих проектах. И о том', ' как мы пришли к этому. На самом деле многие так или иначе сами приходят к подобному решению. Описанное здесь решение является лишь вариацией ему подобных.\n\r\nВ Redradix мы уже около года разрабатываем веб-приложения на React и в течении этого времени у каждого из членов команды возникали идеи', ' которые мы постепенно выносили в свое', ' домашнее решение. Мы сразу же отказались от хранилищ в классическом Flux в пользу единого глобального состояния. Хранилища всего лишь выполняют роль сеттеров/геттеров в состояние приложения. Чем хорошо глобальное состояние? Одно состояние — это один конфиг всего приложения. Его без труда можно заменить другим', ' сохранить или передать по сети. Больше нету зависимостей между хранилищами.']"
['\n      BoryaMogila\n    '],['Универсальний (изоморфный) «шлем» для React js или Как удобно работать с head на React js'],['JavaScript *Node.JS *ReactJS *'],"['\r\nРебята из nfl вылечили одну из болей React js', ' работу с head. Речь пойдет о библиотеке react-helmet. Она работает как на клиенте', ' так и на сервере.\n']"
['\n      jarosluv\n    '],['Как Phoenix убивает React'],['Разработка веб-сайтов *JavaScript *Erlang/OTP *ReactJS *Elixir/Phoenix *'],"['\n\nОколо полутора лет назад мы написали внутренний инструмент для корпоративных анонсов. Изначально в нём использовался Phoenix для бэкенда и React для фронтенда. Тем самым мы получали преимущества Redux и каналов Phoenix при доставки обновлений в браузер в реальном времени.\nЭто позволило получить великолепный живой интерфейс', ' но снизило скорость разработки и стало причиной малого количества участвующих в процессе разработчиков. Около трёх месяцев назад мы приняли решение выкинуть React и вернуться к серверному рендерингу.\nПочему мы решили заменить React\nОбновление в реальном времени позволяет лучше погрузиться в работу с приложением', ' но при этом имеет дополнительные издержки.']"
['\n      one_more\n    '],['Валидация React компонентов с помощью Livr.js'],['JavaScript *ReactJS *'],"['Пару лет назад я увидел на Хабре статью про LIVR и с тех пор использую библиотеку на всех проектах. С переходом на React я адаптировал для валидации ее же', ' т.к. существующие решения не предлагали гибкости которой мне хотелось. Свое решение я уже использую на двух проектах и решил выложить в npm — может кому-то еще оно покажетсяя удобным. \r\nПакет называется react-livr-validation.']"
['\n      bushstas\n    '],['Простой в использовании контейнер состояния для React приложения под названием Xstore'],['ReactJS *'],"['Уважаемые коллеги', ' представляю вашему вниманию и на ваше осуждение контейнер для управления состоянием React приложения xstore. Он определенно является таким маленьким детским велосипедом рядом с большим и сверкающим мотоциклом Redux. Все мы программисты JavaScript являемся такой большой и не сбавляющей обороты фабрикой по производству велосипедов.\nДля более менее просто начинающих или начинающих свое знакомство с React JavaScript программистов Redux может показаться несколько сложной штукой', ' которая иногда непонятно как работает и к которой сложно ""законнектиться""', ' хочется чего-то попроще', ' чего-то похожего на данный маленький велосипед.\nДавайте рассмотрим его поближе.\nУстановка\nnpm install --save xstore']"
['\n      ru_vds\n    '],"['Учебный курс по React', ' часть 7: встроенные стили']",['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['Сегодня', ' в следующей части курса по React', ' мы поговорим о встроенных стилях.\n\n\n\r\n→ Часть 1: обзор курса', ' причины популярности React', ' ReactDOM и JSX\r\n→ Часть 2: функциональные компоненты\r\n→ Часть 3: файлы компонентов', ' структура проектов\r\n→ Часть 4: родительские и дочерние компоненты\r\n→ Часть 5: начало работы над TODO-приложением', ' основы стилизации\r\n→ Часть 6: о некоторых особенностях курса', ' JSX и JavaScript\r\n→ Часть 7: встроенные стили\r\n→ Часть 8: продолжение работы над TODO-приложением', ' знакомство со свойствами компонентов\r\n→ Часть 9: свойства компонентов\r\n→ Часть 10: практикум по работе со свойствами компонентов и стилизации\r\n→ Часть 11: динамическое формирование разметки и метод массивов map\r\n→ Часть 12: практикум', ' третий этап работы над TODO-приложением\r\n→ Часть 13: компоненты', ' основанные на классах\r\n→ Часть 14: практикум по компонентам', ' основанным на классах', ' состояние компонентов\r\n→ Часть 15: практикумы по работе с состоянием компонентов\r\n→ Часть 16: четвёртый этап работы над TODO-приложением', ' обработка событий\r\n→ Часть 17: пятый этап работы над TODO-приложением', ' модификация состояния компонентов\r\n→ Часть 18: шестой этап работы над TODO-приложением\r\n→ Часть 19: методы жизненного цикла компонентов\r\n→ Часть 20: первое занятие по условному рендерингу\r\n→ Часть 21: второе занятие и практикум по условному рендерингу\r\n→ Часть 22: седьмой этап работы над TODO-приложением', ' загрузка данных из внешних источников\r\n→ Часть 23: первое занятие по работе с формами\r\n→ Часть 24: второе занятие по работе с формами\r\n→ Часть 25: практикум по работе с формами\r\n→ Часть 26: архитектура приложений', ' паттерн Container/Component\r\n→ Часть 27: курсовой проект']"
['\n      IvanGanev\n    '],"['Пишем API для React компонентов', ' часть 6: создаем связь между компонентами']",['JavaScript *ReactJS *'],"['Пишем API для React компонентов', ' часть 1: не создавайте конфликтующие пропсы\n\nПишем API для React компонентов', ' часть 2: давайте названия поведению', ' а не способам взаимодействия\n\nПишем API для React компонентов', ' часть 3: порядок пропсов важен\n\nПишем API для React компонентов', ' часть 4: опасайтесь Апропакалипсиса!\n\nПишем API для React компонентов', ' часть 5: просто используйте композицию\n\nПишем API для React компонентов', ' часть 6: создаем связь между компонентамиПоговорим о формах.\nСкорее всего вы читали кучу статей об управлении state состояниями в формах', ' но это не одна из таких статей. Вместо этого я хочу поговорить о том как устроены формы и их API.\n\nЗдесь много чего происходит', ' взглянем на API']"
['\n      Leono\n    '],['Полный цикл тестирования React-приложений. Доклад Авто.ру'],['Блог компании Яндекс CSS *JavaScript *Тестирование веб-сервисов *ReactJS *'],"['Стремление уйти от ручного регрессионого тестирования — хороший повод внедрить автотесты. Вопрос', ' какие именно? Разработчики интерфейсов Наталья Стусь и Алексей Андросов вспомнили', ' как их команда прошла несколько итераций и построила тестирование фронтенда в Авто.ру на базе Jest и Puppeteer: юнит-тесты', ' тесты на отдельные React-компоненты', ' интеграционные тесты. Самое интересное из этого опыта — изолированное тестирование React-компонентов в браузере без Selenium Grid', ' Java и прочего.\n\n\n\r\nАлексей:\r\n— Для начала надо немного рассказать', ' что такое Авто.ру. Это сайт по продаже машинок. Там есть поиск', ' личный кабинет', ' автосервисы', ' запчасти', ' отзывы', ' кабинеты дилеров и многое другое. Авто.ру — очень большой проект', ' очень много кода. Весь код мы пишем в большой монорепе', ' потому что это все перемешивается. Одни и те же люди делают схожие задачи', ' например', ' для мобильных и десктопа. Получается много кода', ' и монорепа нам жизненно необходима. Вопрос — как ее тестировать?\n']"
['\n      Rapprogtrain\n    '],['Создание мобильного приложения на React Native'],['JavaScript *Разработка под Android *ReactJS *'],"['\n\r\nВсем привет. Это будет первой частью в создании нашего мобильного приложения. \n\r\nМобильное приложение мы будем делать с помощью react native и expo. Мы создадим не большое новостное приложение. Для этого мы будем использовать php через rest api.\n\r\nВ нашем приложении мы будем выводить статьи', ' которые будут находиться в phpmyadmin.']"
['\n      MaxRokatansky\n    '],['Реализация анимации в React Native'],['Блог компании OTUS Программирование *ReactJS *'],"['Перевод статьи подготовлен специально для студентов курса «ReactJS/React Native-разработчик».\n\n \n\r\nТрудно себе представить мобильное приложение', ' в котором нет анимации. В вебе анимации обычно простые', ' если они есть вообще (максимум – одна страница сменяет другую). Анимации же в мобильных приложениях требуют к себе совсем другого внимания.']"
['\n      raoffonom\n    '],['React Native init vs Expo'],['Разработка мобильных приложений *ReactJS *'],"['\n\nВ официальной документации React Native', ' из раздела Getting Started', ' мы узнаем о том', ' что у нас есть два пути запуска мобильного приложения: expo и react-native cli. Пользователи Windows и Linux', ' а таких большинство', ' зайдя во вкладку Building Projects with Native Code и выбирая Target OS: iOS', ' встречают надпись', ' которая отправляет их на стартер Expo', ' но перед тем как ставить Expo', ' предлагаю ознакомиться с информацией в следующей таблице и поберечь свою голову не только от тех тумаков', ' что получил я: ']"
['\n      gor2991\n    '],['Несколько способов оптимизировать React-Redux приложение'],['ReactJS *'],"['Казалось бы зачем рассказывать о Redux в 2020ом году. Ведь есть столько замечательных альтернатив на поприще стейт-менеджеров (например). Ведь есть с десяток причин не любить Redux', ' о которых исписано немало статей', ' и прозвучало немало докладов. Однако кое-чего у него не отнять — на нём можно написать большой', ' функциональный', ' поддерживаемый и быстрый веб-сайт. Ниже я расскажу о приёмах', ' которые помогают это сделать с использованием react-redux. Интересно? Добро пожаловать под кат.\n']"
['\n      Webgev\n    '],['React Native — сохранение фотографий и видео в галерею устройства'],['Разработка мобильных приложений *ReactJS *'],['Сохранение фотографий и видео на устройство android/ios вызывает у многих разработчиков React Native сложность. В этой статье я покажу как можно легко и безболезненно сохранять фотографии по url на устройство. \n\r\nДля начала нам понадобятся две библиотеки:']
['\n      mrevgenx\n    '],"['Как серверу на Django знать своих клиентов на React в лицо', ' практическое руководство']",['Веб-дизайн *Django *ReactJS *'],"['В предыдущей статье я писал веб-приложение и совершенно бездумно реализовал там авторизацию', ' построенную на JWT. В этой статье я хотел бы устроить небольшое погружение в технические детали того', ' как это устроено', ' перебрать разные альтернативы.\nДостаточно несложно в React нарисовать форму', ' где можно позволить пользователям вводить свои учетные данные', ' включающие в себя логин и пароль. Не стоит практически никаких усилий', ' чтобы на Django сверить пароль', ' соответствующий логину в базе данных. Но что дальше? Обзор получился достаточно объемный с примерами кода', ' которые помогут воссоздать реализацию всех схем аутентификации/авторизации.\n']"
['\n      Sin9k\n    '],['Все ли вы знаете о React key?'],['JavaScript *ReactJS *'],"['Привет', ' Хабр!\nЯ время от времени провожу собеседования', ' и когда вопрос касается React key', ' чаще всего я вижу недоумевающий взгляд', ' намекающий “Да', ' там и спрашивать вроде нечего?”. Если Вам кажется React key понятным и простым', ' тогда давайте проведем мини собеседование (данная статья является расшифровкой видео).']"
['\n      MaxRokatansky\n    '],['Викторина по JavaScript и React'],['Блог компании OTUS JavaScript *Программирование *ReactJS *'],"['Насколько хорошо вы знаете JavaScript? Вы стремитесь подняться на следующую ступень карьерной лестницы?Я составил викторину из 10 вопросов по JavaScript. Посмотрим', ' сможете ли вы ответить на них', ' не используя консоль браузера. Надеюсь', ' вы узнаете что-то новенькое. Ответы даны в конце статьи.']"
['\n      sc_pro_ion\n    '],['Как внедрить In-app Updates в Android-приложение на React Native'],['Разработка мобильных приложений *Разработка под Android *ReactJS *'],"['В 2019 году Google выпустила\xa0In-app Updates\xa0— возможность обновлять Android-приложения без перехода в Google Play. Однако до сих пор довольно мало приложений поддерживают этот способ обновления.Когда я внедрял In-app Updates в приложение Профи для специалистов — без сложностей не обошлось. Пришлось покопаться в документации', ' статьях и даже пару раз переписать реализацию.Чтобы меньше людей наступали на мои грабли', ' я сделал пошаговую инструкцию по интеграции In-app Updates в Android-приложение на React Native. Если следовать ей — сможете внедрить эту опцию за день.']"
['\n      Simipa\n    '],['React Native с колокольни Android разработки часть 2'],['Разработка под iOS *Разработка мобильных приложений *Разработка под Android *ReactJS *'],"['Свою прошлую статью я написал спустя несколько дней', ' после того', ' как я вообще начал ковыряться в react native', ' до этого имея опыт только в нативной разработке под android и iOS. Спустя это время я уже успел поработать над реальным react native проектом. И теперь хочу осветить все очевидные и неочевидные моменты с которыми я столкнулся в момент работы с реальным проектом. Всем заинтересованным под кат.']"
['\n      M0NSTERC4T\n    '],"['Медленнее', ' плавнее: разбираемся с React Fiber']",['JavaScript *ReactJS *'],"['\n16 сентября 2017 года вышла React Fiber — новая мажорная версия библиотеки. Помимо добавления новых фич', ' о которых вы можете почитать здесь', ' разработчики переписали архитектуру ядра библиотеки. Я как React-разработчик решил разобраться', ' что за зверь этот Fiber', ' какие задачи он решает', ' за счёт чего и как в итоге можно применить полученные знания на проектах', ' над которыми я тружусь в компании Live Typing. Разобрался и пришёл к неоднозначным выводам.']"
['\n      EFS_programm\n    '],['Советы по стилю. Как написать читаемый React-код'],['Блог компании Сбер JavaScript *Программирование *ReactJS *'],"['Когда разработчик проводит code review', ' ему редко хватает времени вникнуть в каждую строку: приходится быстро продумывать различные ситуации', ' в которых этот код может не работать. При анализе существует несколько моментов', ' на которые стоит обращать внимание', ' чтобы быстро понять', ' как именно код работает. Подсмотрели у Nirmalya Ghosh несколько приемов', ' как сделать javascript-код изящнее при создании компонентов с помощью библиотеки React. Хотя у нас есть свои особенности разработки в ЕФС', ' о которых вы можете прочитать в этой статье', ' некоторые из описанных под катом приемов мы находим интересными. Читаем и обсуждаем в комментариях!\n\n']"
['\n      mary_arti\n    '],['Приглашаем на воркшоп по React Native от разработчика GeekBrains'],['Блог компании Mail.ru Group ReactJS *'],"['\nВсем привет! Друзья', ' 20 апреля приглашаем вас в московский офис Mail.Ru Group. Разработчик GeekBrains Даниил Скрипник расскажет о своем опыте работы с React Native', ' его особенностях', ' а также научит участников писать кроссплатформенное приложение-мессенджер. Программа и регистрация — под катом.']"
['\n      ru_vds\n    '],"['Учебный курс по React', ' часть 18: шестой этап работы над TODO-приложением']",['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['В сегодняшней части перевода учебного курса по React вам предлагается продолжить работу над Todo-приложением и сделать так', ' чтобы щелчки по флажкам воздействовали бы на состояние компонента.\n\n\n\r\n→ Часть 1: обзор курса', ' причины популярности React', ' ReactDOM и JSX\r\n→ Часть 2: функциональные компоненты\r\n→ Часть 3: файлы компонентов', ' структура проектов\r\n→ Часть 4: родительские и дочерние компоненты\r\n→ Часть 5: начало работы над TODO-приложением', ' основы стилизации\r\n→ Часть 6: о некоторых особенностях курса', ' JSX и JavaScript\r\n→ Часть 7: встроенные стили\r\n→ Часть 8: продолжение работы над TODO-приложением', ' знакомство со свойствами компонентов\r\n→ Часть 9: свойства компонентов\r\n→ Часть 10: практикум по работе со свойствами компонентов и стилизации\r\n→ Часть 11: динамическое формирование разметки и метод массивов map\r\n→ Часть 12: практикум', ' третий этап работы над TODO-приложением\r\n→ Часть 13: компоненты', ' основанные на классах\r\n→ Часть 14: практикум по компонентам', ' основанным на классах', ' состояние компонентов\r\n→ Часть 15: практикумы по работе с состоянием компонентов\r\n→ Часть 16: четвёртый этап работы над TODO-приложением', ' обработка событий\r\n→ Часть 17: пятый этап работы над TODO-приложением', ' модификация состояния компонентов\r\n→ Часть 18: шестой этап работы над TODO-приложением\r\n→ Часть 19: методы жизненного цикла компонентов\r\n→ Часть 20: первое занятие по условному рендерингу\r\n→ Часть 21: второе занятие и практикум по условному рендерингу\r\n→ Часть 22: седьмой этап работы над TODO-приложением', ' загрузка данных из внешних источников\r\n→ Часть 23: первое занятие по работе с формами\r\n→ Часть 24: второе занятие по работе с формами\r\n→ Часть 25: практикум по работе с формами\r\n→ Часть 26: архитектура приложений', ' паттерн Container/Component\r\n→ Часть 27: курсовой проект']"
['\n      nomhoi\n    '],"['Tic Tac Toe', ' часть 0: Сравнение Svelte и React']",['Разработка веб-сайтов *JavaScript *Программирование *ReactJS *SvelteJS *'],"['Tic Tac Toe', ' часть 0: Сравнение Svelte и React\nTic Tac Toe', ' часть 1: Svelte и Canvas 2D\nTic Tac Toe', ' часть 2: Undo/Redo с хранением состояний\nTic Tac Toe', ' часть 3: Undo/Redo с хранением команд\nTic Tac Toe', "" часть 4: Взаимодействие с бэкендом на Flask с помощью HTTPНа сайте React'a есть туториал"", ' в котором описывается разработка игры Tic Tac Toe. Я решил повторить разработку этой игры на Svelte. Статья охватывает только первую половину туториала', ' до реализации истории ходов. Для целей ознакомления с фреймворком этого вполне достаточно. Каждый раздел статьи соответствует разделу туториала', ' содержит ссылки на исходный код обоих фреймворков.']"
['\n      IvanGanev\n    '],"['Пишем API для React компонентов', ' часть 1: не создавайте конфликтующие пропсы']",['JavaScript *ReactJS *'],"['Пишем API для React компонентов', ' часть 1: не создавайте конфликтующие пропсы\n\nПишем API для React компонентов', ' часть 2: давайте названия поведению', ' а не способам взаимодействия\n\nПишем API для React компонентов', ' часть 3: порядок пропсов важен\n\nПишем API для React компонентов', ' часть 4: опасайтесь Апропакалипсиса!\n\nПишем API для React компонентов', ' часть 5: просто используйте композицию\n\nПишем API для React компонентов', ' часть 6: создаем связь между компонентамиЭтот пост — перевод первой статьи из серии статей Writing good component API', ' за авторством @Sid. При переводе', ' в любой непонятной ситуации', ' я буду руководствоваться официальным переводом документации React JS на русский язык\nКогда речь идет о React компонентах', ' ваши пропсы — это ваш API.\nХороший API должен быть понятным', ' таким что бы разработчик мог сам догадаться как с ним работать. Это относиться не только к разработке библиотек компонентов', ' но и к разработке приложений. Важно что бы вам и вашей команде было удобно использовать компоненты и их API.\nЭта серия статей вдохновлена статьями и лекциями от Sebastian Markbåge', ' Brent Jackson', ' Jenn Creighton и A. Jesse Jiryu Davis.После прочтения множества статей + лекций', ' и после более года проектирования дизайн системы cosmos', ' я пришел к этим принципам разработки.\nНачнем с простого.\nУ нас есть кнопка:\n\n<Button>Click me</Button>']"
['\n      IvanGanev\n    '],"['Пишем API для React компонентов', ' часть 2: давайте названия поведению', ' а не способам взаимодействия']",['JavaScript *ReactJS *'],"['Пишем API для React компонентов', ' часть 1: не создавайте конфликтующие пропсы\n\nПишем API для React компонентов', ' часть 2: давайте названия поведению', ' а не способам взаимодействия\n\nПишем API для React компонентов', ' часть 3: порядок пропсов важен\n\nПишем API для React компонентов', ' часть 4: опасайтесь Апропакалипсиса!\n\nПишем API для React компонентов', ' часть 5: просто используйте композицию\n\nПишем API для React компонентов', ' часть 6: создаем связь между компонентамиУ нас есть компонент переключатель — Switch', ' который принимает проп', ' давайте пока назовем его something (что-то).\nРазработчик', ' использующий наш компонент', ' может передать функцию', ' и мы будем вызывать ее при изменении значения.\n\n<Switch something={fn} />\nReact дает нам возможность называть проп как нам угодно: handler / clickHandler / onClick / onToggle и т.д\nПопулярным стало соглашение о том', ' что название обработчика событий должно начинаться с on', ' например', ' onClick. Это связано с тем', ' что в спецификации HTML есть множество обработчиков', ' которые уже следуют этому соглашению: onkeydown', ' onchange', ' onclick и т.д.\nПовторное использование уже существующего соглашения — отличная идея', ' разработчикам не придется запоминать что-то новое.\nОкей', ' как насчет onClick?']"
['\n      aigoncharov\n    '],['React: Lifting state up is killing your app'],['Разработка веб-сайтов *JavaScript *ReactJS *'],"['\nI now have a new shiny blog. Read this article with the latest updates there https://blog.goncharov.page/react-lifting-state-up-is-killing-your-appHave you heard about ""lifting state up""? I guess you have and that\'s the exact reason why you\'re here. How could it be possible that one of the 12 main concepts listed in React official documentation might lead to poor performance? Within this article', "" we'll consider a situation when it's indeed the case.""]"
['\n      Antek-ESD\n    '],"['Сказ о том', ' как я настраивал Azure AD B2C на React и React Native Часть 4 (Туториал)']",['.NET *Microsoft Azure ReactJS *'],"['\nПредисловие\r\nПродолжение цикла по работе с Azure B2C. В данной статье я расскажу о том', ' как подключить аутентификацию на React Native.\n\nСсылки на связанные посты\n\n\nЧасть 1: Создание и настройка приложений на Azure AD B2C\nЧасть 2: Работа с Identity Framework Experience\nЧасть 3: Подключение приложения React\nЧасть 4: Подключение приложения React Native\nЧасть 5: Подключение и настройка бэкэнда на .NET Core 3\n']"
['\n      chemtech\n    '],['Отслеживание ошибок в приложении React с помощью Sentry'],['Тестирование IT-систем *Отладка *Тестирование веб-сервисов *DevOps *'],"['\nСегодня я расскажу вам об отслеживании ошибок в реальном времени в приложении React. Приложение внешнего интерфейса обычно не используется для отслеживания ошибок. Некоторые компании часто откладывают отслеживание ошибок', ' возвращаясь к нему после документации', ' тестов и прочего. Однако', ' если вы можете изменить свой продукт в лучшую сторону', ' то просто сделайте это!']"
['\n      aio350\n    '],"['Полный стек на примере списка задач (React', ' Vue', ' TypeScript', ' Express', ' Mongoose)']",['Разработка веб-сайтов *JavaScript *ReactJS *VueJS *TypeScript *'],"['\n\r\nДоброго времени суток', ' друзья!\n\r\nВ данном туториале я покажу вам', ' как создать фуллстек-тудушку.\n\r\nНаше приложение будет иметь стандартный функционал:\n\n\nдобавление новой задачи в список\nобновление индикатора выполнения задачи\nобновление текста задачи\nудаление задачи из списка\nфильтрация задач: все', ' активные', ' завершенные\nсохранение задач на стороне клиента и в базе данных\n\r\nВыглядеть наше приложение будет так:\n\n\r\nДля более широкого охвата аудитории клиентская часть приложения будет реализована на чистом JavaScript', ' серверная — на Node.js. В качестве абстракции для ноды будет использован Express.js', ' в качестве базы данных — сначала локальное хранилище (Local Storage)', ' затем индексированная база данных (IndexedDB) и', ' наконец', ' облачная MongoDB.\n\r\nПри разработке клиентской части будут использованы лучшие практики', ' предлагаемые такими фреймворками', ' как React и Vue: разделение кода на автономные переиспользуемые компоненты', ' повторный рендеринг только тех частей приложения', ' которые подверглись изменениям и т.д. При этом', ' необходимый функционал будет реализован настолько просто', ' насколько это возможно. Мы также воздержимся от смешивания HTML', ' CSS и JavaScript.\n']"
['\n      yadg\n    '],['HowToCode — Адаптация системного подхода к разработке для React и TypeScript'],['JavaScript *Программирование *Совершенный код *ReactJS *TypeScript *'],"['Наверное', ' каждый программист рано или поздно начинает задумываться о качестве своего кода. И', ' скорее всего', ' я не ошибусь', ' если скажу', ' что добрая половина разработчиков им вечно недовольна. Мне мой код тоже нравился редко: функции', ' казалось', ' можно было бы делать и покороче', ' лишние вложенности было бы неплохо тоже убирать. Было бы здорово писать тесты и документацию', ' но на них времени не оставалось почти что никогда. Естественно', ' что я потратил кучу времени на чтение книг и всевозможных статей', ' пытаясь понять', ' как же сделать свой код лучше. Но картинка не складывалась. То ли рекомендации в книгах или статьях были через чур общими и местами противоречивыми', ' то ли дело было во мне', ' но', ' несмотря на усилия', ' результата было мало. Кардинальным образом ситуация изменилась после того', ' как я прошел курс HowToCode.\xa0 В курсе описан системный и', ' как всё гениальное', ' простой и красивый подход к разработке', ' который сводит воедино анализ', ' проектирование', ' документацию', ' тестирование и разработку кода. Весь курс построен на использовании функциональной парадигмы и языка Scheme (диалекта Lisp)', ' тем не менее', ' рекомендации вполне применимы и для других языков', ' а для JavaScript и TypeScript', ' к которым я постарался их адаптировать', ' так и вообще подходят отлично. ']"
['\n      dapi\n    '],['Как мы год живем без sprockets и с react'],['Ruby *ReactJS *'],"['Привет!\n\r\nМы в taaasty.ru уже полтора года живем на react-е и почти год без sprockets. Это так здорово', ' хочу поделиться. За одно расскажу как работает react с рельсами в режиме prerender.\n\n\n']"
['\n      dfilatov\n    '],['Vidom — blazingly fast alternative to React'],['JavaScript *ReactJS *'],"['Давненько я ничего тут не писал', ' а сегодня как раз пятница', ' так что можно набросить на React рассказать о своей поделке Vidom.']"
['\n      jumanji2277\n    '],"['Честный realtime на React и Redux', ' как основа автоаукциона']",['Блог компании CarPrice Разработка веб-сайтов *JavaScript *Программирование *ReactJS *'],"['\n\r\nВ нашей первой статье о программной инфраструктуре сервиса CarPrice', ' — если не читали', ' то рекомендуем почитать', ' — упоминалось про сайт для дилеров. Что он собой представляет и как устроен', ' мы попросили рассказать одного из его разработчиков', ' Никиту Лебедева. ']"
['\n      ru_vds\n    '],['Rekit Studio: IDE для React-приложений'],['Блог компании RUVDS.com Разработка веб-сайтов *ReactJS *'],"['Сегодня мы публикуем перевод материала Нейта Ванга', ' создателя Rekit. Здесь он рассказывает о новом стабильном релизе системы', ' Rekit Studio. Это — полноценная IDE для разработки приложений', ' созданных с использованием технологий React', ' Redux и React Router. Он говорит', ' что его команда создаёт с помощью Rekit сложные веб-приложения уже больше года.\n\r\nПредыдущая версия Rekit Studio называлась Rekit Portal. Она не поддерживала возможностей по редактированию кода. Теперь', ' благодаря редактору Monaco Editor', ' того', ' который используется в VS Code', ' и благодаря замечательному средству для форматирования кода prettier', ' Rekit Studio позволяет удобно работать с кодом. Именно поэтому в названии системы появилось слово «studio».\n\nRekit Studio']"
['\n      PFight77\n    '],['Нативная инверсия зависимостей в TypeScript и React'],['Блог компании ДоксВижн Разработка веб-сайтов *JavaScript *TypeScript *'],"['Когда я задумался о внедрении зависимостей в TypeScript', ' то первое', ' что мне посоветовали — inversify. Я посмотрел эту и другие библиотеки', ' реализующие паттерн Service Locator', ' и даже сделал свою собственную — typedin. \nНо когда я работал над версией typedin 2.0', ' то в конце концов понял', ' что вообще никакой библиотеки не нужно. В TypeScript есть все необходимое.\n']"
['\n      m_vash\n    '],['[Перевод] 4 способа стилизировать React-компоненты'],['Разработка веб-сайтов *CSS *JavaScript *ReactJS *'],"['Привет', ' Хабр! Представляю вашему вниманию перевод статьи «4 Ways to Style React Components».\n\n\n\r\nНа сегодняшний день разработано много способов стилизации React компонентов. От библиотек до использования традиционных СSS файлов. Выбор довольно обширен и', ' скорее всего', ' будет соответствовать вашим предпочтениям. Вот четыре способа стилизации React компонентов.']"
['\n      ru_vds\n    '],"[' ...  по разработке масштабных React-приложений. Планирование', ' действия ... ']",['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['Сегодня мы представляем вашему вниманию первую часть перевода материала', ' который посвящён разработке крупномасштабных React-приложений. При создании одностраничного приложения с помощью React очень легко привести его кодовую базу в беспорядок. Это усложняет отладку приложения', ' затрудняет обновление или расширение кода проекта.\n\n\n\r\nВ экосистеме React существует множество хороших библиотек', ' с помощью которых можно управлять определёнными аспектами приложения. Мы довольно подробно остановимся на некоторых из них. Кроме того', ' здесь будут приведены некоторые практические рекомендации. Если проект должен хорошо масштабироваться — этим рекомендациям полезно будет следовать с самого начала работы над ним. В этой части перевода материала мы поговорим о планировании', ' о действиях', ' об источниках данных и об API. Первым шагом разработки крупномасштабных React-приложений', ' который мы рассмотрим', ' является планирование.\n\r\nЧасть 1: Практические рекомендации по разработке масштабных React-приложений. Планирование', ' действия', ' источники данных и API\n\r\nЧасть 2: Практические рекомендации по разработке крупномасштабных React-приложений. Часть 2: управление состоянием', ' маршрутизация\n']"
['\n      IvanGanev\n    '],"['Пишем API для React компонентов', ' часть 4: опасайтесь Апропакалипсиса']",['JavaScript *ReactJS *'],"['Пишем API для React компонентов', ' часть 1: не создавайте конфликтующие пропсы\n\nПишем API для React компонентов', ' часть 2: давайте названия поведению', ' а не способам взаимодействия\n\nПишем API для React компонентов', ' часть 3: порядок пропсов важен\n\nПишем API для React компонентов', ' часть 4: опасайтесь Апропакалипсиса!\n\nПишем API для React компонентов', ' часть 5: просто используйте композицию\n\nПишем API для React компонентов', ' часть 6: создаем связь между компонентамиПоговорим о компоненте Avatar.\n\n<Avatar image=""simons-cat.png"" />\nАватары встречаются повсюду в приложениях и обычно бывают разных размеров. Вам нужен большой аватар для профиля пользователя', ' маленький в выпадающих списках и несколько промежуточных.']"
['\n      ru_vds\n    '],['Пакет use-sound: звуковые эффекты в React-приложениях'],['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *Звук '],"['Может', ' дело в том', ' что я профессионально занимался звуком', ' но мне хочется', ' чтобы веб был бы громче.\n\r\nЗнаю', ' многие меня в этом желании не поддержат. И не без причины! Исторически сложилось так', ' что звуки в интернете использовались крайне неудачно и некрасиво:\n\n\nВ ранние дни веба некоторые страницы проигрывали фоновую MIDI-музыку.\nВсплывающие мошеннические окна используют звуки для достижения своих нехороших целей. Они', ' с помощью звуков', ' стремятся привлечь внимание пользователей и сделать обман более правдоподобным.\nЗвук присутствует и в автоматически запускающихся видео (ну это совсем кошмар).\n\r\nПравда', ' я уверен в том', ' что совсем отказываясь от звука — это как если вместе с водой выплеснуть и ребёнка. Звуки могут делать акценты на действиях пользователя', ' они способны усиливать обратную связь. Звук может немного скрасить выполнение неких скучных действий. Если звуки на веб-страницах применяют со вкусом', ' они способны улучшить впечатления пользователя от проекта', ' сделав его более «осязаемым» и реальным.\n\n\n\r\nЭта идея не нова: в играх и в мобильных приложениях звуки используются постоянно. На самом деле', ' веб — это странное исключение из общей тенденции. Большая часть цифровых продуктов', ' мысли о которых приходят мне в голову', ' использует звуки. Я уже не говорю о тактильном отклике', ' который используется в мобильных приложениях для того чтобы приблизить их к реальности.\n\r\nМне', ' в ходе работы над моим блогом', ' захотелось поэкспериментировать со звуком. Многие элементы интерфейса моего блога', ' с которыми взаимодействуют пользователи', ' воспроизводят тихие короткие звуки. Например', ' в правой верхней части домашней страницы блога имеется пара кнопок для переключения темы и для включения и выключения звука.\n\r\nТак как звуки в веб используются крайне редко', ' их применение может оказать большое влияние на восприятие сайта пользователями. Это — нечто вроде секретного оружия разработчика', ' применение которого способно привести к удивительно большому позитивному влиянию на определённые проекты.']"
['\n      ru_vds\n    '],['Уменьшение размера React Native-приложения на 60% за несколько простых шагов'],['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['Я тружусь в компании Mutual. Она работает в Бразилии', ' в сфере равноправного кредитования. Мы помогаем заёмщикам и заимодавцам наладить связь друг с другом. Первые ищут хорошие ставки', ' а вторые — доходы', ' превышающие то', ' что может предложить им рынок. Наш продукт применяется широким кругом пользователей', ' мы работаем в большой стране. В результате наши приложения для iOS и Android', ' основанные на React Native', ' загружают на очень разные устройства.\n\n']"
['\n      S_ILya\n    '],['Десятикратное улучшение производительности React-приложения'],['Блог компании Маклауд Разработка мобильных приложений *ReactJS *'],"['\nСталкивались ли вы с такой ошибкой? Пытались ее решить? Пробовали найти решение в сети и ничего не находили? Обычно', ' данная проблема решается простой перезагрузкой страницы.\nОколо года назад в Techgoise я получил возможность поработать с большим React-приложением. Мы получили (унаследовали) готовую кодовую базу', ' внесли основные правки и начали добавлять в приложение новые интересные возможности.\nОднако', ' мы часто получали жалобы от тестировщиков и конечных пользователей о том', ' что они видят эту злополучную ошибку. После проведенного анализа мы установили', ' что причина происходящего состоит в том', ' что приложение расходует целых 1', '5 Гб памяти!\nВ данной статье я расскажу о том', ' как нам удалось добиться уменьшения этой цифры с 1', '5 Гб до 150 Мб', ' что', ' как следствие', ' привело к улучшению производительности почти в 10 раз', ' и мы больше никогда не сталкивались с Ошибкой.\nПоиск узких мест в производительности\nСуществует большое количество инструментов и библиотек для обнаружения узких мест в приложении. Мы испытали большое количество таких инструментов. Ниже представлено три из них', ' которые оказались наиболее полезными.\n1. Профилирование компонентов с помощью расширения для Google Chrome']"
['\n      eliarh\n    '],['Memo в React'],['ReactJS *'],"['Перед использованием memo попробуйте сначала два других подхода. И если их вам будет не хватить', ' то переходите к memo']"
['\n      Imbolc\n    '],['Offline-first приложение с Hoodie & React. Часть вторая: авторизация'],['Разработка веб-сайтов *JavaScript *ReactJS *'],"['Наша цель', ' написать offline-first приложение — SPA которое загружается и сохраняет полную функциональность в отсутствии интернет-соединения. В первой части повествования мы научились пользоваться браузерной базой данных. Сегодня мы настроим синхронизацию с серверной бд и подключим авторизацию. В результате мы получим возможность редактировать наши данные на разных устройствах даже в оффлайне с последующей синхронизацией при появлении соединения.']"
['\n      Kresent\n    '],['Разбор: как и зачем применять PureComponent в React'],['Блог компании red_mad_robot JavaScript *ReactJS *'],"['\r\n29 Июля вышел React 15.3', ' и первым пунктом в release-notes значилось добавление поддержки React.PureComponent', ' который заменяет своего предшественника pure-render-mixin. В этой статье обсудим', ' почему же этот компонент так важен и где его использовать.\n']"
['\n      IsOrtex\n    '],['Что будет если скрестить React и Angular?'],['Разработка веб-сайтов *JavaScript *'],"['\nAkili — javascript фреймворк', ' который появился под влиянием таких решений как React', ' Angular', ' Aurelia и в меньшей степени некоторых других. Целью было объединить все лучшее', ' что я вижу в них и максимально все упростить.\n\r\nНравится React', ' но отталкивает JSX? Любите Angular', ' но надоела всякая магия?\n\nТогда вам стоит попробовать это.']"
['\n      DmitriyDekhanov\n    '],"['FrontFest.JS: ClojureScript на продакшене', ' оптимизация рендеринга React и как (не) впасть в депрессию с Angular']",['Блог компании 2ГИС Блог компании CodeFest Разработка веб-сайтов *JavaScript *'],"['\n\nFrontFest — это улётная конференция для фронтенд-разработчиков', ' которая пройдет 18 ноября в Москве. В этой статье мы расскажем о том', ' что приготовили для вас в секции JS. Спикеры из Microsoft', ' Booking', ' 2ГИС', ' Wrike и Злых Марсиан поделятся опытом использования Preact', ' ClosureScript', ' React', ' JS для IoT и Angular. ']"
['\n      bgnx\n    '],['Изучаем и реализуем алгоритм работы правильного observer паттерна для react компонентов'],['JavaScript *ReactJS *'],"['\nИтак продолжаем развивать observer-паттерн. В предыдущей статье от старого и очень простого паттерна ""observer"" маленькими шагами мы пришли к mobx и написали его мини-версию. В этой статье мы напишем полноценную версию mobx которая реализует алгоритм обновления зависимостей в правильном порядке для избежания ненужных вычислений. Надо сказать что попытки описать этот алгоритм на хабре предпринимались и раньше в статьях товарища vintage про атомы тут', ' тут', ' и тут но там не описан в полной мере последний ""правильный"" порядок обновления о чем и будет речь в этой статье.']"
['\n      kyoumur\n    '],['Как мы общаемся с React-компонентами при помощи декораторов в TypeScript'],['Блог компании ДоксВижн Разработка веб-сайтов *JavaScript *TypeScript *'],"['При разработке приложений на React довольно неудобно создавать независимые друг от друга компоненты', ' т.к. стандартным способом для обмена данными между ними является ""Lifting State Up"". Этот подход постепенно загрязняет ненужными свойствами промежуточные компоненты', ' делая их неудобными для повторного использования.\n\n\r\nНаиболее популярными средствами решения этой проблемы (и некоторых других) являются такие библиотеки как Redux и Mobx', ' позволяющие хранить данные в отдельном месте и передавать их компонентам напрямую. В этой статье я хочу продемонстрировать наш подход к решению данного вопроса.']"
['\n      AsTex\n    '],['Конвертация React в Angular с использованием универсального абстрактного дерева. Proof of Concept'],['Разработка веб-сайтов *JavaScript *Angular *ReactJS *TypeScript *'],"['Вступление\nДоброго времени суток', ' меня зовут Владимир Миленко', ' я Frontend-разработчик в компании Lightspeed', ' и сегодня мы поговорим о проблеме отсутствия компонентов в том или ином фреймворке и попытках автоматически конвертировать их. \nПредыстория\nИсторически сложилось', ' что и в eCommerce', ' и в Retail продуктах для админ-панелей мы используем React.JS в качестве основного фреймворка', ' однако платформа для ресторанов использует Angular', ' что не позволяет им использовать нашу библиотеку компонентов. Перед моим отпуском эта проблема стала острее', ' ввиду необходимости приведения UI/UX к одному виду. Мною было принято решение провести небольшое исследование на тему миграции компонентов', ' сделать Proof of Concept и поделиться ощущениями. Об этом и будет данный пост. ']"
['\n      maxfarseer\n    '],"['Основы React (текстовый учебник', ' 2-е издание)']",['JavaScript *ReactJS *'],['Прошло 2.5 года после публикации первой версии подробного туториала по основам React. За это время gitbook насчитал 250 000+ уникальных посетителей.\n\nПод катом подробнее об учебнике и список изменений.']
['\n      sergmit\n    '],['React. Lazy loading'],['JavaScript *ReactJS *'],"['Доброго времени суток.\r\nЗанимаюсь разработкой проекта на React и Redux. Хочу в этой статье описать архитектуру своего проекта.\n\r\nИтак', ' начнем. Файловая структура:\n\n\n\r\nДля подключения редьюсеров создаем класс singleton reducerRegister:\n\r\n./reducerRegister.js\nclass ReducerRegistry {\n  constructor () {\n    if (!ReducerRegistry.instance) {\n      this._emitChange = null\n      this._reducers = {}\n      ReducerRegistry.instance = this\n    }\n    return ReducerRegistry.instance\n  }\n\n  getReducers () {\n    return {...this._reducers}\n  }\n\n  register (name', ' reducer) {\n    this._reducers = {...this._reducers', ' [name]: reducer}\n    if (this._emitChange) {\n      this._emitChange(this.getReducers())\n    }\n  }\n\n  setChangeListener (listner) {\n    this._emitChange = listner\n  }\n}\n\nconst reducerRegistry = new ReducerRegistry()\n\nexport default reducerRegistry\n\r\nС помощью этого класса редьюсеры могут сами себя регистрировать в store.']"
['\n      ru_vds\n    '],['Создание динамических PDF-файлов с использованием React и Node.js'],['Блог компании RUVDS.com JavaScript *Node.JS *PDF ReactJS *'],"['Материал', ' перевод которого мы сегодня публикуем', ' посвящён созданию динамических PDF-файлов с использованием HTML-кода в качестве шаблона. А именно', ' речь пойдёт о том', ' как сформировать простой счёт на оплату неких товаров или услуг', ' динамические данные', ' включённые в который', ' берутся из состояния React-приложения. База React-приложения создана с помощью create-react-app', ' серверная часть проекта основана на Node.js', ' при её разработке использован фреймворк Express.\n\n\n\r\nАвтор этого материала отмечает', ' что он подготовил видео', ' в котором демонстрируется разработка проекта. Если вы решите и посмотреть видео', ' и прочитать статью', ' то рекомендуется поступить так. Сначала бегло просмотрите статью', ' потом включите видео и воссоздайте у себя рассматриваемую там систему. А после этого просто прочитайте статью.']"
['\n      IFonin\n    '],['Повторное использование форм на React'],['Блог компании BCS FinTech ReactJS *TypeScript *'],"['Привет!\n\r\nУ нас в БКС есть админка и множество форм', ' но в React-сообществе нет общепринятого метода — как их проектировать для переиспользования. В официальном гайде Facebook’a нет подробной информации о том', ' как работать с формами в реальных условиях', ' где нужна валидация и переиспользование. Кто-то использует redux-form', ' formik', ' final-form или вообще пишет свое решение.\n\n\r\nВ этой статье мы покажем один из вариантов работы с формами на React. Наш стек будет вот таким: React + formik + Typescript. Мы покажем:\n\n\nЧто компонент должен делать.\nКонфиг', ' поля и валидация на уровне пропсов.\nКак сделать форму переиспользуемой.\nОптимизацию перерендера.\nЧем наш способ неудобен.\n\r\nПри новой бизнес-задаче мы узнали', ' что нам нужно будет сделать 15-20 похожих форм', ' и гипотетически их может стать еще больше. У нас была одна форма-динозавр на конфиге', ' которая работала с данными из `store`', ' отправляла actions на сохранение и выполнение запросов через `sagas`. Она была замечательной', ' выполняла бизнес-велью. Но уже была нерасширяемой и непереиспользуемой', ' только при плохом коде и добавлении костылей.\n\r\nЗадача поставлена: переписать форму для того', ' чтобы ее можно было переиспользовать неограниченное количество раз. Хорошо', ' вспоминаем функциональное программирование', ' в нем есть чистые функции', ' которые не используют внешние данные', ' в нашем случае `redux`', ' только то', ' что им присылают в аргументах (пропсах).\n\r\nИ вот что получилось.']"
['\n      olegkorovin\n    '],['Новый фронтенд Одноклассников: запуск React в Java. Часть I'],['Блог компании Одноклассники Разработка веб-сайтов *JavaScript *ReactJS *'],"['\n\r\nМногие слышали название GraalVM', ' но опробовать эту технологию в продакшене пока довелось не всем. Для Однокласснииков эта технология уже стала «священным Граалем»', ' меняющим фронтенд.\n\r\nВ этой статье я хочу рассказать о том', ' как нам удалось подружить Java и JavaScript', ' и начать миграцию в огромной системе с большим количеством legacy-кода', ' а так же как на этом пути помогает GraalVM.\n\r\nВо время написания статьи оказалось', ' что весь объём материала не влезает в традиционный для ХАБРа размер и если выложить публикацию целиком', ' то на её прочтение уйдет несколько часов. Поэтому мы решили разделить статью на 2 части.\n\r\nИз первой части вы узнаете об истории фронтенда в Одноклассниках и познакомитесь с его историческими особенностями', ' пройдете путь поиска решения проблем', ' которые накопились у нас за 11 лет существования проекта', ' а в самом конце окунетесь в технические особенности серверной реализации принятого нами решения. ']"
['\n      aalexeev\n    '],['12 советов по внедрению TypeScript в React-приложениях'],['Блог компании TINKOFF Разработка веб-сайтов *Программирование *ReactJS *TypeScript *'],"['TypeScript — стандарт современной фронтенд-разработки. Согласно исследованиям State of JavaScript', ' TS вызывает явный интерес у программистов. По данным опроса за 2019 год', ' почти 60% респондентов пробовали TS и продолжают использовать', ' 22% не пробовали и желают изучить.\n\r\nЭта статья — сборник советов о том', ' как внедрить и улучшить использование TypeScript. Первая половина советов общая', ' касающаяся подходов и инфраструктуры. Вторая — несколько особо полезных фишек языка.\n\n']"
['\n      ru_vds\n    '],"['Прости', ' React', ' но я так больше не могу']",['Блог компании RUVDS.com Разработка веб-сайтов *ReactJS *'],"['Недавно мне попалась фраза «усталость от JavaScript»', ' «JavaScript fatigue»', ' и я мгновенно понял', ' что это — про меня.\n\r\nПоследние несколько лет я делал всё возможное для того чтобы поспевать за новшествами экосистемы React', ' и', ' если брать выше', ' за новшествами JavaScript', ' где изменения происходят с умопомрачительной скоростью.\n\n\n\r\nЯ', ' большую часть этого времени', ' ещё и обещал себе выучить какие-нибудь новые языки', ' попробовать новые технологии', ' в общем — сделать что-то такое', ' что выведет меня из зоны комфорта', ' в центре которой был JavaScript.\n\r\nНо я', ' почти всегда', ' ничем таким не занимался. Дело тут было в том', ' что React и JavaScript', ' если стремиться быть в курсе всего', ' что в этих сферах происходит', ' отнимают слишком много сил и времени. Иногда я по-настоящему опасался того', ' что мои знания и навыки могут устареть. Всё это оставляло мне очень мало времени на то', ' чтобы исследовать что-то новое.']"
['\n      Akinyaev\n    '],"['Эпическая сага про маленький custom hook для React (генераторы', ' sagas', ' rxjs)']",['JavaScript *ReactJS *'],"['Стояла задача реализовать прелоадер с обратным отсчетом на реакте. Т.к. гуглить не умею и очень люблю лепить велосипеды (хороший двухместный получился из двух велосипедов ""Украина"")', ' то я был обречен глубоко копать на полях асинхреньщины. Забегу наперёд и скажу', ' что реализовал этот прелоадер с помощью генераторов', ' redux-saga', ' rxjs. Очень интересный опыт и хотелось бы поделиться', ' учитывая', ' что в процессе разбирательств', ' кроме статей', ' описывающих очевидные вещи', ' и обрывков сугубо специфической информации на stackoverflow', ' не находил.Часть первая - создание кастомного хука прелоадера.']"
['\n      Mogu4iy\n    '],['Path aliases in React'],['Разработка веб-сайтов *JavaScript *ReactJS *TypeScript *'],['Этот материал поможет настроить path aliases  для вашего cretae-react-app.']
['\n      DataArt\n    '],"['Компоненты', ' React и Flux обсудили на IT talk']",['Блог компании DataArt JavaScript *'],"['Тема 30-й встречи петербургского технического сообщества IT talk «Компоненты', ' React и Flux» оказалась настолько актуальной', ' что мест в зале не хватило. Выступал Даня Абрамов', ' который сейчас занимается опенсорсом и консалтингом по проектам', ' написанным на React.js.\n\r\nReact — относительно новый фронтенд-фреймворк', ' продукт компании Facebook. Но Даня говорил', ' скорее', ' не про React', ' а про его парадигму', ' которая существенно меняет подход к UI-приложениям. Он отметил', ' что сейчас самые интересные инновации в UI-приложениях происходят именно в вебе.\n\n\n\r\nP.S. Извините за качество записи и проблемы со звуком. Решили', ' однако', ' что контент стоит того', ' чтобы поделиться.']"
['\n      rosko\n    '],['Прекратите использовать React для всего подряд'],['JavaScript *ReactJS *'],"['Перевод статьи «Stop Using React for EVERYTHING!»', ' опубликованной на сайте medium.com.\n\r\nИтак', ' вы освоили React. А еще добавили интеграцию с ES6. Окей', ' вы хороши в разбиении вашего кода на компоненты. К тому же вы… стоп. Нам пофиг.\n\r\nПросто потому', ' что вы познакомились с именитым фреймворком с некоторыми хорошими возможностями — это не делает вас гением. И определенно не делает React правильным выбором для всего подряд', ' что вы делаете. Фактически это пожалуй не самый лучший выбор в большинстве случаев.\n\r\nReactJS — это Чариза́рд (покемон такой). Это огнедышащий дракон в мире джаваскрипта. Он мощный', ' он быстрый', ' он ослепительный', ' и умные программисты тащятся от него.']"
['\n      theWaR_13\n    '],['Валидация форм в React'],['ReactJS *'],"['Если вы когда-нибудь пользовались фреймворком AngularJS', ' то вы знаете', ' как легко в нем валидируются формы. Однако в React ситуация несколько хуже. Оно и понятно', ' ведь это всего лишь библиотека. Но благодаря сообществу из этой библиотеки можно сделать мощное средство для создания полноценных SPA-приложений. На данный момент создано огромное множество компонентов', ' которые способны удовлетворить большинство нужд разработчиков на React. В данной статье я бы хотел описать подход', ' который использовал для валидации форм с помощью компонента Formsy-react.\n']"
['\n      vintage\n    '],"[""React'ивные Panel'и""]",['Разработка веб-сайтов *JavaScript *Программирование *ReactJS *'],"['Что такое панель? Это довольно простой компонент', ' разбивающий видимую область на 2-3 блока:\n\nШапка. В шапку обычно выводится заголовок и какие-то (обычно навигационные) элементы правления. \nТело. В тело панели выводится выводится произвольное содержимое. Часто этот блок делается скроллируемым', ' чтобы шапка не уходила из поля зрения.\nПодвал. Опциональный блок. Сюда выводят обычно общую для содержимого панели информацию и элементы управления.\n\nНе смотря на кажущуюся простоту', ' реализации обычно не такие уж и простые. Связано это с тем', ' что вариантов его использования великое множество.\nВ шапке может быть', ' а может не быть:\n\nЗаголовок. Дополнительно у него может быть подзаголовок.\nХлебные крошки. Они могут быть частью заголовка', ' а могут — подзаголовка.\nНавигационные ссылки. Такие как ""назад""', ' ""следующий"" и тп.\nКнопки. Такие как ""открыть фильтры""', ' ""переключить флаг""', ' ""закрыть окно"" и другие.\n\nКороче говоря', ' в шапке может быть почти что угодно. В теле же', ' определённо должна быть возможность выводить любое содержимое. В подвале содержимое так же может быть произвольным.\nПолучается', ' что у панели должно быть минимум 3 параметра', ' которые принимают ""сложное содержимое""', ' то есть такое', ' которое не является плоским текстом', ' а содержит иерархию вложенных блоков.\nДалее идёт обзор тех готовых решений', ' которые можно найти в гугле. Для каждого указан размер реализации в строках кода (CLOS). Плюс бонус в конце', ' для тех', ' кто доберётся ;-)']"
['\n      tokamame\n    '],['Руководство React Native — создаем приложение под iOS. Часть 1.4 — 1.5'],['JavaScript *Разработка под iOS *ReactJS *'],"['→ Перевод отсюда\r\n→ Продолжение. Предыдущие выпуски:\n\nЧасть 1.1 \n Часть 1.2-1.3\n\n4. Фильтрация и отбор случайных обоев\r\nВ этом разделе мы будем отбирать определённое количество случайных обоев из заданной категории. Раздел больше посвящен JS', ' нежели React Native. Мы создадим новый модуль (файл)', ' который будет генерировать случайное число. Если понятие «модуль» вам незнакомо', ' рекомендую обратиться к документации Node.js по модулям. \r\nНайдите строку', ' объявляющую класс \nclass SplashWalls extends Component{/* ... */};\n']"
['\n      archik\n    '],['TDD React.js-приложений'],['Разработка веб-сайтов *Тестирование IT-систем *JavaScript *TDD *ReactJS *'],"['\nHetzel edition of 20000 Lieues Sous les Mers\n\r\nЗаметка о том', ' насколько мы “реаниматоры” по части тестов (кто знаком с творчеством Говарда Филлипса Лавкрафта', ' тот поймет).\n\r\nВ продолжение темы тестирования и тестов', ' хотелось бы немного написать о нашем подходе', ' как он выглядит на наших Single Page Applications (SPA)', ' написанных на React.js', ' как нам помогал в этом Test-Driven Development (TDD) и почему мы пришли к тому', ' что редукторы и API-сервисы покрывать тестами тоже нужно.\n\r\nСразу скажу', ' что если вы ожидаете тут увидеть jest', ' snapshot testing или storyshots', ' то сразу закрывайте эту заметку. Если вы ожидаете найти тут что-то из свежих библиотек или подходов', ' то тоже немедленно закрывайте. Ничего из названного мы не использовали. Возможно', ' в новый проект мы войдем с этими инструментами', ' а пока получилось так', ' как получилось.\n\r\nК тому', ' как наши тесты выглядят сейчас', ' мы пришли сами', ' хотя многие из этих техник описаны на различных сайтах и форумах. Как дополнение', ' я приведу эти ссылки ниже.']"
['\n      MrCheater\n    '],['Hyperapp для беженцев с React/Redux'],['Блог компании Developer Soft JavaScript *Программирование *Node.JS *ReactJS *'],"['\nЯ люблю Redux\nИменно благодаря Redux для меня началось путешествие в мир удивительного функционального программирования. И это первое из функциональщины', ' что я попробовал в production. Прошли те времена', ' когда я использовал DOM для хранения состояния и неуверенно манипулировал им с помощью jQuery. \nRedux — это инструмент для управления состоянием приложения (state)', ' который позволяет полностью отделить его от представления (view). Представление (view) становится производным состояния (state)', ' которое предоставляет пользователю интерфейс для его изменения. Действия пользователя (actions) не изменяют состояние (state) напрямую. Вместо этого они попадают в редюсер (reducer). Это такая чистая функция', ' которая на основе предыдущего состояния (state) и действия (action) генерирует следующее состояние (state). Такой подход к обновлению данных во многом был вдохновлен архитектурой языка программирования Elm и концепцией однонаправленного потока данных Flux. Это', ' возможно', ' самая популярная JavaScript-библиотека для иммутабельного изменения состояния из тех', ' что существуют сегодня. Авторы Redux сфокусировались на решении одной единственной проблемы — управление состоянием приложения (state)', ' и сделали это хорошо. Redux получился достаточно модульным', ' чтобы работать с различными библиотеками для отображения представления (view). \nReact использует аналогичный сфокусированный подход для представления (view)', ' имеет эффективный виртуальный DOM', ' который можно подключить к DOM браузера', ' нативным мобильным приложениям', ' VR и прочим платформам. \nЧто бы создавать надежные', ' функциональные и легко отлаживаемые web-приложения', ' можно использовать React и Redux. Правда', ' потребуются вспомогательные библиотеки вроде react-redux и куча boilerplate-кода. А можно попробовать Hyperapp.']"
['\n      bjurijs\n    '],['Detox и Appium: автоматизированный тест интерфейса в React Native'],['Разработка мобильных приложений *Тестирование мобильных приложений *'],"['\n\nНезнакомая мобильная среда\r\nЯ', ' возможно', ' также как и вы', ' пришел к React Native как разработчик JavaScript нежели как разработчик нативных мобильных приложений. Абсолютно новый мир со своими нюансами и хитростями.\n\r\nОдной из самых важных тем для изучения станет тестирование. Когда все более или менее понятно с модульными тестами (unit)', ' что делать с тестами интерфейса и сквозными тестами (end-to-end)? iOS. Android. На рынке смесь разных типов устройств.\n\r\nНесмотря на то', ' что сама технология сравнительно новая', ' это все еще мобильная среда и многому приходится заимствовать и учиться у нативной стороны.\n\r\nЯ вкратце рассмотрю два фрэймворка', ' на которые стоит обратить внимания', ' чтобы облегчить себе жизнь как разработчику.']"
['\n      kamushken\n    '],['Создание таблиц в дизайн системе Figma и реализация в Storybook (React)'],['Разработка веб-сайтов *Интерфейсы *Usability *Визуализация данных Графический дизайн *'],"['\n\nВ предыдущей статье на тему дизайна таблиц в Фигме мы выяснили', ' что базовый элемент создания любого data grid — это компонент ячейки', ' внутри которого спрятано все необходимое для того', ' чтобы оставаться в одном экземпляре и строить таблицы ячейка-за-ячейкой. Теперь поговорим о её структуре: какие элементы вложены', ' случаи использования', ' рассмотрим темификацию таблиц через токены-цвета. И напоследок расскажу о передаче спецификаций разработчикам и интеграцию таблиц в React/Angular фреймворки прямиком из Figma дизайн-системы. Пока руками', ' ибо будущее всё еще где-то рядом.\n\nПоехали! Начну с демонстрации бесполезных', ' но прикольных эффектов кастомизации всей таблицы через главную мастер-ячейку:']"
['\n      EgorEr\n    '],['Мы забыли про делегирование в JavaScript. Event delegation in React'],['JavaScript *Клиентская оптимизация *ReactJS *'],"['Всем привет. Статья о делегирование событий в JavaScript и реализация его в react.js.\n\nО чем собственно речь? Зачем и почему?\nДля начала давайте кратко обсудим:\n\nчто есть событие;\nкак происходит распространение;\nобработка DOM Level 2 с примером на JavaScript;\n\nИ в конце: почему не надо забывать об делегировании в React.\nСобытие\nJavaScript с HTML взаимодействуют между собой за счёт событий (events). Каждое событие служит для того', ' чтобы сказать JavaScript’у о том', ' что в документе или окне браузера что-то произошло. Для того чтобы отловить эти события нам нужны слушатели (listeners)', ' этакие обработчики', ' которые запускаются в случае возникновения события.\nРаспространение событий\nПорядок. Решая проблему: как понять', ' какой части страницы принадлежит событие? Было реализовано два способа: в Internet Explorer — “всплытие событий”', ' а в Netscape Communicator — “перехват событий”. ']"
['\n      SayLovePlz\n    '],['Локализация React приложении'],['Разработка веб-сайтов *JavaScript *ReactJS *Локализация продуктов *TypeScript *'],"['Всем привет!\nДо нового года остаются считанные дни. Наткнулся на свой список дел', ' которые собирался сделать в 2019-м', ' среди них оказалось и написать статью на Хабр. Самое время заскочить в уходящий вагон).\nСразу оговорюсь', ' пиарю свой велосипед', ' если такое Вам не по душе', ' то можете смело пропускать статью.\nЧто такое локализация?\nПод локализацией здесь и далее будем понимать процесс адаптации приложения под разные языки и регионы. Локализация это не только про перевод текста. Пользователям приятнее видеть привычный формат дат', ' денежных значений', ' даже разделители в числах могут играть роль.']"
['\n      CodeShaman\n    '],['Debouncing с помощью React Hooks'],['JavaScript *ReactJS *'],"['Сегодня я собираюсь показать вам', ' как создать хук useDebounce', ' который позволяет супер-просто отложить вызовы АПИ', ' что бы они не происходили слишком часто.\nТак же я создал демо', ' которое использует наш хук. Оно ищет по АПИ Marvel Comics и хук useDebounce позволяет избежать обращений к серверу на каждое нажатие клавиши.\n']"
['\n      aon24\n    '],['Раскраска текстов в html и React'],['Python *XML *ReactJS *'],"['Добавить разметку в текст руками легко. Можно разметить текст прямо здесь', ' на Хабре', ' а потом скопировать на сайт. Можно сделать поиск с заменой в Notepad++ или в Atom.\n\r\nЕсли это 1 текст. Если текстов много', ' хочется иметь инструмент для выделения фрагментов текста html-тегами или формирование исходного кода для React. На Питоне это не сложно (несколько строк кода на цвет).\n\n\n\r\nЕсли вы знаете Питон и регулярные выражения', ' переходите по ссылке.\n\r\nТам и примеры', ' и исходные коды. Под катом подробное описание.']"
['\n      Maxilect\n    '],['Борьба за производительность по-настоящему больших форм на React'],['Блог компании Maxilect Разработка веб-сайтов *ReactJS *TypeScript *'],"['На одном из проектов мы столкнулись с формами из нескольких десятков блоков', ' которые зависят друг от друга. Как обычно', ' мы не можем рассказать о задаче в деталях из-за NDA', ' но попробуем описать свой опыт “укрощения” производительности этих форм на абстрактном (даже немного не жизненном) примере. Расскажу', ' какие выводы мы сделали из проекта на React с Final-form.\n\n\r\nПредставьте', ' что форма позволяет вам получить заграничный паспорт нового образца', ' одновременно оформляя получение Шенгенской визы через посредника – визовый центр. Кажется', ' этот пример достаточно бюрократичен', ' чтобы продемонстрировать наши сложности.']"
['\n      kitsoRik\n    '],['Работа со строкой запроса в React'],['ReactJS *'],"['Привет. Это та статья', ' о том пакете которого мне не хватало в работе с реактом. \n\n\n\r\nА если быть более конкретно', ' то о пакете для улучшение и облегчение работы с запросами из поисковой строки.']"
['\n      MaxRokatansky\n    '],['Проверка дочерних элементов передаваемых в мок React компонента'],['Блог компании OTUS Тестирование IT-систем *JavaScript *ReactJS *'],"['В преддверии старта курса\xa0«Автоматизация тестирования на JavaScript»\xa0продолжаем публиковать перевод серии полезных статей.Это третья часть из серии о тестировании с React. В прошлой части мы рассмотрели базовый формат моков React компонентов.Еще одна вещь', ' которую вы можете сделать с помощью моков', ' - это проверить', ' правильные ли дочерние элементы были переданы. Вот собственно на это мы сейчас и посмотрим.']"
['\n      aio350\n    '],['Apollo GraphQL React Social App'],['Разработка веб-сайтов *JavaScript *Программирование *ReactJS *'],"['\n\r\nДоброго времени суток', ' друзья!\n\r\nВ поисках вдохновения наткнулся на этот замечательный туториал', ' посвященный разработке «социального» клиент-серверного приложения на MERN + GraphQL.\n\r\nРешил его расшифровровать и немного доработать для заинтересованных. Расшифровка означает', ' что каждая строка кода снабжена подробным комментарием. Доработка состоит в добавлении аватара пользователя и исправлении нескольких критичных для работы приложения ошибок.\n\r\nКод проекта находится здесь.\n\nОсновные возможности приложения\n\nРегистрация/авторизация пользователей\nДобавление/удаление постов\nЛайк/дизлайк постов\nДобавление/удаление комментариев к постам\nОтображение количества лайков и комментариев\n']"
['\n      mercifulcarnifex\n    '],['Собираем свою библиотеку для SSR на React'],['Блог компании KTS JavaScript *Проектирование и рефакторинг *ReactJS *'],"['Server Side Rendering часто применяется в разных проектах. Существуют крутые фреймворки для React – NextJS и Gatsby. Но в то же время любой фреймворк диктует архитектуру приложения', ' а это приводит к проблемам в больших приложениях. Поэтому часто можно встретить собственные сборки для SSR.В статье описаны шаги создания собственной библиотеки для серверного рендеринга на React.']"
['\n      prigara\n    '],"['Новый WebStorm 9: просто лучше. Поддержка Meteor', ' React и JSX', ' интеграция с Gulp', ' PhoneGap и многое другое']",['Блог компании JetBrains Разработка веб-сайтов *JavaScript *'],"['2 недели назад мы полностью обновили WebStorm — нашу IDE для front-end-разработки и Node.js. Мы уже анонсировали некоторые улучшения в WebStorm 9', ' в том числе поддержку новых фреймворков и инструментов. С тех пор было проделано еще немало работы', ' результаты которой можно увидеть в WebStorm 9. В этом посте мы подробно расскажем об этом новом функционале и кратко напомним обо всем остальном.\n\n\n\n']"
['\n      vmakhaev\n    '],['Amelisa. Оффлайн и реалтайм движок для React и Mongo'],['Разработка веб-сайтов *JavaScript *Разработка мобильных приложений *Node.JS *ReactJS *'],"['\r\nНаписал недавно движок для синхронизации данных', ' имеющий первоклассную поддержку оффлайна. Например', ' можно уйти в оффлайн', ' изменять данные', ' закрыть браузер', ' открыть браузер', ' открыть сайт (выйти в онлайн) и данные смержатся без потерь. Также во время онлайна данные между клиентом и сервером синхронизируются в реальном времени. Хочу рассказать', ' в чём была идея', ' какие есть подобные решения/технологии и кому это может пригодиться.\n\n\n\n\n']"
['\n      marshinov\n    '],['Архитектура модульных React + Redux приложений 2. Ядро'],['Разработка веб-сайтов *JavaScript *Анализ и проектирование систем *Проектирование и рефакторинг *'],"['В первой части я уделил внимание только общей концепции: редюсеры', ' компоненты и экшны чаще меняются одновременно', ' а не по отдельности', ' поэтому и группировать и их целесообразнее по модулям', ' а не по отдельным папкам actions', ' components', ' reducers. Также к модулям были предъявлены требования:\n\n\nбыть независимыми друг от друга\nвзаимодействовать с приложением через API ядра\n\r\nВ этой части я расскажу о структуре ядра', ' подходящей для разработки data-driven систем.']"
['\n      semashko_sergey\n    '],['Как добиться повторного использования React компонентов (Перевод)'],['JavaScript *ReactJS *'],"['\nПовторное использование кода является одним из наиболее распространенных ключевых моментов в разработке программного обеспечения. Множество фреймворков', ' библиотек призваны структурировать код для повторного использования. Как оказывается', ' каждый из инструментов имеет не только собственный подход к достижению этой цели', ' но и свое собственное определение повторного использования кода.']"
['\n      6thSence\n    '],"['Проблемы React UI Kit-а и единой дизайн-системы', ' о которых вы не знали']",['Блог компании TINKOFF ReactJS *'],"['\n\r\n2 сентября 2017 прошла конференция Moscow Frontend', ' где я на примере React UI Kit рассказывала о проблемах', ' которые встречаются при внедрении UI Kit в компании. Тема оказалась актуальнее', ' чем я могла предположить', ' поэтому решила опубликовать статью по этой же тематике', ' преследуя две цели: донести материал до людей', ' которые не смогли оказаться на конференции лично', ' и предоставить отличную возможность провести жаркую дискуссию на эту тему в комментариях.\n\r\nПриятный бонус заключается в том', ' что после выступления и дискуссий в кулуарах в моем материале к докладу появились дополнения и нововведения. Поэтому', ' даже если вы были на конференции', ' вам все равно будет интересно прочитать статью. В конце материала я оставила несколько вопросов', ' на которые я попрошу ответить в комментариях. Приятного чтения!']"
['\n      arylkov\n    '],['Как сделать типовые задачи в web приложении на React JS'],['ReactJS *'],"['Как сделать простые типовые', ' часто встречающиеся задачи в web приложении на React JS\n\r\nПри написании web приложений', ' интерфейса часто приходится решать типовые задачи по управлению элементами на форме', ' скрывать', ' делать не доступными', ' фильтрации', ' поиски', ' сортировки и др. Изучая React JS я начал подготавливать библиотеку подобных решений', ' её и представлю ниже. Как это работает человеку', ' изучающему React будет понятно на примерах', ' которые выложены на GitHub. ']"
['\n      VanishMax\n    '],['Тернарные операторы и логическое “И” в React.js'],['Разработка веб-сайтов *JavaScript *ReactJS *'],"['Всем привет! Вы читаете перевод статьи Donavon West “Conditional Rendering in React using Ternaries and Logical AND”\n\n\n\r\nСуществуют несколько способов заставить React рендерить то', ' что вам нужно. Вы можете использовать традиционный оператор if или switch. В этой статье мы рассмотрим этим способам альтернативу. Будьте осторожны: она несет некоторые сюрпризами', ' с которыми стоит быть поаккуратнее.']"
['\n      maxfarseer\n    '],['Мой опыт консультирования по JavaScript (React/Redux)'],['Я пиарюсь '],"['Всем добрый день. В марте-апреле исполнится два года', ' как я выпустил небольшие текстовые книги по React на русском языке. Учебники без ""воды"" вышли в удачное время', ' и я получил много посещений', ' скачиваний и ""читателей""', ' так же известных как разные ip-адреса.\nКниги окунули меня с головой в консультирование на русском языке. Я бы хотел высказать свои мысли по этому поводу и услышать ваши комментарии (как от тех', ' кто консультирует', ' так и от тех', ' кто ищет помощи). Надеюсь', ' для кого-то эта статья будет катализатором реакции ""помочь другим и заработать"".\n']"
['\n      maxfarseer\n    '],['React v16.4.0: События указателей'],['JavaScript *ReactJS *'],"['Последний минорный релиз добавляет поддержку часто запрашиваемой фичи — событий указателей (pointer events)!\nТакже', ' он включает исправления для метода getDerivedStateFromProps. Полный список изменений доступен ниже.']"
['\n      PaulMaly\n    '],['Как сделать поиск пользователей по GitHub без React + RxJS 6 + Recompose'],['Разработка веб-сайтов *JavaScript *ReactJS *'],"['Эта статья является ответом на статью-перевод «Как сделать поиск пользователей по GitHub используя React + RxJS 6 + Recompose»', ' которая буквально вчера научила нас как надо использовать React', ' RxJS и Recompose вместе. Что ж', ' предлагаю теперь посмотреть', ' как это можно реализовать без оных инструментов.\n\n']"
['\n      apostteriori\n    '],['Разыгрываем билеты на воркшоп «Advanced React State Management With MobX»'],['Блог компании Mail.ru Group JavaScript *ReactJS *'],"['\n\r\nПривет', ' хаброчитатели! Мы с классными новостями. Как только наши коллеги узнали', ' что Michel Weststrate готов сделать воркшоп в Москве', ' сразу собрали группу желающих. И решили разыграть два билета на мастер-класс среди читателей хаброблога. Про воркшоп и условия розыгрыша читайте под катом.']"
['\n      KillBill\n    '],['Uibook — инструмент для визуального тестирования React-компонентов с медиа-запросами'],['Разработка веб-сайтов *JavaScript *HTML *Тестирование веб-сервисов *ReactJS *'],"['\nВсем привет! Меня зовут Виталий Ризо', ' я фронтенд-разработчик в «Амплифере». Мы сделали Uibook — простой инструмент для визуального тестирования React-компонентов с реальными медиа-запросами. Расскажу', ' как он работает и чем может быть полезен вам. ']"
['\n      andrei_anisimov\n    '],['Генерация приложения на React с бэкэндом на GraphQL за считанные минуты'],['JavaScript *Программирование *ReactJS *'],"['Мы добавили новую экспериментальную возможность в 8base CLI (Command Line Interface)', ' которая генерирует готовое приложение на React из вашей модели данных. Это очень удобно для начала работы с GraphQL и React', ' а также для быстрого создания пользовательского интерфейса приложения. Похоже на скаффолдинг в Ruby-on-Rails.\n\r\nСозданное приложение основано на Create React App', ' использует Apollo Client для GraphQL запросов', ' включает в себя аутентификацию на основе Auth0', ' а также возможность загрузки файлов.']"
['\n      MaxRokatansky\n    '],['React Native: Создание анимированного поля ввода с помощью Animated API'],['Блог компании OTUS Программирование *ReactJS *'],"['Всем привет! Сегодня делимся с вами познавательным материалом', ' перевод которого подготовлен специально для студентов курса «ReactJS/React Native-разработчик».\n\n\n\nИтак', ' начнем.\n\r\nВсе мы видели такие поля для ввода:\n\n\n\r\nНадпись большая и выглядит как плейсхолдер', ' пока вы не наведете фокус на ввод. Она станет меньше и поднимется вверх.\n\r\nВыглядит великолепно. Гладко. Безупречно.\n\r\nА еще кажется', ' что только опытный разработчик может так сделать', ' не правда ли?\r\nНу', ' возможно', ' это и было так до появления React Native', ' в те времена', ' когда люди жили в пещерах и творили всякую дичь. Но это осталось в прошлом.']"
['\n      bjurijs\n    '],['Форма обратной связи в React Native при помощи AWS + Telegram'],['JavaScript *Разработка мобильных приложений *'],"['\n\r\nПеред тем как я начал интеграцию формы обратной связи в одном из моих последний проектов', ' я пытался найти нестандартный подход для решения задачи. Электронная почта нуждается в некого рода сервера SMTP', ' да и это просто скучно', ' особенно для старт-апа при низком потоке сообщений.\n\r\nМессенджеры', ' это отличная альтернатива', ' и это путь', ' который я выбрал. Telegram предоставляет один самых простых способов создания ботов (если не самый простой). На его месте может быть что угодно — другие мессенджеры', ' телефонные звонки (Amazon Connect) или Яндекс Диалоги.\n\r\nМы не пытаемся создать чат-бот или интерфейс для переписки', ' мы хотим', ' чтобы это выглядело как обычная форма обратной связи', ' когда отправитель не ожидает немедленного ответа. В примере ниже', ' получатель сможет ответить пользователю через электронную почту', ' которую он оставит в поле формы.']"
['\n      Antek-ESD\n    '],"['Сказ о том', ' как я настраивал Azure AD B2C на React и React Native Часть 1 (Туториал)']",['.NET *Microsoft Azure ReactJS *'],"['\nПредисловие\r\nМы разрабатываем кросс платформенное ПО и перед нами возникла задача — «Сделать общую систему авторизации». \n\r\nНужно было сделать общую БД пользователей для трех приложений', ' но при этом у каждого приложения была какая-то своя отличительная черта. Так же у нас есть общие микросервисы и нам хотелось бы', ' чтобы токен генерировался и проверялся из одного источника. Т.к. мы пользуемся сервисами Azure выбор пал на Azure AD B2C. По мере настройки всего этого добра была выявлена куча подводных камней. Всю историю я поделю на несколько частей:\n\n\n Часть 1: Создание и настройка приложений на Azure AD B2C\n Часть 2: Работа с Identity Framework Experience\nЧасть 3: Подключение приложения React\nЧасть 4: Подключение приложения React Native\nЧасть 5: Подключение и настройка бэкэнда на .NET Core 3\n']"
['\n      Antek-ESD\n    '],"['Сказ о том', ' как я настраивал Azure AD B2C на React и React Native Часть 2 (Туториал)']",['.NET *Microsoft Azure ReactJS *'],"['\nПредисловие\r\nПродолжение цикла по работе с Azure B2C. В данной статье я расскажу о самом сложном и неочевидном моменте', ' а именно Identity Experience Framework.\n\nОсновная цель — собрать воедино картинку для тех кто вообще не в теме и помочь настроить какие-то основные фичи. \n\nСсылки на связанные посты\n\n\nЧасть 1: Создание и настройка приложений на Azure AD B2C\nЧасть 2: Работа с Identity Framework Experience\nЧасть 3: Подключение приложения React\nЧасть 4: Подключение приложения React Native\nЧасть 5: Подключение и настройка бэкэнда на .NET Core 3\n']"
['\n      Antek-ESD\n    '],"['Сказ о том', ' как я настраивал Azure AD B2C на React и React Native Часть 5 (Туториал)']",['.NET *Microsoft Azure ReactJS *'],"['\nПредисловие\r\nЗавершающая работа в цикле по работе с Azure B2C. В этой статье я расскажу о том', ' как подключить аутентификацию к бэкэнду на .NET Core 3.\n\nСсылки на связанные посты\n\n\nЧасть 1: Создание и настройка приложений на Azure AD B2C\nЧасть 2: Работа с Identity Framework Experience\nЧасть 3: Подключение приложения React\nЧасть 4: Подключение приложения React Native\nЧасть 5: Подключение и настройка бэкэнда на .NET Core 3\n']"
['\n      m1ndKiller\n    '],"['Пишем свой CLI генерации React компонент', ' а может быть не только компонент', ' а может не только React']",['JavaScript *ReactJS *TypeScript *'],"['Всем привет!\nВ этой статье', ' я хочу вам рассказать о том', ' как так получилось', ' что мне пришлось писать свой CLI генерации React компонент', ' притом', ' что готовых решений достаточно много.']"
['\n      MaxRokatansky\n    '],['Моки не кусаются! Осваиваем мокинг с React Testing Library'],['Блог компании OTUS JavaScript *Тестирование мобильных приложений *ReactJS *'],"['Перевод статьи подготовлен в преддверии старта курса «Автоматизация тестирования на JavaScript». \n\n\n\n\r\nМоки — не кусаются!\n\r\nОни предназначены помочь вам создавать более простые и надежные тесты. В этой серии статей я продемонстрирую вам паттерны', ' на которые я опираюсь при написании моков (mocks или “заглушек”) компонентов React.']"
['\n      antsam\n    '],['React — Используйте стандартные пропсы для потока данных'],['Разработка веб-сайтов *ReactJS *'],"['\n\r\nДавайте поговорим про поток данных React приложения состоящего из набора форм. \n\r\nПредполагается', ' что читатель знаком с react', ' react-хуками', ' функциональными компонентами', ' мемоизацией хорошо знает javascript и не пугается spread операторов (три точки которые).\r\nUpdate 1: Извините', ' но примеры написаны без использования Typescript и встречается Redux.\n\r\nЯ постараюсь подвести вас к логичному для меня выводу', ' что зачастую компонентам', ' которые отображают форму или часть формы', ' достаточно иметь всего три пропса.\n']"
['\n      yooteam\n    '],"['Как начать работу с React Native', ' улучшить навигацию и перейти на новую библиотеку компонентов']",['Блог компании ЮMoney JavaScript *ReactJS *'],['24 июня прошел четвертый митап по JavaScript под названием Frontend Mix. В этот раз разработчики делились экспертизой в онлайн-формате. Делимся долгожданными видео и нашим опытом во фронтенд-разработке. ']
['\n      maxfarseer\n    '],['Текстовый туториал по React.js и Redux на русском'],['JavaScript *ReactJS *'],"['(у учебника по Основам React вышло второе издание', ' Redux-учебник в процессе обновления)\n\r\nЗакончил работу над парой подробных текстовых туториалов на русском. Постарался уделить как можно больше времени практике. По ходу повествования есть вопросы', ' задачи и решения.\nКурс про Redux попал в официальную документацию.\nОба руководства бесплатны и выложены на gitbook (можно скачать PDF', ' ePub', ' mobi).\nВ текстах нарочно участвуют термины переведенные на русский (например', ' состояние)', ' английские (state)', ' либо английский термин написанный по-русски — стейт. Считаю это допустимым', ' и даже более того', ' удобным для читателя.']"
['\n      gnv_cor\n    '],['React Redux. Получение доступа к state из функции mapDispatchToProps()'],['ReactJS *'],"['Всем привет! Сегодня рассмотрим решение', ' довольно-таки популярной проблемы — получение доступа к state из функции mapDispatchToProps() react-redux приложения.\nИмеется типовой компонент-контейнер (про идеологию компонентов react-redux можно почитать здесь)', ' который генерирую с помощью функции connect(). Код представлен ниже (публикую кусок кода', ' относящийся к данной теме):\nconst mapStateToProps = (state) => {\n    return state.play;\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        togglePlay: () => {\n            dispatch(togglePlay());\n        }\n    }\n};\n\nconst ButtonPlayComponentContainer = connect(\n    mapStateToProps', '\n    mapDispatchToProps\n)(ButtonPlayComponentView);\nТут все просто', ' определяем функции mapStateToProps() для чтения состояния и mapDispatchToProps() для передачи события. Далее генерируем компонент путем передачи созданных функций в connect().']"
['\n      maxfarseer\n    '],['Создаем iOS секундомер на React-Native (субтитры)'],['JavaScript *Разработка мобильных приложений *ReactJS *'],"['Привет', ' Хабр! Готовы субтитры к очень простому туториалу по React Native', ' в котором будет рассмотрена разработка приложения ""Секундомер"". За основу был взят секундомер на iOS.\n']"
['\n      maxfarseer\n    '],['Как сделать конфигурационный файл роутов в React Router 4 (субтитры)'],['JavaScript *ReactJS *'],"['Когда react-router 4 только появился', "" многие переживали по двум поводам:\n\nКак вынести роуты в отдельный файл (конфиг роутов)\nКак теперь жить без onEnter хука.\n\nВ видео от Tyler McGinnis'a освещен первый вопрос.\n""]"
['\n      ru_vds\n    '],['Применение принципов SOLID при разработке React-приложений'],['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['Каждый разработчик знаком с ситуацией выбора технологического стека для проекта. Приходится проанализировать множество факторов - от целей проекта и ресурсов до бюджета', ' соотнести все это с особенностями фреймворков', ' например', ' Angular и React', ' и на основе этого уже подбирать решение. Причем у разных разработчиков оно может быть разным: и каждый будет уверен', ' что он прав.\r\n\r\nМы не будем сравнивать фреймворки', ' тем более что статей', ' отзывов и другой информации полно и на Хабре', ' и на других ресурсах. Да и на профильных конференциях о них постоянно говорят. Сегодня мы предлагаем вам сразиться в поединке умов.\r\n']"
['\n      jamak\n    '],"['Внедряем Angular компоненты в React', ' Vue и даже JQuery если\xa0хотите']",['Angular *ReactJS *VueJS *'],"['Недавно мы публиковали материал о методологии SOLID. Сегодня мы представляем вашему вниманию перевод статьи', ' которая посвящена применению принципов SOLID при разработке приложений с использованием популярной библиотеки React.\n\n\n\r\nАвтор статьи говорит', ' что здесь', ' ради краткости', ' он не показывает полную реализацию некоторых компонентов.']"
['\n      wtnm7\n    '],['fform: React & JSONSchema — максимальная гибкость'],['JavaScript *GitHub ReactJS *TypeScript *'],"['Если вы нашли крутой компонент в npm', ' но она с приставкой ng', ' ngx', ' angular и так далее', ' то не стоит расстраиваться по этому поводу. Есть много решений', ' чтобы этот компонент оказался у вас. В данной статье рассмотрим решение', ' которое официально поддерживается Angular Team', ' а именно \u200a-\u200a Angular Elements.\n\r\nДля практики выберем любой компонент из Awesome Angular.']"
['\n      SalebaAndrey\n    '],['Создание мобильного приложения чата на React Native'],['Разработка под iOS *Разработка мобильных приложений *Разработка под Android *ReactJS *'],"['Это вторая часть статьи (первая тут)', ' посвященная созданию чата', ' используя apollo-server-koa и react-native. В ней будет рассмотрено создание мобильного приложения чата. В предыдущей части уже был создан бекенд для этого чата', ' подробнее с описанием этого процесса вы можете ознакомиться по ссылке.\n\r\nПервым делом с помощью expo-cli создадим новый expo проект', ' для этого выполним в терминале команду:\n\nexpo init\r\nИ проследуем по всем шагам визарда для создания пустого приложения.\n\r\nПосле того', ' как мы получили созданное приложение', ' необходимо добавить зависимости', ' которые будут использованы в дальнейшем:\n\r\nyarn add apollo/react-hooks apollo-cache-inmemory apollo-client apollo-link-http apollo-link-ws apollo-utilities graphql graphql-tag native-base react-router-native subscriptions-transport-ws']"
['\n      pawnhearts\n    '],['React-admin и django rest framework'],['Python *Django *ReactJS *'],"['Наткнувшись недавно на статью о react-admin', ' я решил попробовать что это за зверь. Было интересно прикрутить это к джанге', ' благо там есть dataprovider для rest framework.']"
['\n      whalemare\n    '],['Дружим React Native и Fastlane'],['Разработка мобильных приложений *'],"['\nТе из вас', ' кто хоть раз интересовался подобной темой ни раз натыкался на Fastlane — крайне полезную утилиту', ' решающую проблему автоматизации сборок и публикации приложений.\nСуществует большое количество статей и видео', ' в которых подробно описывается преимущество использования автоматизированной сборки проекта и содержимое этих статей применительно к React Native (впрочем и к другой кроссплатформе) сводится к следующим действиям:\n\nИнициализируем Fastlane в папках iOS и Android\nКопируем платформо-зависимые скрипты вида: clean', ' build', ' publish\nВставляем их в соответствующие iOS и Android директории\nПубликуем приложение!\n\nВ этих статьях упускаются важные моменты', ' с которыми сталкиваются все', ' кто публикует что-то сложнее синтетического примера. Мы не были исключением и поставили себе ряд задач', ' которые необходимо решить']"
['\n      dmitryorelopt\n    '],"['Как уменьшить количество и увеличить читаемость кода в react-redux', ' redux-saga']",['JavaScript *ReactJS *'],"['В этой статье я хотел бы поделиться своим опытом использования связки react-redux и redux-saga', ' а точнее', ' какой «велосипед» я использую', ' для уменьшения количества однотипного кода и упрощению его восприятия.']"
['\n      p07a1330\n    '],['Калькулятор на телефон как способ знакомства с React-native'],['ReactJS *'],"['Приветствую.Последнее время - преимущественно занимался веб разработкой. Это не было основным видом деятельности и я не могу сказать', ' что я являюсь действительно крутым веб-разработчиком', ' однако  - речь сейчас пойдет не об этом. Так получилось', ' что последнее время стало интересно попробовать себя в мобильной разработке - в силу различных причин', ' начиная от того', ' что последнее время основной приоритет информационной области сместился в веб', ' в том числе - с телефонов', ' и заканчивая задумкой для пары pet-проектов. В рамках данной статьи хотелось бы разобрать один из них', ' а так же - высказаться насчет особенностей языка', ' которые особенно сильно бросаются в глаза человеку', ' не занимавшемуся веб-разработкой. Подробности под катом.']"
['\n      MaxRokatansky\n    '],"['react-router: Три метода рендеринга маршрутов (компонентный', ' рендеринговый и дочерний)']",['Блог компании OTUS JavaScript *ReactJS *'],"['В прошлом посте я рассказывал об учебнике по настройке react-router. Если вы не читали предыдущий пост', ' нажмите здесь! Я хочу добавить несколько важных тем о методах рендеринга маршрутов.']"
['\n      qualife\n    '],['Redux-Redents — (еще) один модуль для работы с серверными данными из React-Redux приложений. \xa0'],['Разработка веб-сайтов *JavaScript *Node.JS *ReactJS *'],"['React и Redux', ' в последнее время одни из самых популярных buzz-words в мире фронтенда. Поэтому когда мне потребовалось сделать веб-приложение', ' которое бы отображало данные', ' полученные с сервера', ' а также позволяло бы ими манипулировать (создавать', ' удалять и изменять)', ' я решил построить его на основе связки React и Redux. Множество getting-started руководств покрывают только функционал создания компонентов', ' action creators и reducers. Но как только дело касается обмена с сервером', ' начинаются сложности — растет количество необходимых action creator', ' редьюсеров. Причем они очень похожи друг на друга', ' с миниальными отличиями. В большинстве случаев — только в типе (имени) активности. После того', ' как я создал третий одинаковый набор креаторов и редьюсеров', ' то появилось желание что-то изменить. Так родилась идея реализации redux-redents.']"
['\n      theWaR_13\n    '],['Интернационализация приложения в React (и не только)'],['ReactJS *'],"['Недавно я уже писал статью о том', ' как можно достаточно удобно валидировать формы в React с помощью компонента Formsy-React. Сегодня я бы хотел рассказать о подходе', ' который использовал для интернационализации разрабатываемого приложения. Как бонус', ' используемая библиотека добавляет возможность плюрализации', ' что является весьма полезной фишкой при разработке многоязычного приложения. Если интересно', ' прошу под кат!\n']"
['\n      ConfGuru\n    '],"['DevConf::Frontend — 17 июня в Москве: Angular 4', ' React Native', ' выбор JS-фреймоврка для крупного проекта + Lua Meetup']",['Блог компании DevConf Разработка веб-сайтов *Lua *Angular *ReactJS *'],"['\r\n17 июня в Москве', ' Измайлово пройдет конференция Devconf::FrontEnd\n\r\nОткроет ее Виталий Грин', ' лидер Frontend разработки Альфа Лаборатории', ' Ex-Яндекс.Карты', ' \r\nкоторый расскажет как сделать общую библиотеку компонентов с одной стороны стабильной для десятков команд', ' а с другой стороны гибкой и расширяемой \n\r\nСергей Аверин', ' tech-менеджер из компании Acronis поведает о том', ' как важен правильный выбор JS-фреймоврка для крупного проекта в условиях', ' когда любое более-менее важное технологическое решение сразу затрагивает с десяток команд', ' несколько сотен человек и права «случайно все сломать» нет. \n']"
['\n      Wriketeam\n    '],['Бешеные псы: Angular 2 vs React: доклад Евгения Гусева и Ильи Таратухина'],['Блог компании Wrike Разработка веб-сайтов *JavaScript *Angular *ReactJS *'],"['Angular2 отрелижен', ' React и подавно. Копья поломаны', ' мечи перекованы на орала', ' страсти уже поутихли и', ' вроде как', ' статус кво восстановлен. Кто-то использует один инструмент', ' кто-то другой', ' разве что', ' иногда раздаются возгласы: «А у них...!»\n\n\n\r\nОднако не всё так просто. В конце концов', ' мы не только пишем код', ' но и решаем однотипные проблемы:\n\n\nКак сделать наше приложение быстрым?\nКак писать понятнее и проще?\nКак писать быстрее?\n\r\nКто-то может сказать: «Эту тему уже миллион раз обсасывали', ' зачем опять?». Но', ' все же', ' если вы запускаете новый проект или решили переписать старый', ' перед вами всё равно встанет проблема выбора. И даже если вы считаете', ' что всё очевидно — это далеко не так.\n']"
['\n      KarafiziArthur\n    '],['Сокращаем использование Redux кода с помощью React Apollo'],['JavaScript *Node.JS *API *ReactJS *'],"['Всем привет! Хочу поделиться своим переводом интересной статьи Reducing our Redux code with React Apollo автора Peggy Rayzis. Статья о том', ' как автор и её команда внедряли технологию GraphQL в их проект. Перевод публикуется с разрешения автора.\n\nПереключаемся на декларативный подход в Высшей Футбольной Лиге\nЯ твёрдо убеждена', ' что лучший код — это отсутствие кода. Чем больше кода', ' тем больше вероятности для появления багов и тем больше тратится времени на поддержку такого кода. В Высшей Футбольной Лиге у нас совсем небольшая команда', ' поэтому мы принимаем этот принцип близко к сердцу. Мы стараемся оптимизировать всё', ' что нам по силам', ' либо путём увеличения переиспользуемости кода', ' либо просто перестав обслуживать определённую часть кода.\nВ данной статье вы узнаете о том', ' как мы передали контроль над получением данных в Apollo', ' что позволило нам избавиться от почти 5', '000 строчек кода. К тому же', ' после перехода на Apollo наше приложение стало не только намного меньше по объёму', ' оно также стало более декларативным', ' поскольку теперь наши компоненты запрашивают только те данные', ' которые им нужны.']"
['\n      dimskiy\n    '],['Доклады с Frontend Mix: оптимизация загрузки сайтов и дизайн-система на БЭМ и React'],['Блог компании ЮMoney JavaScript *Программирование *Разработка под e-commerce *ReactJS *'],"['\nПредлагаю всем близким к фронтенду посмотреть доклады с прошедшего в августе митапа Frontend MIX. Приглашенные спикеры из Альфа-Лаборатории', ' Яндекс.Денег и Epam делятся нюансами мобильной оптимизации и выбора между Npm v5', ' Yarn или pnpm', ' а также секретами построения дизайн-системы на БЭМ и React.\nПод катом вы найдете три видео.']"
['\n      maxfarseer\n    '],"['Новое API React: Suspense (ру субтитры', ' с выступления Дэна на JS Conf)']",['JavaScript *ReactJS *'],"['\nДэн Абрамов рассказывает о ""будущем"" API — Suspense. По ходу презентации он описывает две проблемы:\n\nпроблема производительности устройства пользователя;\nпроблема его ""коннекта"" (скорости и стабильности соединения);\n\nкоторые позволяет решить новое API.\nP.S. Видео под катом', ' не забудьте включить субтитры.']"
['\n      maxfarseer\n    '],['Code-review тестового задания junior react разработчиков'],['JavaScript *ReactJS *'],"['Что это такое?\nЭто код-ревью решений второго тестового задания. На видео отмечены удачные решения и указаны ошибки', ' а так же советы по их исправлению. В данной заметке отмечены общие проблемы и даны ссылки с ""отметкой времени"".\n']"
['\n      mikolalex\n    '],['Прокачиваем React хуки с помощью FRP'],['JavaScript *'],"['Освоив хуки', ' многие React-разработчики испытали эйфорию', ' наконец-то получив простой и удобный инструментарий', ' позволяющий реализовывать задачи существенно меньшим количеством кода. Но значит ли это', ' что предложенные из коробки стандартные хуки useState и useReducer — это все', ' что нам нужно для управления состоянием?\nНа мой взгляд', ' в сыром виде их использование не очень удобно', ' их скорее можно расценивать как базу для постройки действительно удобных хуков управления состоянием. Сами разработчики Реакта всячески поощряют разработку кастомных хуков', ' так почему же не заняться этим? Под катом мы на очень простом и понятном примере рассмотрим', ' что не так с обычными хуками и как их можно усовершенствовать', ' да так', ' чтобы вообще отказаться от их использования в чистом виде.']"
['\n      Plarium\n    '],"['Создание игры «Крестики-нолики» при помощи TypeScript', ' React и Mocha']",['Блог компании Plarium Программирование *Разработка игр *TypeScript *'],"['Представляем вам перевод статьи Josh Kuttler', ' опубликованной на blog.bitsrc.io. Узнайте', ' как создать приложение «Крестики-нолики»', ' используя React и TypeScript.\n\n\n\r\nПростая игра в крестики-нолики создана по модульному принципу и загружена на сайт Bit. Вы можете изменять компоненты моей игры и тестировать ее онлайн на Bit PlayGround при помощи NPM', ' Yarn или Bit. Для этого перейдите к моей коллекции компонентов.']"
['\n      yantishko\n    '],['Проблемы и нюансы при разработке под SmartTV с использованием React.js'],['Разработка веб-сайтов *JavaScript *Разработка под Tizen *ReactJS *'],"['Хочу поделиться опытом разработки приложения с просмотром видео контента для SmartTV (Tizen и WebOS) и с какими проблемами мы столкнулись.\n\r\nНа современных телевизорах', ' как мы знаем', ' можно устанавливать разные приложения', ' для облегчения работы с какими-то ресурсами и контентом. В большинстве случаев', ' эти приложения под капотом это обычный браузер', ' на теликах это Chromium.\n\r\nТак как это браузер', ' то ничего нам не мешало использовать React.js для разработки', ' что повлияло на некоторые проблемы с производительностью.\n\r\nЯ не буду рассказывать о том', ' как именно нужно делать с примерами кода', ' я расскажу о нюансах и решениях', ' которые были приняты.']"
['\n      ru_vds\n    '],['[в закладки] PDF- и ePUB-версия руководства по React'],['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *Профессиональная литература ReactJS *'],"['Привет Хабр! В этом году мы делали перевод огрооомного обучающего курса по React — в нашем блоге он был аж в 27 постах. В каждой части', ' от простого к сложному', ' выдавался концентрат знаний', ' которые тепло оценили читатели нашего блога. А сегодня мы поймали себя на мысли', ' что не выпустили все части одним большим куском — исправляемся!\n\n\n\r\nДля новых читателей нашего блога — два бонуса внутри.']"
['\n      Music_Corner\n    '],['Архитектура приложения React Redux'],['ReactJS *'],"['Предисловие\r\nЭто мой первый пост на Хабре', ' поэтому не судите сильно строго (ну или судите', ' но конструктивно).\n\r\nХотелось бы отметить', ' что в этом подходе основным преимуществом для меня стало то', ' что мы четко разграничиваем и делегируем бизнес логику по модулям. Один модуль отвечает за что-то одно и за что-то весьма конкретное. То есть', ' при таком подходе', ' в процессе разработки не возникает мысли: «а где мне лучше (правильнее) будет сделать вот это вот?». При таком подходе сразу ясно', ' где конкретно должна решаться задача/проблема']"
['\n      Akinyaev\n    '],"['Эпическая сага про маленький custom hook для React (генераторы', ' sagas', ' rxjs) часть 2']",['JavaScript *ReactJS *'],"['Генераторы - это новый вид функций', ' который появился в ES6. О них написано немало статей и приведено множество теоретических примеров. Представим', ' что генератор (функция в объявлении', ' которой есть *) - это некое электрическое устройство с дистанционным пультом управления. После создания и монтирования генератора (объявления функции) нужно его ""крутануть"" (выполнить эту функцию)', ' чтобы он вращался на холостых оборотах и ""запитал"" пульт управления собой (при выполнении функции-генератора возвращает итератор). На этом пульте управления две кнопки: Пуск (вызвать первый раз метод next итератора) и Next (последующие вызовы метода next итератора). Далее с этим пультом управления можно носиться по всей электростанции (по нашему приложению) и когда понадобиться электрическая энергия (некие значения из функции-генератора) нажимать на пульте кнопку next (выполнять метод next() генератора). Генератор производит нужное количество электроэнергии (возвращает некое значение через yield) и опять переходит в холостой режим (функция-генератор ждёт следующего вызова next от итератора). Цикл продолжается', ' пока генератор может производить электричество (имеются операторы yield) или он не остановится (в функции-генераторе встретится return).']"
['\n      EdgarAbgaryan\n    '],['Небольшая практика с JS Proxy для оптимизации перерисовок React компонентов при использовании useContext'],['JavaScript *ReactJS *'],"['Проблема оптимизации useContext и интересный способ её решения. Мы создадим свой кастомный хук создать useSmartContext\xa0с такой же сигнатурой как у useContext', ' но который будет ререндарить компонент только при изменении использующейся части контекста.']"
['\n      freetonik\n    '],"['Новые курсы на Хекслете: React', ' Ansible и другие']",['Блог компании Хекслет PHP *Регулярные выражения *ReactJS *'],"['Привет', ' Хабр!\n\r\n4 месяца назад мы писали о запуске бета-версии нового Хекслета — образовательной платформы для программистов с настоящей практикой в браузере. В ближайшие месяцы Хекслет выходит из беты', ' а сегодня я хочу рассказать о нескольких новых курсах. Но вначале вкратце об обновлениях сервиса:\n\n\nМы открыли публичный чат сообщества Хекслет в Слаке! Там можно общаться с другими юзерами и с преподавателями. Есть специальные каналы по отдельным курсам и темам', ' есть даже канал для изучения английского языка.\nОповещения о выходе новых уроков в ваших курсах теперь приходят на почту и появляются в уведомлениях на сайте. \nНа сайте теперь появляются запланированные курсы', ' которые находятся сейчас в разработке (подробнее о них ниже). На эти курсы можно подписаться заранее.\nВ разделе «Песочница» находятся бесплатные курсы в свободном формате от других пользователей Хекслета. Вы тоже можете создать свой практический курс!\nЗа прохождения уроков начисляются баллы', ' а на главной странице можно видеть свою позицию в топе пользователей. \n\r\nА теперь — новые курсы:\n\nОсновы Ansible\n\n\r\nСистемы управления конфигурацией и оркестрации – важные инструменты в арсенале современного разработчика и системного администратора. Цель этого курса – научиться работать с Ansible', ' популярным инструментом управления конфигурацией. Как мы писали ранее', ' Ansible активно используется при разработке и деплое Хекслета.']"
['\n      maxfarseer\n    '],['Как использовать getDerivedStateFromProps в React 16.3 (ру субтитры)'],['JavaScript *ReactJS *'],"['Вышел перевод нового видео от команды hackage.tv', ' в котором очень доступно рассказано об использовании методов жизненного цикла в React 16.3 и getDerivedStateFromProps в частности.\n']"
['\n      maxfarseer\n    '],['Оптимизируем (debounce) срабатывание событий в React'],['JavaScript *ReactJS *'],"['Вышел перевод видео с канала Manorism. В этот раз ничего нового. Наоборот', ' вспоминаем ""старое"" и оптимизируем частоту срабатывания событий с помощью ""дебаунс"" (debounce).\n']"
['\n      bgnx\n    '],['Как организовать общее состояние в react-приложениях без использования библиотек (и зачем нужен mobx)'],['JavaScript *ReactJS *'],"['Cразу небольшой спойлер — организация состояния в mobx ничем не отличается от организации общего состояния без использования mobx на чистом реакте. Ответ на закономерный вопрос зачем тогда собственно этот mobx нужен вы найдете в конце статьи а пока статья будет посвящена вопросу организации состояния в чистом в react-приложении без каких-либо внешних библиотек.\n\n\r\nРеакт предоставляет способ хранить и обновлять состояние компонентов используя свойство state на инстансе компонента класса и метод setState. Но тем не менее среди реакт сообщества используются куча дополнительных библиотек и подходов для работы с состоянием (flux', ' redux', ' redux-ations', ' effector', ' mobx', ' cerebral куча их). Но можно ли построить достаточно большое приложение с кучей бизнес-логики c большим количеством сущностей и сложными взаимосвязями данных между компонентами используя только setState? Есть ли необходимость в дополнительных библиотеках для работы с состоянием? Давайте разберемся.']"
['\n      ru_vds\n    '],"['История о V8', ' React и падении производительности. Часть 1']",['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *ReactJS *'],"['В материале', ' первую часть перевода которого мы публикуем сегодня', ' речь пойдёт о том', ' как JavaScript-движок V8 выбирает оптимальные способы представления различных JS-значений в памяти', ' и о том', ' как это влияет на внутренние механизмы V8', ' касающиеся работы с так называемыми формами объектов (Shape). Всё это поможет нам разобраться с сутью недавней проблемы', ' касающейся производительности React.\n\n']"
['\n      phil_b\n    '],"[""Настало ли время покинуть виртуальный дом [React'a]?""]",['Разработка веб-сайтов *JavaScript *Angular *ReactJS *'],['Аудио версия на русском (яндекс.музыка) / iTunes\n\r\nРазберём что не так с фреймворками как подходом и каким может быть следующий этап развития фронтенд архитектуры.\n\n']
['\n      olepav\n    '],['Делаем интерактивный Big Mac Index на React и Quarkly'],['Блог компании Quarkly Разработка веб-сайтов *JavaScript *Программирование *ReactJS *'],"['Привет! Для начала процитирую страницу из Википедии', ' да будет здоров Джимми Уэйлс и все редакторы', ' поддерживающие свободную энциклопедию. Согласно ней', ' индекс бигмака — это неофициальный способ определения паритета покупательной способности. Если проще', ' этот индекс довольно наглядно показывает уровень цен в стране', ' ведь в основе стоимости бигмака: две мясных котлеты гриль', ' специальный соус', ' сыр', ' огурцы', ' салат и лук', ' всё на булочке с кунжутом… Кроме этого', ' конечно же', ' в ценник заложены аренда помещений и оборудования', ' рабочая сила и многие другие факторы.\nВажно и другое: милые сердцу многих рестораны с желтой буквой «M» имеют обширнейшую сеть', ' что дает возможность сравнить цены почти по всему миру. Исследования ведутся с 1986 года и постоянно актуализируются журналом «The Economist».\nМы визуализировали имеющиеся в свободном доступе данные и собрали простое приложение', ' используя React и наш проект Quarkly.\n']"
['\n      redhatrussia\n    '],"['Изучение экоcистемы Kubernetes в 2021 году', ' global modal в React и 7 сетевых команд Linux для каждого сисадмина']",['Блог компании Red Hat Настройка Linux *Open source *Виртуализация *Kubernetes *'],"['Собрали для вас много полезных ссылок', ' шпаргалок', ' мероприятий и книжек в нашем новом полезном дайджесте. Оставайтесь с нами – станьте частью DevNation!']"
['\n      mercifulcarnifex\n    '],['Игра с голосовым управлением на React и Phaser'],['Блог компании KTS JavaScript *ReactJS *Медийная реклама '],"['В апреле 2020 года перед отделом рекламных спецпроектов KTS встала непростая задача: разработать игру-раннер с управлением голосом в браузере.В этой статье я расскажу', ' как мы делали этот проект', ' какие технические решения принимали', ' какие технологии использовали и с какими проблемами сталкивались. При разработке мы использовали TS + React + MobX и Phaser в качестве игрового движка.']"
['\n      maxfarseer\n    '],['Wesbos \xa0рассказывает как использовать новое React Context API (субтитры)'],['JavaScript *ReactJS *'],"['Все пытаются рассказать о новом Context API. У Веса это получилось хорошо и не скучно. К тому же', ' у него отличная речь', ' что позволит вам подсматривать в субтитры гораздо реже.\n']"
['\n      Modin\n    '],"['5 причин', ' почему вы должны забыть о Redux в приложениях на React']",['Разработка веб-сайтов *JavaScript *ReactJS *'],"['Я работаю с Реактом на протяжении почти 3 лет', ' использовал как Redux так и MobX и у меня к текущему моменту возник вопрос. Почему абсолютное большинство front-end разработчиков продолжают свято верить в то', ' что Redux + Redux Saga + Reselect + 100500 других библиотек «облегчающих» жизнь — это лучшее решение на сегодняшний момент? Я приведу 4 аргумента в пользу того', ' чтобы в следующем проекте вы использовали MobX вместо Redux. ']"
['\n      Marat1403\n    '],"['React. Не вглубь', ' а вширь. Композиция против реальности']",['Блог компании Ситимобил JavaScript *ReactJS *'],"['Давайте рассмотрим искусственный пример кода', ' который', ' как и в жизни', ' постепенно будет расширяться и усложняться', ' а наша задача', ' глядя на это всё', ' понять: не пора ли рефакторить. План наших действий: задача – решение – анализ – рефакторинг. Приступим.']"
['\n      alizar\n    '],['Facebook изменил лицензию React на стандартную MIT'],['WordPress *Open source *ReactJS *'],"['Facebook анонсировал изменение лицензии на будущие версии React', ' Jest', ' Flow и Immutable.js. Вместо прежней лицензии BSD+Patents теперь будет использоваться лицензия MIT. Это позволит компаниям включить React в проекты Apache и избежать разногласий в сообществе Open Source. \n\r\nБлагодаря этому действию Facebook компания Automattic изменила своё решение. Неделю назад Мэтт Мулленвег написал', ' что из-за условий лицензирования они решили переписать Gutenberg (ключевой перспективный проект WordPress) с помощью другой библиотеки. Похоже', ' это подействовало на Facebook — и они отказались от статьи', ' касающейся патентов', ' начиная с версии React 16', ' которая должна выйти на этой неделе.\n\r\nСам Мэтт приветствовал это решение и сказал', ' что теперь ничто не мешает использовать React.']"
['\n      alconost\n    '],['Как Фейсбук приобрел Инстаграм и почему это привело к открытию исходного кода React.js'],['Блог компании Alconost JavaScript *Программирование *GitHub ReactJS *'],"['История фреймворка React: как\xa0Фейсбук приобрел Инстаграм и\xa0почему это привело к\xa0открытию исходного кода React.js\n\n\r\nСегодня React\xa0— одна из\xa0самых популярных в\xa0мире библиотек JavaScript для\xa0пользовательского интерфейса: более 70\xa0тыс. «звезд» на\xa0Гитхабе', ' не\xa0менее 1100\xa0авторов и\xa0миллионы скачиваний каждый месяц\xa0— кроме того', ' этот фреймворк используется более\xa0чем в\xa04\xa0тыс. компаний. Но\xa0когда Фейсбук впервые показал React миру', ' это мало кого обрадовало.\n\r\nМы решили погрузиться в\xa0историю рождения одной из\xa0самых популярных технологий в\xa0мире разработки ПО\xa0— React', ' и\xa0пригласили Пита Ханта (Pete Hunt)', ' стоявшего у\xa0истоков этой библиотеки (сейчас он генеральный директор компании Smyte)', ' чтобы он наконец-то рассказал о\xa0том', ' для\xa0чего создавали React', ' почему эта технология стала популярной в\xa0Фейсбуке после приобретения Инстаграма', ' и\xa0как\xa0она в\xa0итоге вышла в люди.\n\nОсновные моменты\nОт\xa0приложения Facebook Camera к\xa0приобретению Инстаграма\r\nМарк (Цукерберг) собрал всех и\xa0говорит: «Мобильные устройства «выстрелят»', ' поэтому срочно бросаем всё и\xa0переводим ресурсы на\xa0мобильные разработки». Мне казалось', ' это какая-то сумасшедшая идея: мы не\xa0могли поддерживать работу самого большого фотосайта в\xa0сети', ' имея горстку людей в\xa0команде. Совершенно бессмысленно переводить людей на\xa0разработку приложений для\xa0iOS и\xa0Android', ' которые составляют совсем небольшую долю нашего трафика. Но\xa0оказалось', ' что Марк был на\xa0100% прав\xa0— поэтому я и\xa0не\xa0генеральный директор Фейсбука…\n\r\nМы разработали приложение Facebook Camera', ' и\xa0даже гордились тем', ' что получилось… Но\xa0пришел Инстаграм\xa0— и\xa0наш проект канул в\xa0Лету…\n\r\nРебятам из\xa0Инстаграма дали гараж на\xa0территории Фейсбука', ' где можно было сидеть и\xa0спокойно пилить свою идею. Они пользовались надежными системами безопасности Фейсбука', ' но\xa0кроме того продолжали использовать AWS', ' а\xa0еще\xa0— разрабатывали собственную стратегию продукта', ' насколько я могу судить… И\xa0я\xa0был первым сотрудником из\xa0Фейсбука', ' которого перевели в\xa0Инстаграм…\n\nПереведено в Alconost']"
['\n      maxfarseer\n    '],['Переписываем тестовое задание для junior frontend на TypeScript и react-hooks'],['JavaScript *ReactJS *TypeScript *'],"['Привет Хабр', ' сегодня мы позанимаемся с TypeScript и React-hooks. Данный туториал поможет вам разобраться с основами ""тайпскрипта"" и поможет в работе над тестовым заданием для фронтендера.\nТестовые задания на проекте ""Без Воды"" — это возможность получить code-review. Дедлайн для текущего задания — 11 апреля 2019 года.\n']"
['\n      JCHouse\n    '],['Angular 2 против React: И будет кровь'],['JavaScript *Angular *ReactJS *'],"['(перевод', ' оригинал статьи)\n\r\nAngular 2 достиг беты и имеет все шансы сорвать лавры топового фреймворка в 2016 году. Время разборок. Давайте посмотрим', ' что он может противопоставить React', ' душечке из 2015 года.\n\nDisclaimer: Я работал с первым Angular', ' но переключился на React в 2015 году. Я опубликовал Полный курс React и Flux. Так что да', ' я предвзят. Но я буду атаковать обе стороны.\n\r\nХорошо', ' пора начинать. И будет кровь.\n\n\n']"
['\n      owlnagi\n    '],['React Native: новая веха в мобильной разработке Shopify'],['Блог компании VDSina.ru Разработка мобильных приложений *ReactJS *IT-компании '],"['Или почему Shopify переходит на React Native.\n\r\nПосле многих лет нативной мобильной разработки мы решили на всех парах двинуться в сторону разработки мобильных приложений на React Native. Ниже будет ясно', ' что это решение далось нам нелегко.\n\r\nВ конце каждого квартала мы видим одну и ту же картину: большинство наших клиентов делают покупки через мобильные устройства (в третьем квартале прошлого года их доля составила 71%). Чёрная пятница и Киберпонедельник — самое горячее время для наших продавцов', ' а активность покупателей в эти дни зашкаливает. В этом году в период скидок партнеры Shopify зафиксировали 3-процентный рост заказов с мобильных устройств', ' а средняя доля таких покупок составила 69% от общего числа транзакций.\n\r\nТак почему же мы решили перейти на React Native? И почему именно сейчас? Что теперь будет с нашей нативной мобильной разработкой? Быстро и коротко ответить на эти вопросы не получится. Начнем с предыстории.']"
['\n      movax10h\n    '],"['React + mobx путь с нуля. Mobx + react', ' взгляд со стороны']",['JavaScript *ReactJS *'],"['\n\r\nВ «настоящих» проектах мы получаем данные от сервера или пользовательского ввода', ' форматируем', ' валидируем', ' нормализуем и производим другие операции над ними. Всё это принято считать бизнес логикой и должно быть помещено в Model. Так как react — это только треть MVC пирога', ' для создания пользовательских интерфейсов', ' то нам потребуется еще что-то для бизнес логики. Некоторые используют паттерны redux или flux', ' некоторые — backbone.js или даже angular', ' мы же будем использовать mobx.js в качестве Model. \n']"
['\n      NIX_Solutions\n    '],"['Больше', ' чем React: Почему не следует использовать ReactJS для сложных интерактивных фронтенд-проектов']",['Блог компании NIX Программирование *ReactJS *'],"['Перевод статьи', ' посвящённой использованию ReactJS для создания фронтенда.\n\r\nReact — отличный инструмент для реализации простых интерактивных веб-сайтов. Но насколько он применим в сложных фронтенд-проектах? Работает ли он там столь же хорошо?\n\r\nВ этой статье мы рассмотрим некоторые проблемы', ' с которыми можно столкнуться при использовании React во время веб-разработки. Также вы узнаете', ' почему автор статьи решил разработать новый фреймворк на Scala', ' благодаря которому удалось сократить количество строк кода с 30 тысяч (на React) до одной тысячи.\n']"
['\n      Carduelis\n    '],['Как мы на React 16 переезжали'],['JavaScript *ReactJS *'],"[""\n\r\nFacebook переписал большую часть React'а и выпустил 16 версию. React 16 был очень ожидаемым обновлением"", ' особенно ввиду нового способа рендеринга Fiber', ' который сильно повышает производительность. Команда разработчиков React в последней версии усердно помечала методы и пакеты устаревшими (deprecated)', ' и мы видели их предупреждения в консоли. В действительности же', ' миграция не так проста для большого проекта.\n\r\nМы в Discord только что запустили обновление нашего приложения на основе React 16 и хотим поделиться нашим опытом', ' который мы получили в ходе миграции.']"
['\n      megazazik\n    '],['Как избежать проблем с производительностью при создании React-приложений'],['Блог компании Туту.ру Высокая производительность *Разработка веб-сайтов *JavaScript *ReactJS *'],"['\nО производительности react\nReact не зря считается очень производительным фреймворком. Он позволяет создавать быстрые динамические страницы с большим количеством элементов. \nНо бывают ситуации', ' когда элементов на странице становится очень много и встроенной производительности react не хватает. Тогда приходится применять различные приемы для оптимизации. ']"
['\n      SerVB\n    '],['Практика по Котлину: Создание веб приложений на React и Kotlin/JS'],['Веб-дизайн *Разработка веб-сайтов *JavaScript *ReactJS *Kotlin *'],"['От переводчика.\nПривет! Про Kotlin есть стереотип', ' будто бы это язык для разработки только под Android. На самом деле', ' это совсем не так: язык официально поддерживает несколько платформ (JVM', ' JS', ' Native)', ' а также умеет работать с библиотеками для этих платформ', ' написанных на других языках. Такая поддержка ""мультиплатформенности"" позволяет не только писать всевозможные проекты на одном языке в единой форме', ' но и переиспользовать код при написании одного проекта под разные платформы.\nВ этой статье я перевожу официальный туториал Kotlin Hands-On о создании веб сайтов на Котлине. Мы рассмотрим многие аспекты программирования на Kotlin/JS и поймем', ' как работать не только с чистым DOM. В основном будем говорить о React JS', ' но также коснемся системы сборки Gradle', ' использования зависимостей из NPM', ' обращения к REST API', ' деплоя на Heroku', ' и в итоге сделаем приложение-видеоплеер.\nТекст ориентирован на тех', ' кто немного знает Котлин и не знает или почти не знает Реакт. Если вы более опытны по этим вопросам', ' то части туториала могут показаться вам чрезмерно разжеванными.\n']"
['\n      owlofmacloud\n    '],"['Немного о том', ' как работает виртуальный DOM в React']",['Блог компании Маклауд Разработка веб-сайтов *HTML *ReactJS *'],"['\nНастоящий или реальный (real) DOM\nDOM расшифровывается как Document Object Model (объектная модель документа). Проще говоря', ' DOM — это представление пользовательского интерфейса (user interface', ' UI) в приложении. При каждом изменении UI', ' DOM также обновляется для отображения этих изменений. Частые манипуляции с DOM негативно влияют на производительность.\nЧто делает манипуляции с DOM медленными?\nDOM представляет собой древовидную структуру данных. Поэтому изменения и обновления самого DOM являются достаточно быстрыми. Но после изменения обновленный элемент и все его потомки (дочерние элементы) должны быть повторно отрисованы (отрендерены) для обновления UI приложения. Повторный рендеринг — очень медленный процесс. Таким образом', ' чем больше у нас компонентов UI', ' тем более дорогими с точки зрения производительности являются обновления DOM.\nМанипуляции с DOM являются сердцем современного интерактивного веба. К сожалению', ' они намного медленнее большинства JavaScript-операций. Ситуация усугубляется тем', ' что многие JavaScript-фреймворки обновляют DOM чаще', ' чем необходимо.\nДопустим', ' у нас имеется список из 10 элементов. Мы изменяем первый элемент. Большинство фреймворков перестроят весь список. Это в 10 раз больше работы', ' чем требуется! Только 1 элемент изменился', ' остальные 9 остались прежними.\nПерестроение списка — это легкая задача для браузера', ' но современные веб-сайты могут осуществлять огромное количество манипуляций с DOM. Поэтому неэффективное обновление часто становится серьезной проблемой. Для решения данной проблемы команда React популяризовала нечто под названием виртуальный (virtual) DOM (VDOM).']"
['\n      DanilaReutov\n    '],['Создаем текстовый редактор на React.js'],['Блог компании KTS JavaScript *ReactJS *'],"['Привет! Меня зовут Данила', ' и я фронтенд-разработчик в\xa0KTS.Однажды в одном из своих проектов мне потребовалось реализовать кастомный текстовый редактор на React.js. Задача показалась мне довольно интересной', ' и я решил рассказать о своем опыте. В статье я поэтапно покажу', ' как можно создать текстовый редактор с базовыми функциями.Надеюсь', ' информация будет полезной и сэкономит кому-то время и силы.']"
['\n      webMarshal\n    '],['Мир недокументированного React.js. Context'],['JavaScript *ReactJS *'],"['Предлагаю читателям «Хабрахабра» перевод статьи «The land of undocumented react.js: The Context».\n\r\nЕсли мы взглянем на React компонент то мы можем увидеть некоторые свойства.\n\nState\r\nДа', ' каждый React компонент имеет state. Это что-то внутри компонента. Только сам компонент может читать и писать в свой собственный state и как видно из названия — state используется для хранения состояния компонента (Привет', ' Кэп). Не интересно', ' давайте дальше.\n\nProps\r\nИли', ' скажем', ' properties. Props — это данные', ' которые оказывают влияние на отображение и поведение компонента. Props могут быть как опциональны так и обязательны и они обеспечиваются через родительский компонент. В идеале', ' если Вы передаете своему компоненту одинаковые Props — он отрендерит одно и тоже. Не интересно', ' давайте двигаться дальше.\n\nContext\r\nВстречайте context', ' причину', ' по которой я написал этот пост. Context — это недокументированная особенность React и похожа на props', ' но разница в том', ' что props передается исключительно от родительского компонента к дочернему и они не распространяются вниз по иерархии', ' в то время как context просто может быть запрошен в дочернем элементе.\n']"
['\n      complit-s\n    '],['Java и isomorphic React'],['Java *ReactJS *'],"['\n\r\nДля создания изоморфных приложений на React обычно используется Node.js в качестве серверной части. Но', ' если сервер пишется на Java', ' то не стоит отказываться от изоморфного приложения: в Java входит встроенный javascript движок (Nashorn)', ' который вполне справится с серверным рендерингом HTML с помощью React.\n\r\nКод приложения', ' демонстрирующего серверный рендеринг React с сервером на Java', ' находится на GitHub. В статье буду рассмотрены:\n\n\nСервер на Java в стиле микросервиса на основе Netty и JAX-RS (в реализации Resteasy) для обработки web-запросов', ' с возможностью запуска в Docker.\nDependency Injection с использованием библиотеки CDI (в реализации Weld SE).\nСборка javascript бандла с помощью Webpack 2.\nНастройка редеринга HTML на сервере с помощью React.\nЗапуск отладки с поддержкой «горячей» перезагрузки страниц и стилей с использованием Webpack dev server.\n']"
['\n      ph_piter\n    '],['React и Vue: сильные стороны'],['Блог компании Издательский дом «Питер» Разработка веб-сайтов *JavaScript *Разработка мобильных приложений *VueJS *'],"[' Здравствуйте', ' коллеги. Мы возобновляем наши переводные публикации. Сегодняшний текст анонсирует давно назревшую новинку по веб-разработке', ' посвященную ультрасовременной библиотеке Vue.js. Учитывая', ' что у нас в ассортименте имеется сразу три отличные книги по React', ' а также книга по GraphQL', ' эта книга', ' несомненно', ' составит им хорошую компанию. О сильных сторонах Vue по сравнению с React – читайте под катом.\n\r\nМногие разработчики любят сравнивать React и Vue. Кто-то останавливается на одном из этих фреймворков и упрямо придерживается его', ' даже не потрудившись познакомиться с другой библиотекой', ' которую когда-то отбраковал. Зачастую дело во времени: чтобы по-настоящему освоить все входы и выходы системы', ' с нею нужно работать', ' бороться и расти.\n\r\nКонечно', ' неэффективно распыляться между схожими инструментами', ' но разве вам не любопытно? Мне – любопытно.']"
['\n      MaxRokatansky\n    '],['6 лучших практик React в 2021 году'],['Блог компании OTUS ReactJS *'],"['Написание четкого и удобочитаемого кода необходимо для улучшения его качества. Кроме того', ' чистый код легче тестировать. Нет причин не потратить пять лишних минут на рефакторинг кода', ' чтобы сделать его более читаемым.В этой статье рассматриваются шесть лучших практик рефакторинга 2021 года', ' чтобы улучшить свой код. ']"
['\n      webMarshal\n    '],['Как я перестал беспокоиться и полюбил React'],['JavaScript *ReactJS *'],"['Предлагаю читателям «Хабрахабра» перевод статьи «How I learned to stop worrying and love React».\n\r\nЕсли вы спросите меня', ' что я думал о React два месяца назад', ' я бы сказал…\nГде мои шаблоны? Что этот сумасшедший HTML делает в моем JavaScript? JSX выглядит странно! Скорее! Сжечь это!\n\n\r\nЭто потому', ' что я его не понял.\n\r\nНо я уверяю', ' React — это определенно правильный путь. Пожалуйста', ' выслушайте меня.\n']"
['\n      ph_piter\n    '],"['Книга «React быстро. Веб-приложения на React', ' JSX', ' Redux и GraphQL»']",['Блог компании Издательский дом «Питер» Профессиональная литература ReactJS *'],"[' Привет', ' Хаброжители! Оригинальное издание вышло осенью 2017 года', ' но до сих пор считается лучшей книгой для знакомства с React. Автор постоянно обновляет и дорабатывает код к книги в репозитории Github.\n\r\nПредлагаем в посте ознакомится с отрывком «Состояния и их роль в интерактивной природе React»\n\r\nЕсли бы вам пришлось прочитать в этой книге всего одну главу — стоило бы выбрать именно эту! Без состояний компоненты React остаются не более чем усовершенствованными статическими шаблонами. Надеюсь', ' вы разделяете мой энтузиазм', ' потому что понимание концепций этой главы позволит вам строить намного более интересные приложения.\n']"
['\n      ru_vds\n    '],['Разработка приложения для потокового вещания с помощью Node.js и React'],['Блог компании RUVDS.com Разработка веб-сайтов *JavaScript *Node.JS *ReactJS *'],"['Автор материала', ' перевод которого мы сегодня публикуем', ' говорит', ' что работает над приложением', ' которое позволяет организовывать потоковое вещание (стриминг) того', ' что происходит на рабочем столе пользователя.\n\n\n\r\nПриложение принимает от стримера поток в формате RTMP и преобразует его в HLS-поток', ' который может быть воспроизведён в браузерах зрителей. В этой статье будет рассказано о том', ' как можно создать собственное стриминговое приложение с использованием Node.js и React. Если вы привыкли', ' увидев заинтересовавшую вас идею', ' сразу же погружаться в код', ' можете прямо сейчас заглянуть в этот репозиторий.']"
['\n      smartdev\n    '],['[По докам] Flutter. Часть 3. Для разработчиков React Native'],['Блог компании FUNCORP JavaScript *Разработка под iOS *Разработка под Android *Flutter *'],"['Продолжаем лаконичную интерпретацию официальной документации Flutter в формате «вопрос-ответ». Вот уже 3-я часть', ' и она в большей степени будет полезна React Native-разработчикам. В данной интерпретации вы можете найти ответы на частые вопросы', ' а также определить для себя', ' сколько усилий нужно приложить', ' чтобы перейти с одного кроссплатформенного фреймворка на другой.\n\n']"
['\n      owlofmacloud\n    '],"['Реализация подписки на обновления с помощью Google Sheets', ' Netlify Functions и React. Часть 1']",['Блог компании Маклауд Разработка веб-сайтов *ReactJS *Serverless *'],"['\nВ этом туториале мы реализуем ~~Real World App~~ — подписку на обновления с помощью гугл таблиц', ' бессерверных функций и реакта.\nОсновной функционал нашего приложения будет следующим:\n\nна главной странице отображается приветствие и предложение подписаться на обновления\nпри нажатии на кнопку ""Подписаться""', ' пользователь попадает на страницу с формой', ' содержащей два поля: имя и адрес электронной почты\nдля защиты от ботов используется гугл рекапча 2 версии\nпри заполнении полей и прохождения проверки разблокируется кнопка ""Подписаться""\nпри нажатии этой кнопки данные пользователя отправляются в таблицу с помощью бессерверной функции\n\nДополнительный функционал:\n\nс помощью скрипта осуществляется автоматическая рассылка уведомлений\nв рассылаемых письмах содержится ссылка на отписку от обновлений\nпри переходе по этой ссылке адрес электронной почты передается бессерверной функции', ' с помощью которой из таблиц удаляется соответствующая строка — пользователь больше не будет получать уведомлений\n\nВ первой части туториала мы реализуем основной функционал', ' во второй — дополнительный.']"
['\n      Tetragius\n    '],['Как написать свою онлайн-песочницу с поддержкой React и популярных библиотек'],['Блог компании Райффайзенбанк JavaScript *TypeScript *'],"['Привет', ' меня зовут Илья', ' я лидер сообщества фронтенд-разработки в Райффайзенбанке. Среди моих задач — проведение собеседований', ' при этом хочется', ' чтобы процесс был эффективным', ' продуктивным и полезным.\xa0Для проведения таких собеседований нам нужно выбрать классный инструмент для совместного написания кода. Изучив рынок инструментов', ' мы пришли к выводу', ' что из-за безопасности и функциональности проще написать свое решение.\xa0Под катом я рассказываю', ' как создать главный элемент платформы совместного написания и проверки кода — онлайн-песочницу. Она будет поддерживать один из самых популярных фреймворков и несколько библиотек для него', ' что достаточно для проверки необходимых навыков и умений во время собеседования. ']"
['\n      comerc\n    '],['10 шагов настройки Create React App + TypeScript + Ant-Design'],['Разработка веб-сайтов *JavaScript *ReactJS *'],"['В какой-то момент борьбы со Flow-Type на VSCode', ' я согласился', ' что нужно переезжать на TypeScript. Поддержка Flow-Type обеспечивается сторонним плагином и совсем-совсем не устраивает. Если файл невалиден с точки зрения Flow-Type', ' то переходы внутри кода между файлами перестают работать', ' например. А возвращаться на WebStorm после знакомства с VSCode — я не могу себя заставить. Microsoft', ' как обычно', ' затягивает полностью. Любишь VSCode', ' получи TypeScript. \nЕсли бы мне кто сказал год назад', ' что я вернусь в поклонники Microsoft — сложно было такое представить. Но случаются и более удивительные вещи. Я в полном восторге от качества китайского набора React-компонентов от Ant-Design. И хотя он написан на TypeScript', ' чтобы его прикрурить', ' нужен babel-plugin-import.\nНо как же остаться на Create React App (CRA) — у форка для TypeScript (CRA-TS) выпилили Babel. Поддерживать собственную вариацию CRA представляется безумием. Многообещающий Preact-CLI (как замена CRA) не обеспечивает необходимый уровень совместимости с React. Но', ' играясь с Preact-CLI', ' заметил', ' что preact.config.js очень похож на react-app-rewired', ' которым я активно пользуюсь для обхода ограничений конфигурации Webpack в CRA. Сопоставил этот факт с идеей перевода CRA-TS c ts-loader на awesome-typescript-loader', ' внутри которого можно включить Babel. И вуаля!']"
['\n      ars-anosov\n    '],['Готовим свой UI-интерфейс к Zabbix API средствами React component'],['Разработка веб-сайтов *'],"['Всем привет! Все началось с интеграции телефонной платформы в корпоративный сайт.\n\r\nWEB-разработка поразила разнообразием подходов и методов реализации. Стек технологий пестрит разнообразием', ' выбор инструментов определяет стиль разработки', ' модульность или закостенелость проекта.\n\r\nПро телефонную платформу я напишу в следующий раз. Сильный уклон в VoIP-специфику отвлечет от главного — методов разработки современного SPA-приложения.\n\r\nВ статье будет описан процесс внедрения стороннего сервиса в существующую рабочую среду.\n\r\nСегодня поиграемся с Zabbix-API.\n\n']"
['\n      bestinterviewquestion\n    '],['Angular vs React: Complete Library with a Framework'],['Angular *'],"['\nGoogle and Facebook are the computerized behemoths who dependably contend. Their answers for designers Angular and React appear matches as well. Demand helps look at both. The article was initially posted here \nToward the start of its advancement', ' SPA web stages did not have an adaptable however basic framework for making the ventures that could revise and', ' now and again', ' supplant both portable and work area applications. Around then', ' a client whose issue was very basic needed to discover an application equipped for tackling the issue. Over the span of time', ' the advancements continued pushing ahead making web administrations gain ubiquity since the last had no should be introduced. What was required is simply to visit a site for getting to some administration. Already', ' such errands could be tackled through sites written in either ActionScript or Java. Nonetheless', ' those frameworks required to introduce either Flash or Java being in the meantime a long way from the speed expected by the clients.@Angular \nBy then', ' JavaScript advanced adequately to desert its adversaries because of a fast', ' improvement straightforwardness', "" and ceaseless help of the programs' engineers. The period of JavaScript began inciting such definition as SPA (Single Page Application) which gave another way to deal with the advancement of web stages. Not at all like its precursor MPA (Multi-Page Application)"", "" SPA permitted a web administration to work a lot quicker just as to give it an increasingly refined usefulness fit for changing progressively as per clients' needs. The greatest disadvantage was in unadulterated JavaScript which couldn't give a quick improvement when even a crude SPA web administration required a ton of time to be made. That is the reason Google chosen to help the methodology with a system that could enable different organizations to create muddled web administrations without investing a lot of energy for it. ""]"
['\n      malstoun\n    '],['Как устроен ReactJS. Пакет React'],['JavaScript *ReactJS *'],"['Большинство людей', ' работающих во фронтенде', ' так или иначе сталкивались с реактом. Это JavaScript библиотека', ' помогающая создавать крутые интерфейсы', ' в последние годы набрала огромную популярность. При этом', ' не так много людей знает', ' как она работает внутри.\nВ этой серии статей мы почитаем код и попробуем разобраться за что отвечают пакеты', ' которые лежат у реакта под капотом', ' для чего они используются и как они работают. Самые основные', ' которые мы используем в браузере', ' – это react', ' react-dom', ' events и react-reconciler.\nБудем двигаться по порядку и сегодня у нас статья про пакет react. Кому интересно', ' что же есть в этом пакете', ' – заходите под кат.']"
['\n      IvanKalinin\n    '],['Встроенная альтернатива Redux с React Context и хуками'],['ReactJS *'],"['От переводчика:\n\r\nПредставляю вольный перевод статьи о том', ' как реализовать эффективное решение для замены Redux контекстом React и хуками. Указание на ошибки в переводе или тексте приветствуются. Приятного просмотра.\n\n\r\nС момента выхода нового Context API в React 16.3.0 многие люди задавали себе вопрос', ' достаточно ли хорош новый API', ' чтоб рассматривать его как замену Redux? Я думал о том же', ' но до конца не понимал даже после выхода версии 16.8.0 с хуками. Я стараюсь пользоваться популярными технологиями', ' путь даже не всегда понимая всего спектра проблем', ' которые они решают', ' так что я слишком сильно привык к Redux.\n\r\nИ вот так получилось', ' что я подписался на новостную рассылку от Кента Си Доддс (Kent C. Dodds’) и обнаружил несколько email на тему контекста и управлением состоянием. Я начал читать…. и читать… и спустя 5 блог постов что-то щелкнуло.\n\r\nЧтобы понять все основные концепты стоящие за этим', ' мы сделаем кнопку', ' по клику на которую мы будем получить анекдоты с icanhazdadjoke и отображать их. Это небольшой', ' но достаточный пример.']"
